'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3053
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("MonthlyCostTrendReport"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class MonthlyCostTrendReport
    Inherits Global.System.Data.DataSet
    
    Private tableDataSetMonthlyCostTrend As DataSetMonthlyCostTrendDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("DataSetMonthlyCostTrend")) Is Nothing) Then
                MyBase.Tables.Add(New DataSetMonthlyCostTrendDataTable(ds.Tables("DataSetMonthlyCostTrend")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DataSetMonthlyCostTrend() As DataSetMonthlyCostTrendDataTable
        Get
            Return Me.tableDataSetMonthlyCostTrend
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As MonthlyCostTrendReport = CType(MyBase.Clone,MonthlyCostTrendReport)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("DataSetMonthlyCostTrend")) Is Nothing) Then
                MyBase.Tables.Add(New DataSetMonthlyCostTrendDataTable(ds.Tables("DataSetMonthlyCostTrend")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableDataSetMonthlyCostTrend = CType(MyBase.Tables("DataSetMonthlyCostTrend"),DataSetMonthlyCostTrendDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDataSetMonthlyCostTrend) Is Nothing) Then
                Me.tableDataSetMonthlyCostTrend.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "MonthlyCostTrendReport"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/MonthlyCostTrendReport.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableDataSetMonthlyCostTrend = New DataSetMonthlyCostTrendDataTable
        MyBase.Tables.Add(Me.tableDataSetMonthlyCostTrend)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDataSetMonthlyCostTrend() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As MonthlyCostTrendReport = New MonthlyCostTrendReport
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub DataSetMonthlyCostTrendRowChangeEventHandler(ByVal sender As Object, ByVal e As DataSetMonthlyCostTrendRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DataSetMonthlyCostTrendDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnIM_INVENTORY_INDEX As Global.System.Data.DataColumn
        
        Private columnIC_INVENTORY_NAME As Global.System.Data.DataColumn
        
        Private columnMONTHCONSUMPTION As Global.System.Data.DataColumn
        
        Private columnIM_ITEM_CODE As Global.System.Data.DataColumn
        
        Private columnPM_BUDGET_PRICE As Global.System.Data.DataColumn
        
        Private columnPM_ACCT_CODE As Global.System.Data.DataColumn
        
        Private columnPM_UOM As Global.System.Data.DataColumn
        
        Private columnPUR_SPEC_NO As Global.System.Data.DataColumn
        
        Private columnPAST_1_MTH_UG As Global.System.Data.DataColumn
        
        Private columnPAST_2_MTH_UG As Global.System.Data.DataColumn
        
        Private columnPAST_3_MTH_UG As Global.System.Data.DataColumn
        
        Private columnPAST_4_MTH_UG As Global.System.Data.DataColumn
        
        Private columnPAST_5_MTH_UG As Global.System.Data.DataColumn
        
        Private columnPAST_6_MTH_UG As Global.System.Data.DataColumn
        
        Private columnPAST_1_MTH_MA As Global.System.Data.DataColumn
        
        Private columnPAST_2_MTH_MA As Global.System.Data.DataColumn
        
        Private columnPAST_3_MTH_MA As Global.System.Data.DataColumn
        
        Private columnPAST_4_MTH_MA As Global.System.Data.DataColumn
        
        Private columnPAST_5_MTH_MA As Global.System.Data.DataColumn
        
        Private columnPAST_6_MTH_MA As Global.System.Data.DataColumn
        
        Private columnPAST_1_MTH_LC As Global.System.Data.DataColumn
        
        Private columnPAST_2_MTH_LC As Global.System.Data.DataColumn
        
        Private columnPAST_3_MTH_LC As Global.System.Data.DataColumn
        
        Private columnPAST_4_MTH_LC As Global.System.Data.DataColumn
        
        Private columnPAST_5_MTH_LC As Global.System.Data.DataColumn
        
        Private columnPAST_6_MTH_LC As Global.System.Data.DataColumn
        
        Private columnIC_inventory_type As Global.System.Data.DataColumn
        
        Private columnPM_SPEC1 As Global.System.Data.DataColumn
        
        Private columnPM_SPEC2 As Global.System.Data.DataColumn
        
        Private columnPM_SPEC3 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DataSetMonthlyCostTrend"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_INVENTORY_INDEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_INVENTORY_INDEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IC_INVENTORY_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIC_INVENTORY_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MONTHCONSUMPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMONTHCONSUMPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_ITEM_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_ITEM_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PM_BUDGET_PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPM_BUDGET_PRICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PM_ACCT_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPM_ACCT_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PM_UOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPM_UOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PUR_SPEC_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPUR_SPEC_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PAST_1_MTH_UGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAST_1_MTH_UG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PAST_2_MTH_UGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAST_2_MTH_UG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PAST_3_MTH_UGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAST_3_MTH_UG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PAST_4_MTH_UGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAST_4_MTH_UG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PAST_5_MTH_UGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAST_5_MTH_UG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PAST_6_MTH_UGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAST_6_MTH_UG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PAST_1_MTH_MAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAST_1_MTH_MA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PAST_2_MTH_MAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAST_2_MTH_MA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PAST_3_MTH_MAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAST_3_MTH_MA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PAST_4_MTH_MAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAST_4_MTH_MA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PAST_5_MTH_MAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAST_5_MTH_MA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PAST_6_MTH_MAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAST_6_MTH_MA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PAST_1_MTH_LCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAST_1_MTH_LC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PAST_2_MTH_LCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAST_2_MTH_LC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PAST_3_MTH_LCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAST_3_MTH_LC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PAST_4_MTH_LCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAST_4_MTH_LC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PAST_5_MTH_LCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAST_5_MTH_LC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PAST_6_MTH_LCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAST_6_MTH_LC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IC_inventory_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIC_inventory_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PM_SPEC1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPM_SPEC1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PM_SPEC2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPM_SPEC2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PM_SPEC3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPM_SPEC3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DataSetMonthlyCostTrendRow
            Get
                Return CType(Me.Rows(index),DataSetMonthlyCostTrendRow)
            End Get
        End Property
        
        Public Event DataSetMonthlyCostTrendRowChanging As DataSetMonthlyCostTrendRowChangeEventHandler
        
        Public Event DataSetMonthlyCostTrendRowChanged As DataSetMonthlyCostTrendRowChangeEventHandler
        
        Public Event DataSetMonthlyCostTrendRowDeleting As DataSetMonthlyCostTrendRowChangeEventHandler
        
        Public Event DataSetMonthlyCostTrendRowDeleted As DataSetMonthlyCostTrendRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDataSetMonthlyCostTrendRow(ByVal row As DataSetMonthlyCostTrendRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDataSetMonthlyCostTrendRow( _
                    ByVal IM_INVENTORY_INDEX As String,  _
                    ByVal IC_INVENTORY_NAME As String,  _
                    ByVal MONTHCONSUMPTION As String,  _
                    ByVal IM_ITEM_CODE As String,  _
                    ByVal PM_BUDGET_PRICE As String,  _
                    ByVal PM_ACCT_CODE As String,  _
                    ByVal PM_UOM As String,  _
                    ByVal PUR_SPEC_NO As String,  _
                    ByVal PAST_1_MTH_UG As Decimal,  _
                    ByVal PAST_2_MTH_UG As Decimal,  _
                    ByVal PAST_3_MTH_UG As Decimal,  _
                    ByVal PAST_4_MTH_UG As Decimal,  _
                    ByVal PAST_5_MTH_UG As Decimal,  _
                    ByVal PAST_6_MTH_UG As Decimal,  _
                    ByVal PAST_1_MTH_MA As Decimal,  _
                    ByVal PAST_2_MTH_MA As Decimal,  _
                    ByVal PAST_3_MTH_MA As Decimal,  _
                    ByVal PAST_4_MTH_MA As Decimal,  _
                    ByVal PAST_5_MTH_MA As Decimal,  _
                    ByVal PAST_6_MTH_MA As Decimal,  _
                    ByVal PAST_1_MTH_LC As Decimal,  _
                    ByVal PAST_2_MTH_LC As Decimal,  _
                    ByVal PAST_3_MTH_LC As Decimal,  _
                    ByVal PAST_4_MTH_LC As Decimal,  _
                    ByVal PAST_5_MTH_LC As Decimal,  _
                    ByVal PAST_6_MTH_LC As Decimal,  _
                    ByVal IC_inventory_type As String,  _
                    ByVal PM_SPEC1 As String,  _
                    ByVal PM_SPEC2 As String,  _
                    ByVal PM_SPEC3 As String) As DataSetMonthlyCostTrendRow
            Dim rowDataSetMonthlyCostTrendRow As DataSetMonthlyCostTrendRow = CType(Me.NewRow,DataSetMonthlyCostTrendRow)
            Dim columnValuesArray() As Object = New Object() {IM_INVENTORY_INDEX, IC_INVENTORY_NAME, MONTHCONSUMPTION, IM_ITEM_CODE, PM_BUDGET_PRICE, PM_ACCT_CODE, PM_UOM, PUR_SPEC_NO, PAST_1_MTH_UG, PAST_2_MTH_UG, PAST_3_MTH_UG, PAST_4_MTH_UG, PAST_5_MTH_UG, PAST_6_MTH_UG, PAST_1_MTH_MA, PAST_2_MTH_MA, PAST_3_MTH_MA, PAST_4_MTH_MA, PAST_5_MTH_MA, PAST_6_MTH_MA, PAST_1_MTH_LC, PAST_2_MTH_LC, PAST_3_MTH_LC, PAST_4_MTH_LC, PAST_5_MTH_LC, PAST_6_MTH_LC, IC_inventory_type, PM_SPEC1, PM_SPEC2, PM_SPEC3}
            rowDataSetMonthlyCostTrendRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDataSetMonthlyCostTrendRow)
            Return rowDataSetMonthlyCostTrendRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DataSetMonthlyCostTrendDataTable = CType(MyBase.Clone,DataSetMonthlyCostTrendDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DataSetMonthlyCostTrendDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnIM_INVENTORY_INDEX = MyBase.Columns("IM_INVENTORY_INDEX")
            Me.columnIC_INVENTORY_NAME = MyBase.Columns("IC_INVENTORY_NAME")
            Me.columnMONTHCONSUMPTION = MyBase.Columns("MONTHCONSUMPTION")
            Me.columnIM_ITEM_CODE = MyBase.Columns("IM_ITEM_CODE")
            Me.columnPM_BUDGET_PRICE = MyBase.Columns("PM_BUDGET_PRICE")
            Me.columnPM_ACCT_CODE = MyBase.Columns("PM_ACCT_CODE")
            Me.columnPM_UOM = MyBase.Columns("PM_UOM")
            Me.columnPUR_SPEC_NO = MyBase.Columns("PUR_SPEC_NO")
            Me.columnPAST_1_MTH_UG = MyBase.Columns("PAST_1_MTH_UG")
            Me.columnPAST_2_MTH_UG = MyBase.Columns("PAST_2_MTH_UG")
            Me.columnPAST_3_MTH_UG = MyBase.Columns("PAST_3_MTH_UG")
            Me.columnPAST_4_MTH_UG = MyBase.Columns("PAST_4_MTH_UG")
            Me.columnPAST_5_MTH_UG = MyBase.Columns("PAST_5_MTH_UG")
            Me.columnPAST_6_MTH_UG = MyBase.Columns("PAST_6_MTH_UG")
            Me.columnPAST_1_MTH_MA = MyBase.Columns("PAST_1_MTH_MA")
            Me.columnPAST_2_MTH_MA = MyBase.Columns("PAST_2_MTH_MA")
            Me.columnPAST_3_MTH_MA = MyBase.Columns("PAST_3_MTH_MA")
            Me.columnPAST_4_MTH_MA = MyBase.Columns("PAST_4_MTH_MA")
            Me.columnPAST_5_MTH_MA = MyBase.Columns("PAST_5_MTH_MA")
            Me.columnPAST_6_MTH_MA = MyBase.Columns("PAST_6_MTH_MA")
            Me.columnPAST_1_MTH_LC = MyBase.Columns("PAST_1_MTH_LC")
            Me.columnPAST_2_MTH_LC = MyBase.Columns("PAST_2_MTH_LC")
            Me.columnPAST_3_MTH_LC = MyBase.Columns("PAST_3_MTH_LC")
            Me.columnPAST_4_MTH_LC = MyBase.Columns("PAST_4_MTH_LC")
            Me.columnPAST_5_MTH_LC = MyBase.Columns("PAST_5_MTH_LC")
            Me.columnPAST_6_MTH_LC = MyBase.Columns("PAST_6_MTH_LC")
            Me.columnIC_inventory_type = MyBase.Columns("IC_inventory_type")
            Me.columnPM_SPEC1 = MyBase.Columns("PM_SPEC1")
            Me.columnPM_SPEC2 = MyBase.Columns("PM_SPEC2")
            Me.columnPM_SPEC3 = MyBase.Columns("PM_SPEC3")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnIM_INVENTORY_INDEX = New Global.System.Data.DataColumn("IM_INVENTORY_INDEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_INVENTORY_INDEX)
            Me.columnIC_INVENTORY_NAME = New Global.System.Data.DataColumn("IC_INVENTORY_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIC_INVENTORY_NAME)
            Me.columnMONTHCONSUMPTION = New Global.System.Data.DataColumn("MONTHCONSUMPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMONTHCONSUMPTION)
            Me.columnIM_ITEM_CODE = New Global.System.Data.DataColumn("IM_ITEM_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_ITEM_CODE)
            Me.columnPM_BUDGET_PRICE = New Global.System.Data.DataColumn("PM_BUDGET_PRICE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPM_BUDGET_PRICE)
            Me.columnPM_ACCT_CODE = New Global.System.Data.DataColumn("PM_ACCT_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPM_ACCT_CODE)
            Me.columnPM_UOM = New Global.System.Data.DataColumn("PM_UOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPM_UOM)
            Me.columnPUR_SPEC_NO = New Global.System.Data.DataColumn("PUR_SPEC_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPUR_SPEC_NO)
            Me.columnPAST_1_MTH_UG = New Global.System.Data.DataColumn("PAST_1_MTH_UG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAST_1_MTH_UG)
            Me.columnPAST_2_MTH_UG = New Global.System.Data.DataColumn("PAST_2_MTH_UG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAST_2_MTH_UG)
            Me.columnPAST_3_MTH_UG = New Global.System.Data.DataColumn("PAST_3_MTH_UG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAST_3_MTH_UG)
            Me.columnPAST_4_MTH_UG = New Global.System.Data.DataColumn("PAST_4_MTH_UG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAST_4_MTH_UG)
            Me.columnPAST_5_MTH_UG = New Global.System.Data.DataColumn("PAST_5_MTH_UG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAST_5_MTH_UG)
            Me.columnPAST_6_MTH_UG = New Global.System.Data.DataColumn("PAST_6_MTH_UG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAST_6_MTH_UG)
            Me.columnPAST_1_MTH_MA = New Global.System.Data.DataColumn("PAST_1_MTH_MA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAST_1_MTH_MA)
            Me.columnPAST_2_MTH_MA = New Global.System.Data.DataColumn("PAST_2_MTH_MA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAST_2_MTH_MA)
            Me.columnPAST_3_MTH_MA = New Global.System.Data.DataColumn("PAST_3_MTH_MA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAST_3_MTH_MA)
            Me.columnPAST_4_MTH_MA = New Global.System.Data.DataColumn("PAST_4_MTH_MA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAST_4_MTH_MA)
            Me.columnPAST_5_MTH_MA = New Global.System.Data.DataColumn("PAST_5_MTH_MA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAST_5_MTH_MA)
            Me.columnPAST_6_MTH_MA = New Global.System.Data.DataColumn("PAST_6_MTH_MA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAST_6_MTH_MA)
            Me.columnPAST_1_MTH_LC = New Global.System.Data.DataColumn("PAST_1_MTH_LC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAST_1_MTH_LC)
            Me.columnPAST_2_MTH_LC = New Global.System.Data.DataColumn("PAST_2_MTH_LC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAST_2_MTH_LC)
            Me.columnPAST_3_MTH_LC = New Global.System.Data.DataColumn("PAST_3_MTH_LC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAST_3_MTH_LC)
            Me.columnPAST_4_MTH_LC = New Global.System.Data.DataColumn("PAST_4_MTH_LC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAST_4_MTH_LC)
            Me.columnPAST_5_MTH_LC = New Global.System.Data.DataColumn("PAST_5_MTH_LC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAST_5_MTH_LC)
            Me.columnPAST_6_MTH_LC = New Global.System.Data.DataColumn("PAST_6_MTH_LC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAST_6_MTH_LC)
            Me.columnIC_inventory_type = New Global.System.Data.DataColumn("IC_inventory_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIC_inventory_type)
            Me.columnPM_SPEC1 = New Global.System.Data.DataColumn("PM_SPEC1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPM_SPEC1)
            Me.columnPM_SPEC2 = New Global.System.Data.DataColumn("PM_SPEC2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPM_SPEC2)
            Me.columnPM_SPEC3 = New Global.System.Data.DataColumn("PM_SPEC3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPM_SPEC3)
            Me.columnIM_INVENTORY_INDEX.AllowDBNull = false
            Me.columnIC_INVENTORY_NAME.AllowDBNull = false
            Me.columnMONTHCONSUMPTION.AllowDBNull = false
            Me.columnIM_ITEM_CODE.AllowDBNull = false
            Me.columnPM_BUDGET_PRICE.AllowDBNull = false
            Me.columnPM_ACCT_CODE.AllowDBNull = false
            Me.columnPM_UOM.AllowDBNull = false
            Me.columnPUR_SPEC_NO.AllowDBNull = false
            Me.columnPAST_1_MTH_UG.AllowDBNull = false
            Me.columnPAST_2_MTH_UG.AllowDBNull = false
            Me.columnPAST_3_MTH_UG.AllowDBNull = false
            Me.columnPAST_4_MTH_UG.AllowDBNull = false
            Me.columnPAST_5_MTH_UG.AllowDBNull = false
            Me.columnPAST_6_MTH_UG.AllowDBNull = false
            Me.columnPAST_1_MTH_MA.AllowDBNull = false
            Me.columnPAST_2_MTH_MA.AllowDBNull = false
            Me.columnPAST_3_MTH_MA.AllowDBNull = false
            Me.columnPAST_4_MTH_MA.AllowDBNull = false
            Me.columnPAST_5_MTH_MA.AllowDBNull = false
            Me.columnPAST_6_MTH_MA.AllowDBNull = false
            Me.columnPAST_1_MTH_LC.AllowDBNull = false
            Me.columnPAST_2_MTH_LC.AllowDBNull = false
            Me.columnPAST_3_MTH_LC.AllowDBNull = false
            Me.columnPAST_4_MTH_LC.AllowDBNull = false
            Me.columnPAST_5_MTH_LC.AllowDBNull = false
            Me.columnPAST_6_MTH_LC.AllowDBNull = false
            Me.columnIC_inventory_type.AllowDBNull = false
            Me.columnPM_SPEC1.AllowDBNull = false
            Me.columnPM_SPEC2.AllowDBNull = false
            Me.columnPM_SPEC3.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDataSetMonthlyCostTrendRow() As DataSetMonthlyCostTrendRow
            Return CType(Me.NewRow,DataSetMonthlyCostTrendRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DataSetMonthlyCostTrendRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DataSetMonthlyCostTrendRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DataSetMonthlyCostTrendRowChangedEvent) Is Nothing) Then
                RaiseEvent DataSetMonthlyCostTrendRowChanged(Me, New DataSetMonthlyCostTrendRowChangeEvent(CType(e.Row,DataSetMonthlyCostTrendRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DataSetMonthlyCostTrendRowChangingEvent) Is Nothing) Then
                RaiseEvent DataSetMonthlyCostTrendRowChanging(Me, New DataSetMonthlyCostTrendRowChangeEvent(CType(e.Row,DataSetMonthlyCostTrendRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DataSetMonthlyCostTrendRowDeletedEvent) Is Nothing) Then
                RaiseEvent DataSetMonthlyCostTrendRowDeleted(Me, New DataSetMonthlyCostTrendRowChangeEvent(CType(e.Row,DataSetMonthlyCostTrendRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DataSetMonthlyCostTrendRowDeletingEvent) Is Nothing) Then
                RaiseEvent DataSetMonthlyCostTrendRowDeleting(Me, New DataSetMonthlyCostTrendRowChangeEvent(CType(e.Row,DataSetMonthlyCostTrendRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDataSetMonthlyCostTrendRow(ByVal row As DataSetMonthlyCostTrendRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As MonthlyCostTrendReport = New MonthlyCostTrendReport
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DataSetMonthlyCostTrendDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class DataSetMonthlyCostTrendRow
        Inherits Global.System.Data.DataRow
        
        Private tableDataSetMonthlyCostTrend As DataSetMonthlyCostTrendDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDataSetMonthlyCostTrend = CType(Me.Table,DataSetMonthlyCostTrendDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_INVENTORY_INDEX() As String
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.IM_INVENTORY_INDEXColumn),String)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.IM_INVENTORY_INDEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IC_INVENTORY_NAME() As String
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.IC_INVENTORY_NAMEColumn),String)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.IC_INVENTORY_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MONTHCONSUMPTION() As String
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.MONTHCONSUMPTIONColumn),String)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.MONTHCONSUMPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_ITEM_CODE() As String
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.IM_ITEM_CODEColumn),String)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.IM_ITEM_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PM_BUDGET_PRICE() As String
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PM_BUDGET_PRICEColumn),String)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PM_BUDGET_PRICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PM_ACCT_CODE() As String
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PM_ACCT_CODEColumn),String)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PM_ACCT_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PM_UOM() As String
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PM_UOMColumn),String)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PM_UOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PUR_SPEC_NO() As String
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PUR_SPEC_NOColumn),String)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PUR_SPEC_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PAST_1_MTH_UG() As Decimal
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PAST_1_MTH_UGColumn),Decimal)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PAST_1_MTH_UGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PAST_2_MTH_UG() As Decimal
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PAST_2_MTH_UGColumn),Decimal)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PAST_2_MTH_UGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PAST_3_MTH_UG() As Decimal
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PAST_3_MTH_UGColumn),Decimal)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PAST_3_MTH_UGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PAST_4_MTH_UG() As Decimal
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PAST_4_MTH_UGColumn),Decimal)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PAST_4_MTH_UGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PAST_5_MTH_UG() As Decimal
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PAST_5_MTH_UGColumn),Decimal)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PAST_5_MTH_UGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PAST_6_MTH_UG() As Decimal
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PAST_6_MTH_UGColumn),Decimal)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PAST_6_MTH_UGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PAST_1_MTH_MA() As Decimal
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PAST_1_MTH_MAColumn),Decimal)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PAST_1_MTH_MAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PAST_2_MTH_MA() As Decimal
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PAST_2_MTH_MAColumn),Decimal)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PAST_2_MTH_MAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PAST_3_MTH_MA() As Decimal
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PAST_3_MTH_MAColumn),Decimal)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PAST_3_MTH_MAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PAST_4_MTH_MA() As Decimal
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PAST_4_MTH_MAColumn),Decimal)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PAST_4_MTH_MAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PAST_5_MTH_MA() As Decimal
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PAST_5_MTH_MAColumn),Decimal)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PAST_5_MTH_MAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PAST_6_MTH_MA() As Decimal
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PAST_6_MTH_MAColumn),Decimal)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PAST_6_MTH_MAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PAST_1_MTH_LC() As Decimal
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PAST_1_MTH_LCColumn),Decimal)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PAST_1_MTH_LCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PAST_2_MTH_LC() As Decimal
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PAST_2_MTH_LCColumn),Decimal)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PAST_2_MTH_LCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PAST_3_MTH_LC() As Decimal
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PAST_3_MTH_LCColumn),Decimal)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PAST_3_MTH_LCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PAST_4_MTH_LC() As Decimal
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PAST_4_MTH_LCColumn),Decimal)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PAST_4_MTH_LCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PAST_5_MTH_LC() As Decimal
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PAST_5_MTH_LCColumn),Decimal)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PAST_5_MTH_LCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PAST_6_MTH_LC() As Decimal
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PAST_6_MTH_LCColumn),Decimal)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PAST_6_MTH_LCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IC_inventory_type() As String
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.IC_inventory_typeColumn),String)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.IC_inventory_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PM_SPEC1() As String
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PM_SPEC1Column),String)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PM_SPEC1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PM_SPEC2() As String
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PM_SPEC2Column),String)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PM_SPEC2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PM_SPEC3() As String
            Get
                Return CType(Me(Me.tableDataSetMonthlyCostTrend.PM_SPEC3Column),String)
            End Get
            Set
                Me(Me.tableDataSetMonthlyCostTrend.PM_SPEC3Column) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class DataSetMonthlyCostTrendRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DataSetMonthlyCostTrendRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As DataSetMonthlyCostTrendRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As DataSetMonthlyCostTrendRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace MonthlyCostTrendReportTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class DataSetMonthlyCostTrendTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DataSetMonthlyCostTrend"
            tableMapping.ColumnMappings.Add("IM_INVENTORY_INDEX", "IM_INVENTORY_INDEX")
            tableMapping.ColumnMappings.Add("IC_INVENTORY_NAME", "IC_INVENTORY_NAME")
            tableMapping.ColumnMappings.Add("MONTHCONSUMPTION", "MONTHCONSUMPTION")
            tableMapping.ColumnMappings.Add("IM_ITEM_CODE", "IM_ITEM_CODE")
            tableMapping.ColumnMappings.Add("PM_BUDGET_PRICE", "PM_BUDGET_PRICE")
            tableMapping.ColumnMappings.Add("PM_ACCT_CODE", "PM_ACCT_CODE")
            tableMapping.ColumnMappings.Add("PM_UOM", "PM_UOM")
            tableMapping.ColumnMappings.Add("PUR_SPEC_NO", "PUR_SPEC_NO")
            tableMapping.ColumnMappings.Add("PAST_1_MTH_UG", "PAST_1_MTH_UG")
            tableMapping.ColumnMappings.Add("PAST_2_MTH_UG", "PAST_2_MTH_UG")
            tableMapping.ColumnMappings.Add("PAST_3_MTH_UG", "PAST_3_MTH_UG")
            tableMapping.ColumnMappings.Add("PAST_4_MTH_UG", "PAST_4_MTH_UG")
            tableMapping.ColumnMappings.Add("PAST_5_MTH_UG", "PAST_5_MTH_UG")
            tableMapping.ColumnMappings.Add("PAST_6_MTH_UG", "PAST_6_MTH_UG")
            tableMapping.ColumnMappings.Add("PAST_1_MTH_MA", "PAST_1_MTH_MA")
            tableMapping.ColumnMappings.Add("PAST_2_MTH_MA", "PAST_2_MTH_MA")
            tableMapping.ColumnMappings.Add("PAST_3_MTH_MA", "PAST_3_MTH_MA")
            tableMapping.ColumnMappings.Add("PAST_4_MTH_MA", "PAST_4_MTH_MA")
            tableMapping.ColumnMappings.Add("PAST_5_MTH_MA", "PAST_5_MTH_MA")
            tableMapping.ColumnMappings.Add("PAST_6_MTH_MA", "PAST_6_MTH_MA")
            tableMapping.ColumnMappings.Add("PAST_1_MTH_LC", "PAST_1_MTH_LC")
            tableMapping.ColumnMappings.Add("PAST_2_MTH_LC", "PAST_2_MTH_LC")
            tableMapping.ColumnMappings.Add("PAST_3_MTH_LC", "PAST_3_MTH_LC")
            tableMapping.ColumnMappings.Add("PAST_4_MTH_LC", "PAST_4_MTH_LC")
            tableMapping.ColumnMappings.Add("PAST_5_MTH_LC", "PAST_5_MTH_LC")
            tableMapping.ColumnMappings.Add("PAST_6_MTH_LC", "PAST_6_MTH_LC")
            tableMapping.ColumnMappings.Add("IC_inventory_type", "IC_inventory_type")
            tableMapping.ColumnMappings.Add("PM_SPEC1", "PM_SPEC1")
            tableMapping.ColumnMappings.Add("PM_SPEC2", "PM_SPEC2")
            tableMapping.ColumnMappings.Add("PM_SPEC3", "PM_SPEC3")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("eprocureConnectionString2").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT '' AS IC_inventory_type, '' AS IM_INVENTORY_INDEX, '' AS IC_INVENTORY_NAME"& _ 
                ", '' AS MONTHCONSUMPTION, '' AS IM_ITEM_CODE, '' AS PM_SPEC1, '' AS PM_SPEC2, ''"& _ 
                " AS PM_SPEC3, ''AS PM_BUDGET_PRICE, '' AS PM_ACCT_CODE, '' AS PM_UOM, '' AS  PUR"& _ 
                "_SPEC_NO, 0.00 AS PAST_1_MTH_UG,  0.00 AS PAST_2_MTH_UG, 0.00 AS PAST_3_MTH_UG, "& _ 
                "0.00 AS PAST_4_MTH_UG, 0.00 AS PAST_5_MTH_UG, 0.00 AS PAST_6_MTH_UG,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"0.00 AS PA"& _ 
                "ST_1_MTH_MA, 0.00 AS PAST_2_MTH_MA, 0.00 AS PAST_3_MTH_MA, 0.00 AS PAST_4_MTH_MA"& _ 
                ", 0.00 AS PAST_5_MTH_MA, 0.00 AS PAST_6_MTH_MA, 0.00 AS PAST_1_MTH_LC, 0.00 AS P"& _ 
                "AST_2_MTH_LC, 0.00 AS PAST_3_MTH_LC, 0.00 AS PAST_4_MTH_LC, 0.00 AS PAST_5_MTH_L"& _ 
                "C, 0.00 AS PAST_6_MTH_LC FROM INVENTORY_COST"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As MonthlyCostTrendReport.DataSetMonthlyCostTrendDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As MonthlyCostTrendReport.DataSetMonthlyCostTrendDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MonthlyCostTrendReport.DataSetMonthlyCostTrendDataTable = New MonthlyCostTrendReport.DataSetMonthlyCostTrendDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
