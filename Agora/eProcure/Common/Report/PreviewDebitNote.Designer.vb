'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3625
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("PreviewDebitNote"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class PreviewDebitNote
    Inherits Global.System.Data.DataSet
    
    Private tablePreviewDebitNote As PreviewDebitNoteDataTable
    
    Private tablePreviewDebitAdvice As PreviewDebitAdviceDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("PreviewDebitNote")) Is Nothing) Then
                MyBase.Tables.Add(New PreviewDebitNoteDataTable(ds.Tables("PreviewDebitNote")))
            End If
            If (Not (ds.Tables("PreviewDebitAdvice")) Is Nothing) Then
                MyBase.Tables.Add(New PreviewDebitAdviceDataTable(ds.Tables("PreviewDebitAdvice")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property _PreviewDebitNote() As PreviewDebitNoteDataTable
        Get
            Return Me.tablePreviewDebitNote
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PreviewDebitAdvice() As PreviewDebitAdviceDataTable
        Get
            Return Me.tablePreviewDebitAdvice
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As PreviewDebitNote = CType(MyBase.Clone,PreviewDebitNote)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("PreviewDebitNote")) Is Nothing) Then
                MyBase.Tables.Add(New PreviewDebitNoteDataTable(ds.Tables("PreviewDebitNote")))
            End If
            If (Not (ds.Tables("PreviewDebitAdvice")) Is Nothing) Then
                MyBase.Tables.Add(New PreviewDebitAdviceDataTable(ds.Tables("PreviewDebitAdvice")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablePreviewDebitNote = CType(MyBase.Tables("PreviewDebitNote"),PreviewDebitNoteDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePreviewDebitNote) Is Nothing) Then
                Me.tablePreviewDebitNote.InitVars
            End If
        End If
        Me.tablePreviewDebitAdvice = CType(MyBase.Tables("PreviewDebitAdvice"),PreviewDebitAdviceDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePreviewDebitAdvice) Is Nothing) Then
                Me.tablePreviewDebitAdvice.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "PreviewDebitNote"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/PreviewDebitNote.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablePreviewDebitNote = New PreviewDebitNoteDataTable
        MyBase.Tables.Add(Me.tablePreviewDebitNote)
        Me.tablePreviewDebitAdvice = New PreviewDebitAdviceDataTable
        MyBase.Tables.Add(Me.tablePreviewDebitAdvice)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerialize_PreviewDebitNote() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializePreviewDebitAdvice() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As PreviewDebitNote = New PreviewDebitNote
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub PreviewDebitNoteRowChangeEventHandler(ByVal sender As Object, ByVal e As PreviewDebitNoteRowChangeEvent)
    
    Public Delegate Sub PreviewDebitAdviceRowChangeEventHandler(ByVal sender As Object, ByVal e As PreviewDebitAdviceRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PreviewDebitNoteDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnDNM_DN_INDEX As Global.System.Data.DataColumn
        
        Private columnDNM_DN_B_COY_ID As Global.System.Data.DataColumn
        
        Private columnDNM_DN_S_COY_ID As Global.System.Data.DataColumn
        
        Private columnDNM_DN_NO As Global.System.Data.DataColumn
        
        Private columnDNM_DN_DATE As Global.System.Data.DataColumn
        
        Private columnDNM_DN_TYPE As Global.System.Data.DataColumn
        
        Private columnDNM_ADDR_LINE1 As Global.System.Data.DataColumn
        
        Private columnDNM_ADDR_LINE2 As Global.System.Data.DataColumn
        
        Private columnDNM_ADDR_LINE3 As Global.System.Data.DataColumn
        
        Private columnDNM_POSTCODE As Global.System.Data.DataColumn
        
        Private columnDNM_CITY As Global.System.Data.DataColumn
        
        Private columnDNM_STATE As Global.System.Data.DataColumn
        
        Private columnDNM_COUNTRY As Global.System.Data.DataColumn
        
        Private columnDNM_INV_NO As Global.System.Data.DataColumn
        
        Private columnDNM_CURRENCY_CODE As Global.System.Data.DataColumn
        
        Private columnDNM_EXCHANGE_RATE As Global.System.Data.DataColumn
        
        Private columnDNM_REMARKS As Global.System.Data.DataColumn
        
        Private columnDNM_DN_STATUS As Global.System.Data.DataColumn
        
        Private columnDNM_STATUS_CHANGED_BY As Global.System.Data.DataColumn
        
        Private columnDNM_STATUS_CHANGED_ON As Global.System.Data.DataColumn
        
        Private columnDNM_FM_APPROVED_DATE As Global.System.Data.DataColumn
        
        Private columnDNM_PAYMENT_TERM As Global.System.Data.DataColumn
        
        Private columnDNM_PAYMENT_DATE As Global.System.Data.DataColumn
        
        Private columnDNM_DOWNLOADED_DATE As Global.System.Data.DataColumn
        
        Private columnDNM_CREATED_BY As Global.System.Data.DataColumn
        
        Private columnDNM_CREATED_DATE As Global.System.Data.DataColumn
        
        Private columnDNM_DN_TOTAL As Global.System.Data.DataColumn
        
        Private columnDND_DN_S_COY_ID As Global.System.Data.DataColumn
        
        Private columnDND_DN_NO As Global.System.Data.DataColumn
        
        Private columnDND_DN_LINE As Global.System.Data.DataColumn
        
        Private columnDND_INV_LINE As Global.System.Data.DataColumn
        
        Private columnDND_QTY As Global.System.Data.DataColumn
        
        Private columnDND_UNIT_COST As Global.System.Data.DataColumn
        
        Private columnDND_GST_RATE As Global.System.Data.DataColumn
        
        Private columnDND_GST_INPUT_TAX_CODE As Global.System.Data.DataColumn
        
        Private columnDND_GST_OUTPUT_TAX_CODE As Global.System.Data.DataColumn
        
        Private columnDND_TICKETING_NO_INPUT As Global.System.Data.DataColumn
        
        Private columnIM_INVOICE_INDEX As Global.System.Data.DataColumn
        
        Private columnIM_INVOICE_NO As Global.System.Data.DataColumn
        
        Private columnIM_S_COY_ID As Global.System.Data.DataColumn
        
        Private columnIM_S_COY_NAME As Global.System.Data.DataColumn
        
        Private columnIM_PO_INDEX As Global.System.Data.DataColumn
        
        Private columnIM_B_COY_ID As Global.System.Data.DataColumn
        
        Private columnIM_PAYMENT_DATE As Global.System.Data.DataColumn
        
        Private columnIM_REMARK As Global.System.Data.DataColumn
        
        Private columnIM_CREATED_BY As Global.System.Data.DataColumn
        
        Private columnIM_CREATED_ON As Global.System.Data.DataColumn
        
        Private columnIM_INVOICE_STATUS As Global.System.Data.DataColumn
        
        Private columnIM_PAYMENT_NO As Global.System.Data.DataColumn
        
        Private columnIM_YOUR_REF As Global.System.Data.DataColumn
        
        Private columnIM_OUR_REF As Global.System.Data.DataColumn
        
        Private columnIM_INVOICE_PREFIX As Global.System.Data.DataColumn
        
        Private columnIM_SUBMITTEDBY_FO As Global.System.Data.DataColumn
        
        Private columnIM_EXCHANGE_RATE As Global.System.Data.DataColumn
        
        Private columnIM_FINANCE_REMARKS As Global.System.Data.DataColumn
        
        Private columnIM_PRINTED As Global.System.Data.DataColumn
        
        Private columnIM_FOLDER As Global.System.Data.DataColumn
        
        Private columnIM_FM_APPROVED_DATE As Global.System.Data.DataColumn
        
        Private columnIM_WITHHOLDING_TAX As Global.System.Data.DataColumn
        
        Private columnIM_DOWNLOADED_DATE As Global.System.Data.DataColumn
        
        Private columnIM_EXTERNAL_IND As Global.System.Data.DataColumn
        
        Private columnIM_REFERENCE_NO As Global.System.Data.DataColumn
        
        Private columnIM_INVOICE_TOTAL As Global.System.Data.DataColumn
        
        Private columnIM_GST_INVOICE As Global.System.Data.DataColumn
        
        Private columnIM_PAYMENT_TERM As Global.System.Data.DataColumn
        
        Private columnIM_STATUS_CHANGED_BY As Global.System.Data.DataColumn
        
        Private columnIM_STATUS_CHANGED_ON As Global.System.Data.DataColumn
        
        Private columnBillAddrState As Global.System.Data.DataColumn
        
        Private columnBillAddrCtry As Global.System.Data.DataColumn
        
        Private columnSupplierAddrState As Global.System.Data.DataColumn
        
        Private columnSupplierAddrCtry As Global.System.Data.DataColumn
        
        Private columnBuyerCompanyName As Global.System.Data.DataColumn
        
        Private columnItemDesc As Global.System.Data.DataColumn
        
        Private columnAmount As Global.System.Data.DataColumn
        
        Private columnTotal As Global.System.Data.DataColumn
        
        Private columnGST As Global.System.Data.DataColumn
        
        Private columnDND_REMARKS As Global.System.Data.DataColumn
        
        Private columnCM_BUSINESS_REG_NO As Global.System.Data.DataColumn
        
        Private columnCM_PHONE As Global.System.Data.DataColumn
        
        Private columnCM_EMAIL As Global.System.Data.DataColumn
        
        Private columnCM_TAX_REG_NO As Global.System.Data.DataColumn
        
        Private columnCM_ADDR_LINE1 As Global.System.Data.DataColumn
        
        Private columnCM_ADDR_LINE2 As Global.System.Data.DataColumn
        
        Private columnCM_ADDR_LINE3 As Global.System.Data.DataColumn
        
        Private columnCM_POSTCODE As Global.System.Data.DataColumn
        
        Private columnCM_COUNTRY As Global.System.Data.DataColumn
        
        Private columnCM_CITY As Global.System.Data.DataColumn
        
        Private columnIM_SHIP_AMT As Global.System.Data.DataColumn
        
        Private columnID_PRODUCT_DESC As Global.System.Data.DataColumn
        
        Private columnID_UOM As Global.System.Data.DataColumn
        
        Private columnid_uom1 As Global.System.Data.DataColumn
        
        Private columnLineDesc As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PreviewDebitNote"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_DN_INDEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_DN_INDEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_DN_B_COY_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_DN_B_COY_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_DN_S_COY_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_DN_S_COY_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_DN_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_DN_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_DN_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_DN_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_DN_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_DN_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_ADDR_LINE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_ADDR_LINE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_ADDR_LINE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_ADDR_LINE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_ADDR_LINE3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_ADDR_LINE3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_POSTCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_POSTCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_CITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_CITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_STATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_STATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_COUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_COUNTRY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_INV_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_INV_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_CURRENCY_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_CURRENCY_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_EXCHANGE_RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_EXCHANGE_RATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_REMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_REMARKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_DN_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_DN_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_STATUS_CHANGED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_STATUS_CHANGED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_STATUS_CHANGED_ONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_STATUS_CHANGED_ON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_FM_APPROVED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_FM_APPROVED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_PAYMENT_TERMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_PAYMENT_TERM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_PAYMENT_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_PAYMENT_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_DOWNLOADED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_DOWNLOADED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_CREATED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_CREATED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_CREATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_CREATED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_DN_TOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_DN_TOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_DN_S_COY_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_DN_S_COY_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_DN_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_DN_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_DN_LINEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_DN_LINE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_INV_LINEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_INV_LINE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_QTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_UNIT_COSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_UNIT_COST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_GST_RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_GST_RATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_GST_INPUT_TAX_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_GST_INPUT_TAX_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_GST_OUTPUT_TAX_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_GST_OUTPUT_TAX_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_TICKETING_NO_INPUTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_TICKETING_NO_INPUT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_INVOICE_INDEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_INVOICE_INDEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_INVOICE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_INVOICE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_S_COY_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_S_COY_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_S_COY_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_S_COY_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_PO_INDEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_PO_INDEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_B_COY_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_B_COY_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_PAYMENT_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_PAYMENT_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_REMARKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_REMARK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_CREATED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_CREATED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_CREATED_ONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_CREATED_ON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_INVOICE_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_INVOICE_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_PAYMENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_PAYMENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_YOUR_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_YOUR_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_OUR_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_OUR_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_INVOICE_PREFIXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_INVOICE_PREFIX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_SUBMITTEDBY_FOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_SUBMITTEDBY_FO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_EXCHANGE_RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_EXCHANGE_RATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_FINANCE_REMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_FINANCE_REMARKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_PRINTEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_PRINTED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_FOLDERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_FOLDER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_FM_APPROVED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_FM_APPROVED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_WITHHOLDING_TAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_WITHHOLDING_TAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_DOWNLOADED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_DOWNLOADED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_EXTERNAL_INDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_EXTERNAL_IND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_REFERENCE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_REFERENCE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_INVOICE_TOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_INVOICE_TOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_GST_INVOICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_GST_INVOICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_PAYMENT_TERMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_PAYMENT_TERM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_STATUS_CHANGED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_STATUS_CHANGED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_STATUS_CHANGED_ONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_STATUS_CHANGED_ON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BillAddrStateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBillAddrState
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BillAddrCtryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBillAddrCtry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SupplierAddrStateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplierAddrState
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SupplierAddrCtryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplierAddrCtry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BuyerCompanyNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBuyerCompanyName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ItemDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_REMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_REMARKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_BUSINESS_REG_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_BUSINESS_REG_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_PHONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_PHONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_EMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_TAX_REG_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_TAX_REG_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_ADDR_LINE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_ADDR_LINE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_ADDR_LINE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_ADDR_LINE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_ADDR_LINE3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_ADDR_LINE3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_POSTCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_POSTCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_COUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_COUNTRY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_CITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_CITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_SHIP_AMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_SHIP_AMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ID_PRODUCT_DESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PRODUCT_DESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ID_UOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_UOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property id_uom1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_uom1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LineDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLineDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PreviewDebitNoteRow
            Get
                Return CType(Me.Rows(index),PreviewDebitNoteRow)
            End Get
        End Property
        
        Public Event PreviewDebitNoteRowChanging As PreviewDebitNoteRowChangeEventHandler
        
        Public Event PreviewDebitNoteRowChanged As PreviewDebitNoteRowChangeEventHandler
        
        Public Event PreviewDebitNoteRowDeleting As PreviewDebitNoteRowChangeEventHandler
        
        Public Event PreviewDebitNoteRowDeleted As PreviewDebitNoteRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddPreviewDebitNoteRow(ByVal row As PreviewDebitNoteRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddPreviewDebitNoteRow( _
                    ByVal DNM_DN_B_COY_ID As String,  _
                    ByVal DNM_DN_S_COY_ID As String,  _
                    ByVal DNM_DN_NO As String,  _
                    ByVal DNM_DN_DATE As Date,  _
                    ByVal DNM_DN_TYPE As String,  _
                    ByVal DNM_ADDR_LINE1 As String,  _
                    ByVal DNM_ADDR_LINE2 As String,  _
                    ByVal DNM_ADDR_LINE3 As String,  _
                    ByVal DNM_POSTCODE As String,  _
                    ByVal DNM_CITY As String,  _
                    ByVal DNM_STATE As String,  _
                    ByVal DNM_COUNTRY As String,  _
                    ByVal DNM_INV_NO As String,  _
                    ByVal DNM_CURRENCY_CODE As String,  _
                    ByVal DNM_EXCHANGE_RATE As Double,  _
                    ByVal DNM_REMARKS As String,  _
                    ByVal DNM_DN_STATUS As Integer,  _
                    ByVal DNM_STATUS_CHANGED_BY As String,  _
                    ByVal DNM_STATUS_CHANGED_ON As Date,  _
                    ByVal DNM_FM_APPROVED_DATE As Date,  _
                    ByVal DNM_PAYMENT_TERM As String,  _
                    ByVal DNM_PAYMENT_DATE As Date,  _
                    ByVal DNM_DOWNLOADED_DATE As Date,  _
                    ByVal DNM_CREATED_BY As String,  _
                    ByVal DNM_CREATED_DATE As Date,  _
                    ByVal DNM_DN_TOTAL As Decimal,  _
                    ByVal DND_DN_S_COY_ID As String,  _
                    ByVal DND_DN_NO As String,  _
                    ByVal DND_DN_LINE As Integer,  _
                    ByVal DND_INV_LINE As Integer,  _
                    ByVal DND_QTY As Decimal,  _
                    ByVal DND_UNIT_COST As Decimal,  _
                    ByVal DND_GST_RATE As String,  _
                    ByVal DND_GST_INPUT_TAX_CODE As String,  _
                    ByVal DND_GST_OUTPUT_TAX_CODE As String,  _
                    ByVal DND_TICKETING_NO_INPUT As String,  _
                    ByVal IM_INVOICE_NO As String,  _
                    ByVal IM_S_COY_ID As String,  _
                    ByVal IM_S_COY_NAME As String,  _
                    ByVal IM_PO_INDEX As Long,  _
                    ByVal IM_B_COY_ID As String,  _
                    ByVal IM_PAYMENT_DATE As Date,  _
                    ByVal IM_REMARK As String,  _
                    ByVal IM_CREATED_BY As String,  _
                    ByVal IM_CREATED_ON As Date,  _
                    ByVal IM_INVOICE_STATUS As Integer,  _
                    ByVal IM_PAYMENT_NO As String,  _
                    ByVal IM_YOUR_REF As String,  _
                    ByVal IM_OUR_REF As String,  _
                    ByVal IM_INVOICE_PREFIX As String,  _
                    ByVal IM_SUBMITTEDBY_FO As String,  _
                    ByVal IM_EXCHANGE_RATE As Double,  _
                    ByVal IM_FINANCE_REMARKS As String,  _
                    ByVal IM_PRINTED As String,  _
                    ByVal IM_FOLDER As Integer,  _
                    ByVal IM_FM_APPROVED_DATE As Date,  _
                    ByVal IM_WITHHOLDING_TAX As Integer,  _
                    ByVal IM_DOWNLOADED_DATE As Date,  _
                    ByVal IM_EXTERNAL_IND As String,  _
                    ByVal IM_REFERENCE_NO As String,  _
                    ByVal IM_INVOICE_TOTAL As Decimal,  _
                    ByVal IM_GST_INVOICE As String,  _
                    ByVal IM_PAYMENT_TERM As String,  _
                    ByVal IM_STATUS_CHANGED_BY As String,  _
                    ByVal IM_STATUS_CHANGED_ON As Date,  _
                    ByVal BillAddrState As String,  _
                    ByVal BillAddrCtry As String,  _
                    ByVal SupplierAddrState As String,  _
                    ByVal SupplierAddrCtry As String,  _
                    ByVal BuyerCompanyName As String,  _
                    ByVal ItemDesc As String,  _
                    ByVal Amount As String,  _
                    ByVal Total As String,  _
                    ByVal GST As Double,  _
                    ByVal DND_REMARKS As String,  _
                    ByVal CM_BUSINESS_REG_NO As String,  _
                    ByVal CM_PHONE As String,  _
                    ByVal CM_EMAIL As String,  _
                    ByVal CM_TAX_REG_NO As String,  _
                    ByVal CM_ADDR_LINE1 As String,  _
                    ByVal CM_ADDR_LINE2 As String,  _
                    ByVal CM_ADDR_LINE3 As String,  _
                    ByVal CM_POSTCODE As String,  _
                    ByVal CM_COUNTRY As String,  _
                    ByVal CM_CITY As String,  _
                    ByVal IM_SHIP_AMT As Decimal,  _
                    ByVal ID_PRODUCT_DESC As String,  _
                    ByVal ID_UOM As String,  _
                    ByVal id_uom1 As String,  _
                    ByVal LineDesc As String) As PreviewDebitNoteRow
            Dim rowPreviewDebitNoteRow As PreviewDebitNoteRow = CType(Me.NewRow,PreviewDebitNoteRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, DNM_DN_B_COY_ID, DNM_DN_S_COY_ID, DNM_DN_NO, DNM_DN_DATE, DNM_DN_TYPE, DNM_ADDR_LINE1, DNM_ADDR_LINE2, DNM_ADDR_LINE3, DNM_POSTCODE, DNM_CITY, DNM_STATE, DNM_COUNTRY, DNM_INV_NO, DNM_CURRENCY_CODE, DNM_EXCHANGE_RATE, DNM_REMARKS, DNM_DN_STATUS, DNM_STATUS_CHANGED_BY, DNM_STATUS_CHANGED_ON, DNM_FM_APPROVED_DATE, DNM_PAYMENT_TERM, DNM_PAYMENT_DATE, DNM_DOWNLOADED_DATE, DNM_CREATED_BY, DNM_CREATED_DATE, DNM_DN_TOTAL, DND_DN_S_COY_ID, DND_DN_NO, DND_DN_LINE, DND_INV_LINE, DND_QTY, DND_UNIT_COST, DND_GST_RATE, DND_GST_INPUT_TAX_CODE, DND_GST_OUTPUT_TAX_CODE, DND_TICKETING_NO_INPUT, Nothing, IM_INVOICE_NO, IM_S_COY_ID, IM_S_COY_NAME, IM_PO_INDEX, IM_B_COY_ID, IM_PAYMENT_DATE, IM_REMARK, IM_CREATED_BY, IM_CREATED_ON, IM_INVOICE_STATUS, IM_PAYMENT_NO, IM_YOUR_REF, IM_OUR_REF, IM_INVOICE_PREFIX, IM_SUBMITTEDBY_FO, IM_EXCHANGE_RATE, IM_FINANCE_REMARKS, IM_PRINTED, IM_FOLDER, IM_FM_APPROVED_DATE, IM_WITHHOLDING_TAX, IM_DOWNLOADED_DATE, IM_EXTERNAL_IND, IM_REFERENCE_NO, IM_INVOICE_TOTAL, IM_GST_INVOICE, IM_PAYMENT_TERM, IM_STATUS_CHANGED_BY, IM_STATUS_CHANGED_ON, BillAddrState, BillAddrCtry, SupplierAddrState, SupplierAddrCtry, BuyerCompanyName, ItemDesc, Amount, Total, GST, DND_REMARKS, CM_BUSINESS_REG_NO, CM_PHONE, CM_EMAIL, CM_TAX_REG_NO, CM_ADDR_LINE1, CM_ADDR_LINE2, CM_ADDR_LINE3, CM_POSTCODE, CM_COUNTRY, CM_CITY, IM_SHIP_AMT, ID_PRODUCT_DESC, ID_UOM, id_uom1, LineDesc}
            rowPreviewDebitNoteRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPreviewDebitNoteRow)
            Return rowPreviewDebitNoteRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByDNM_DN_INDEXDND_DN_S_COY_IDDND_DN_NODND_DN_LINEIM_INVOICE_INDEX(ByVal DNM_DN_INDEX As Long, ByVal DND_DN_S_COY_ID As String, ByVal DND_DN_NO As String, ByVal DND_DN_LINE As Integer, ByVal IM_INVOICE_INDEX As Long) As PreviewDebitNoteRow
            Return CType(Me.Rows.Find(New Object() {DNM_DN_INDEX, DND_DN_S_COY_ID, DND_DN_NO, DND_DN_LINE, IM_INVOICE_INDEX}),PreviewDebitNoteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PreviewDebitNoteDataTable = CType(MyBase.Clone,PreviewDebitNoteDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PreviewDebitNoteDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnDNM_DN_INDEX = MyBase.Columns("DNM_DN_INDEX")
            Me.columnDNM_DN_B_COY_ID = MyBase.Columns("DNM_DN_B_COY_ID")
            Me.columnDNM_DN_S_COY_ID = MyBase.Columns("DNM_DN_S_COY_ID")
            Me.columnDNM_DN_NO = MyBase.Columns("DNM_DN_NO")
            Me.columnDNM_DN_DATE = MyBase.Columns("DNM_DN_DATE")
            Me.columnDNM_DN_TYPE = MyBase.Columns("DNM_DN_TYPE")
            Me.columnDNM_ADDR_LINE1 = MyBase.Columns("DNM_ADDR_LINE1")
            Me.columnDNM_ADDR_LINE2 = MyBase.Columns("DNM_ADDR_LINE2")
            Me.columnDNM_ADDR_LINE3 = MyBase.Columns("DNM_ADDR_LINE3")
            Me.columnDNM_POSTCODE = MyBase.Columns("DNM_POSTCODE")
            Me.columnDNM_CITY = MyBase.Columns("DNM_CITY")
            Me.columnDNM_STATE = MyBase.Columns("DNM_STATE")
            Me.columnDNM_COUNTRY = MyBase.Columns("DNM_COUNTRY")
            Me.columnDNM_INV_NO = MyBase.Columns("DNM_INV_NO")
            Me.columnDNM_CURRENCY_CODE = MyBase.Columns("DNM_CURRENCY_CODE")
            Me.columnDNM_EXCHANGE_RATE = MyBase.Columns("DNM_EXCHANGE_RATE")
            Me.columnDNM_REMARKS = MyBase.Columns("DNM_REMARKS")
            Me.columnDNM_DN_STATUS = MyBase.Columns("DNM_DN_STATUS")
            Me.columnDNM_STATUS_CHANGED_BY = MyBase.Columns("DNM_STATUS_CHANGED_BY")
            Me.columnDNM_STATUS_CHANGED_ON = MyBase.Columns("DNM_STATUS_CHANGED_ON")
            Me.columnDNM_FM_APPROVED_DATE = MyBase.Columns("DNM_FM_APPROVED_DATE")
            Me.columnDNM_PAYMENT_TERM = MyBase.Columns("DNM_PAYMENT_TERM")
            Me.columnDNM_PAYMENT_DATE = MyBase.Columns("DNM_PAYMENT_DATE")
            Me.columnDNM_DOWNLOADED_DATE = MyBase.Columns("DNM_DOWNLOADED_DATE")
            Me.columnDNM_CREATED_BY = MyBase.Columns("DNM_CREATED_BY")
            Me.columnDNM_CREATED_DATE = MyBase.Columns("DNM_CREATED_DATE")
            Me.columnDNM_DN_TOTAL = MyBase.Columns("DNM_DN_TOTAL")
            Me.columnDND_DN_S_COY_ID = MyBase.Columns("DND_DN_S_COY_ID")
            Me.columnDND_DN_NO = MyBase.Columns("DND_DN_NO")
            Me.columnDND_DN_LINE = MyBase.Columns("DND_DN_LINE")
            Me.columnDND_INV_LINE = MyBase.Columns("DND_INV_LINE")
            Me.columnDND_QTY = MyBase.Columns("DND_QTY")
            Me.columnDND_UNIT_COST = MyBase.Columns("DND_UNIT_COST")
            Me.columnDND_GST_RATE = MyBase.Columns("DND_GST_RATE")
            Me.columnDND_GST_INPUT_TAX_CODE = MyBase.Columns("DND_GST_INPUT_TAX_CODE")
            Me.columnDND_GST_OUTPUT_TAX_CODE = MyBase.Columns("DND_GST_OUTPUT_TAX_CODE")
            Me.columnDND_TICKETING_NO_INPUT = MyBase.Columns("DND_TICKETING_NO_INPUT")
            Me.columnIM_INVOICE_INDEX = MyBase.Columns("IM_INVOICE_INDEX")
            Me.columnIM_INVOICE_NO = MyBase.Columns("IM_INVOICE_NO")
            Me.columnIM_S_COY_ID = MyBase.Columns("IM_S_COY_ID")
            Me.columnIM_S_COY_NAME = MyBase.Columns("IM_S_COY_NAME")
            Me.columnIM_PO_INDEX = MyBase.Columns("IM_PO_INDEX")
            Me.columnIM_B_COY_ID = MyBase.Columns("IM_B_COY_ID")
            Me.columnIM_PAYMENT_DATE = MyBase.Columns("IM_PAYMENT_DATE")
            Me.columnIM_REMARK = MyBase.Columns("IM_REMARK")
            Me.columnIM_CREATED_BY = MyBase.Columns("IM_CREATED_BY")
            Me.columnIM_CREATED_ON = MyBase.Columns("IM_CREATED_ON")
            Me.columnIM_INVOICE_STATUS = MyBase.Columns("IM_INVOICE_STATUS")
            Me.columnIM_PAYMENT_NO = MyBase.Columns("IM_PAYMENT_NO")
            Me.columnIM_YOUR_REF = MyBase.Columns("IM_YOUR_REF")
            Me.columnIM_OUR_REF = MyBase.Columns("IM_OUR_REF")
            Me.columnIM_INVOICE_PREFIX = MyBase.Columns("IM_INVOICE_PREFIX")
            Me.columnIM_SUBMITTEDBY_FO = MyBase.Columns("IM_SUBMITTEDBY_FO")
            Me.columnIM_EXCHANGE_RATE = MyBase.Columns("IM_EXCHANGE_RATE")
            Me.columnIM_FINANCE_REMARKS = MyBase.Columns("IM_FINANCE_REMARKS")
            Me.columnIM_PRINTED = MyBase.Columns("IM_PRINTED")
            Me.columnIM_FOLDER = MyBase.Columns("IM_FOLDER")
            Me.columnIM_FM_APPROVED_DATE = MyBase.Columns("IM_FM_APPROVED_DATE")
            Me.columnIM_WITHHOLDING_TAX = MyBase.Columns("IM_WITHHOLDING_TAX")
            Me.columnIM_DOWNLOADED_DATE = MyBase.Columns("IM_DOWNLOADED_DATE")
            Me.columnIM_EXTERNAL_IND = MyBase.Columns("IM_EXTERNAL_IND")
            Me.columnIM_REFERENCE_NO = MyBase.Columns("IM_REFERENCE_NO")
            Me.columnIM_INVOICE_TOTAL = MyBase.Columns("IM_INVOICE_TOTAL")
            Me.columnIM_GST_INVOICE = MyBase.Columns("IM_GST_INVOICE")
            Me.columnIM_PAYMENT_TERM = MyBase.Columns("IM_PAYMENT_TERM")
            Me.columnIM_STATUS_CHANGED_BY = MyBase.Columns("IM_STATUS_CHANGED_BY")
            Me.columnIM_STATUS_CHANGED_ON = MyBase.Columns("IM_STATUS_CHANGED_ON")
            Me.columnBillAddrState = MyBase.Columns("BillAddrState")
            Me.columnBillAddrCtry = MyBase.Columns("BillAddrCtry")
            Me.columnSupplierAddrState = MyBase.Columns("SupplierAddrState")
            Me.columnSupplierAddrCtry = MyBase.Columns("SupplierAddrCtry")
            Me.columnBuyerCompanyName = MyBase.Columns("BuyerCompanyName")
            Me.columnItemDesc = MyBase.Columns("ItemDesc")
            Me.columnAmount = MyBase.Columns("Amount")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnGST = MyBase.Columns("GST")
            Me.columnDND_REMARKS = MyBase.Columns("DND_REMARKS")
            Me.columnCM_BUSINESS_REG_NO = MyBase.Columns("CM_BUSINESS_REG_NO")
            Me.columnCM_PHONE = MyBase.Columns("CM_PHONE")
            Me.columnCM_EMAIL = MyBase.Columns("CM_EMAIL")
            Me.columnCM_TAX_REG_NO = MyBase.Columns("CM_TAX_REG_NO")
            Me.columnCM_ADDR_LINE1 = MyBase.Columns("CM_ADDR_LINE1")
            Me.columnCM_ADDR_LINE2 = MyBase.Columns("CM_ADDR_LINE2")
            Me.columnCM_ADDR_LINE3 = MyBase.Columns("CM_ADDR_LINE3")
            Me.columnCM_POSTCODE = MyBase.Columns("CM_POSTCODE")
            Me.columnCM_COUNTRY = MyBase.Columns("CM_COUNTRY")
            Me.columnCM_CITY = MyBase.Columns("CM_CITY")
            Me.columnIM_SHIP_AMT = MyBase.Columns("IM_SHIP_AMT")
            Me.columnID_PRODUCT_DESC = MyBase.Columns("ID_PRODUCT_DESC")
            Me.columnID_UOM = MyBase.Columns("ID_UOM")
            Me.columnid_uom1 = MyBase.Columns("id_uom1")
            Me.columnLineDesc = MyBase.Columns("LineDesc")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnDNM_DN_INDEX = New Global.System.Data.DataColumn("DNM_DN_INDEX", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_DN_INDEX)
            Me.columnDNM_DN_B_COY_ID = New Global.System.Data.DataColumn("DNM_DN_B_COY_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_DN_B_COY_ID)
            Me.columnDNM_DN_S_COY_ID = New Global.System.Data.DataColumn("DNM_DN_S_COY_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_DN_S_COY_ID)
            Me.columnDNM_DN_NO = New Global.System.Data.DataColumn("DNM_DN_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_DN_NO)
            Me.columnDNM_DN_DATE = New Global.System.Data.DataColumn("DNM_DN_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_DN_DATE)
            Me.columnDNM_DN_TYPE = New Global.System.Data.DataColumn("DNM_DN_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_DN_TYPE)
            Me.columnDNM_ADDR_LINE1 = New Global.System.Data.DataColumn("DNM_ADDR_LINE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_ADDR_LINE1)
            Me.columnDNM_ADDR_LINE2 = New Global.System.Data.DataColumn("DNM_ADDR_LINE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_ADDR_LINE2)
            Me.columnDNM_ADDR_LINE3 = New Global.System.Data.DataColumn("DNM_ADDR_LINE3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_ADDR_LINE3)
            Me.columnDNM_POSTCODE = New Global.System.Data.DataColumn("DNM_POSTCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_POSTCODE)
            Me.columnDNM_CITY = New Global.System.Data.DataColumn("DNM_CITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_CITY)
            Me.columnDNM_STATE = New Global.System.Data.DataColumn("DNM_STATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_STATE)
            Me.columnDNM_COUNTRY = New Global.System.Data.DataColumn("DNM_COUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_COUNTRY)
            Me.columnDNM_INV_NO = New Global.System.Data.DataColumn("DNM_INV_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_INV_NO)
            Me.columnDNM_CURRENCY_CODE = New Global.System.Data.DataColumn("DNM_CURRENCY_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_CURRENCY_CODE)
            Me.columnDNM_EXCHANGE_RATE = New Global.System.Data.DataColumn("DNM_EXCHANGE_RATE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_EXCHANGE_RATE)
            Me.columnDNM_REMARKS = New Global.System.Data.DataColumn("DNM_REMARKS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_REMARKS)
            Me.columnDNM_DN_STATUS = New Global.System.Data.DataColumn("DNM_DN_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_DN_STATUS)
            Me.columnDNM_STATUS_CHANGED_BY = New Global.System.Data.DataColumn("DNM_STATUS_CHANGED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_STATUS_CHANGED_BY)
            Me.columnDNM_STATUS_CHANGED_ON = New Global.System.Data.DataColumn("DNM_STATUS_CHANGED_ON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_STATUS_CHANGED_ON)
            Me.columnDNM_FM_APPROVED_DATE = New Global.System.Data.DataColumn("DNM_FM_APPROVED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_FM_APPROVED_DATE)
            Me.columnDNM_PAYMENT_TERM = New Global.System.Data.DataColumn("DNM_PAYMENT_TERM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_PAYMENT_TERM)
            Me.columnDNM_PAYMENT_DATE = New Global.System.Data.DataColumn("DNM_PAYMENT_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_PAYMENT_DATE)
            Me.columnDNM_DOWNLOADED_DATE = New Global.System.Data.DataColumn("DNM_DOWNLOADED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_DOWNLOADED_DATE)
            Me.columnDNM_CREATED_BY = New Global.System.Data.DataColumn("DNM_CREATED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_CREATED_BY)
            Me.columnDNM_CREATED_DATE = New Global.System.Data.DataColumn("DNM_CREATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_CREATED_DATE)
            Me.columnDNM_DN_TOTAL = New Global.System.Data.DataColumn("DNM_DN_TOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_DN_TOTAL)
            Me.columnDND_DN_S_COY_ID = New Global.System.Data.DataColumn("DND_DN_S_COY_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_DN_S_COY_ID)
            Me.columnDND_DN_NO = New Global.System.Data.DataColumn("DND_DN_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_DN_NO)
            Me.columnDND_DN_LINE = New Global.System.Data.DataColumn("DND_DN_LINE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_DN_LINE)
            Me.columnDND_INV_LINE = New Global.System.Data.DataColumn("DND_INV_LINE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_INV_LINE)
            Me.columnDND_QTY = New Global.System.Data.DataColumn("DND_QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_QTY)
            Me.columnDND_UNIT_COST = New Global.System.Data.DataColumn("DND_UNIT_COST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_UNIT_COST)
            Me.columnDND_GST_RATE = New Global.System.Data.DataColumn("DND_GST_RATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_GST_RATE)
            Me.columnDND_GST_INPUT_TAX_CODE = New Global.System.Data.DataColumn("DND_GST_INPUT_TAX_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_GST_INPUT_TAX_CODE)
            Me.columnDND_GST_OUTPUT_TAX_CODE = New Global.System.Data.DataColumn("DND_GST_OUTPUT_TAX_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_GST_OUTPUT_TAX_CODE)
            Me.columnDND_TICKETING_NO_INPUT = New Global.System.Data.DataColumn("DND_TICKETING_NO_INPUT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_TICKETING_NO_INPUT)
            Me.columnIM_INVOICE_INDEX = New Global.System.Data.DataColumn("IM_INVOICE_INDEX", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_INVOICE_INDEX)
            Me.columnIM_INVOICE_NO = New Global.System.Data.DataColumn("IM_INVOICE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_INVOICE_NO)
            Me.columnIM_S_COY_ID = New Global.System.Data.DataColumn("IM_S_COY_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_S_COY_ID)
            Me.columnIM_S_COY_NAME = New Global.System.Data.DataColumn("IM_S_COY_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_S_COY_NAME)
            Me.columnIM_PO_INDEX = New Global.System.Data.DataColumn("IM_PO_INDEX", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_PO_INDEX)
            Me.columnIM_B_COY_ID = New Global.System.Data.DataColumn("IM_B_COY_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_B_COY_ID)
            Me.columnIM_PAYMENT_DATE = New Global.System.Data.DataColumn("IM_PAYMENT_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_PAYMENT_DATE)
            Me.columnIM_REMARK = New Global.System.Data.DataColumn("IM_REMARK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_REMARK)
            Me.columnIM_CREATED_BY = New Global.System.Data.DataColumn("IM_CREATED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_CREATED_BY)
            Me.columnIM_CREATED_ON = New Global.System.Data.DataColumn("IM_CREATED_ON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_CREATED_ON)
            Me.columnIM_INVOICE_STATUS = New Global.System.Data.DataColumn("IM_INVOICE_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_INVOICE_STATUS)
            Me.columnIM_PAYMENT_NO = New Global.System.Data.DataColumn("IM_PAYMENT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_PAYMENT_NO)
            Me.columnIM_YOUR_REF = New Global.System.Data.DataColumn("IM_YOUR_REF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_YOUR_REF)
            Me.columnIM_OUR_REF = New Global.System.Data.DataColumn("IM_OUR_REF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_OUR_REF)
            Me.columnIM_INVOICE_PREFIX = New Global.System.Data.DataColumn("IM_INVOICE_PREFIX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_INVOICE_PREFIX)
            Me.columnIM_SUBMITTEDBY_FO = New Global.System.Data.DataColumn("IM_SUBMITTEDBY_FO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_SUBMITTEDBY_FO)
            Me.columnIM_EXCHANGE_RATE = New Global.System.Data.DataColumn("IM_EXCHANGE_RATE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_EXCHANGE_RATE)
            Me.columnIM_FINANCE_REMARKS = New Global.System.Data.DataColumn("IM_FINANCE_REMARKS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_FINANCE_REMARKS)
            Me.columnIM_PRINTED = New Global.System.Data.DataColumn("IM_PRINTED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_PRINTED)
            Me.columnIM_FOLDER = New Global.System.Data.DataColumn("IM_FOLDER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_FOLDER)
            Me.columnIM_FM_APPROVED_DATE = New Global.System.Data.DataColumn("IM_FM_APPROVED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_FM_APPROVED_DATE)
            Me.columnIM_WITHHOLDING_TAX = New Global.System.Data.DataColumn("IM_WITHHOLDING_TAX", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_WITHHOLDING_TAX)
            Me.columnIM_DOWNLOADED_DATE = New Global.System.Data.DataColumn("IM_DOWNLOADED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_DOWNLOADED_DATE)
            Me.columnIM_EXTERNAL_IND = New Global.System.Data.DataColumn("IM_EXTERNAL_IND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_EXTERNAL_IND)
            Me.columnIM_REFERENCE_NO = New Global.System.Data.DataColumn("IM_REFERENCE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_REFERENCE_NO)
            Me.columnIM_INVOICE_TOTAL = New Global.System.Data.DataColumn("IM_INVOICE_TOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_INVOICE_TOTAL)
            Me.columnIM_GST_INVOICE = New Global.System.Data.DataColumn("IM_GST_INVOICE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_GST_INVOICE)
            Me.columnIM_PAYMENT_TERM = New Global.System.Data.DataColumn("IM_PAYMENT_TERM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_PAYMENT_TERM)
            Me.columnIM_STATUS_CHANGED_BY = New Global.System.Data.DataColumn("IM_STATUS_CHANGED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_STATUS_CHANGED_BY)
            Me.columnIM_STATUS_CHANGED_ON = New Global.System.Data.DataColumn("IM_STATUS_CHANGED_ON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_STATUS_CHANGED_ON)
            Me.columnBillAddrState = New Global.System.Data.DataColumn("BillAddrState", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBillAddrState)
            Me.columnBillAddrCtry = New Global.System.Data.DataColumn("BillAddrCtry", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBillAddrCtry)
            Me.columnSupplierAddrState = New Global.System.Data.DataColumn("SupplierAddrState", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplierAddrState)
            Me.columnSupplierAddrCtry = New Global.System.Data.DataColumn("SupplierAddrCtry", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplierAddrCtry)
            Me.columnBuyerCompanyName = New Global.System.Data.DataColumn("BuyerCompanyName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBuyerCompanyName)
            Me.columnItemDesc = New Global.System.Data.DataColumn("ItemDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemDesc)
            Me.columnAmount = New Global.System.Data.DataColumn("Amount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmount)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnGST = New Global.System.Data.DataColumn("GST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGST)
            Me.columnDND_REMARKS = New Global.System.Data.DataColumn("DND_REMARKS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_REMARKS)
            Me.columnCM_BUSINESS_REG_NO = New Global.System.Data.DataColumn("CM_BUSINESS_REG_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_BUSINESS_REG_NO)
            Me.columnCM_PHONE = New Global.System.Data.DataColumn("CM_PHONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_PHONE)
            Me.columnCM_EMAIL = New Global.System.Data.DataColumn("CM_EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_EMAIL)
            Me.columnCM_TAX_REG_NO = New Global.System.Data.DataColumn("CM_TAX_REG_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_TAX_REG_NO)
            Me.columnCM_ADDR_LINE1 = New Global.System.Data.DataColumn("CM_ADDR_LINE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_ADDR_LINE1)
            Me.columnCM_ADDR_LINE2 = New Global.System.Data.DataColumn("CM_ADDR_LINE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_ADDR_LINE2)
            Me.columnCM_ADDR_LINE3 = New Global.System.Data.DataColumn("CM_ADDR_LINE3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_ADDR_LINE3)
            Me.columnCM_POSTCODE = New Global.System.Data.DataColumn("CM_POSTCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_POSTCODE)
            Me.columnCM_COUNTRY = New Global.System.Data.DataColumn("CM_COUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_COUNTRY)
            Me.columnCM_CITY = New Global.System.Data.DataColumn("CM_CITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_CITY)
            Me.columnIM_SHIP_AMT = New Global.System.Data.DataColumn("IM_SHIP_AMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_SHIP_AMT)
            Me.columnID_PRODUCT_DESC = New Global.System.Data.DataColumn("ID_PRODUCT_DESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PRODUCT_DESC)
            Me.columnID_UOM = New Global.System.Data.DataColumn("ID_UOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_UOM)
            Me.columnid_uom1 = New Global.System.Data.DataColumn("id_uom1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_uom1)
            Me.columnLineDesc = New Global.System.Data.DataColumn("LineDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLineDesc)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDNM_DN_INDEX, Me.columnDND_DN_S_COY_ID, Me.columnDND_DN_NO, Me.columnDND_DN_LINE, Me.columnIM_INVOICE_INDEX}, true))
            Me.columnDNM_DN_INDEX.AutoIncrement = true
            Me.columnDNM_DN_INDEX.AllowDBNull = false
            Me.columnDNM_DN_B_COY_ID.AllowDBNull = false
            Me.columnDNM_DN_B_COY_ID.MaxLength = 20
            Me.columnDNM_DN_S_COY_ID.AllowDBNull = false
            Me.columnDNM_DN_S_COY_ID.MaxLength = 20
            Me.columnDNM_DN_NO.AllowDBNull = false
            Me.columnDNM_DN_NO.MaxLength = 20
            Me.columnDNM_DN_DATE.AllowDBNull = false
            Me.columnDNM_DN_TYPE.AllowDBNull = false
            Me.columnDNM_DN_TYPE.MaxLength = 10
            Me.columnDNM_ADDR_LINE1.AllowDBNull = false
            Me.columnDNM_ADDR_LINE1.MaxLength = 255
            Me.columnDNM_ADDR_LINE2.AllowDBNull = false
            Me.columnDNM_ADDR_LINE2.MaxLength = 255
            Me.columnDNM_ADDR_LINE3.AllowDBNull = false
            Me.columnDNM_ADDR_LINE3.MaxLength = 255
            Me.columnDNM_POSTCODE.AllowDBNull = false
            Me.columnDNM_POSTCODE.MaxLength = 10
            Me.columnDNM_CITY.AllowDBNull = false
            Me.columnDNM_CITY.MaxLength = 50
            Me.columnDNM_STATE.AllowDBNull = false
            Me.columnDNM_STATE.MaxLength = 10
            Me.columnDNM_COUNTRY.AllowDBNull = false
            Me.columnDNM_COUNTRY.MaxLength = 10
            Me.columnDNM_INV_NO.AllowDBNull = false
            Me.columnDNM_INV_NO.MaxLength = 20
            Me.columnDNM_CURRENCY_CODE.AllowDBNull = false
            Me.columnDNM_CURRENCY_CODE.MaxLength = 10
            Me.columnDNM_REMARKS.MaxLength = 1000
            Me.columnDNM_DN_STATUS.AllowDBNull = false
            Me.columnDNM_STATUS_CHANGED_BY.MaxLength = 20
            Me.columnDNM_PAYMENT_TERM.MaxLength = 10
            Me.columnDNM_CREATED_BY.MaxLength = 20
            Me.columnDND_DN_S_COY_ID.AllowDBNull = false
            Me.columnDND_DN_S_COY_ID.MaxLength = 20
            Me.columnDND_DN_NO.AllowDBNull = false
            Me.columnDND_DN_NO.MaxLength = 20
            Me.columnDND_DN_LINE.AllowDBNull = false
            Me.columnDND_INV_LINE.AllowDBNull = false
            Me.columnDND_GST_RATE.AllowDBNull = false
            Me.columnDND_GST_RATE.MaxLength = 10
            Me.columnDND_GST_INPUT_TAX_CODE.MaxLength = 20
            Me.columnDND_GST_OUTPUT_TAX_CODE.MaxLength = 20
            Me.columnDND_TICKETING_NO_INPUT.MaxLength = 50
            Me.columnIM_INVOICE_INDEX.AutoIncrement = true
            Me.columnIM_INVOICE_INDEX.AllowDBNull = false
            Me.columnIM_INVOICE_NO.MaxLength = 50
            Me.columnIM_S_COY_ID.MaxLength = 20
            Me.columnIM_S_COY_NAME.MaxLength = 100
            Me.columnIM_B_COY_ID.MaxLength = 20
            Me.columnIM_REMARK.MaxLength = 1000
            Me.columnIM_CREATED_BY.MaxLength = 20
            Me.columnIM_PAYMENT_NO.MaxLength = 40
            Me.columnIM_YOUR_REF.MaxLength = 60
            Me.columnIM_OUR_REF.MaxLength = 50
            Me.columnIM_INVOICE_PREFIX.MaxLength = 30
            Me.columnIM_SUBMITTEDBY_FO.MaxLength = 20
            Me.columnIM_FINANCE_REMARKS.MaxLength = 1000
            Me.columnIM_PRINTED.MaxLength = 3
            Me.columnIM_EXTERNAL_IND.MaxLength = 3
            Me.columnIM_REFERENCE_NO.MaxLength = 50
            Me.columnIM_GST_INVOICE.MaxLength = 1
            Me.columnIM_PAYMENT_TERM.MaxLength = 10
            Me.columnIM_STATUS_CHANGED_BY.MaxLength = 20
            Me.columnBillAddrState.AllowDBNull = false
            Me.columnBillAddrCtry.AllowDBNull = false
            Me.columnSupplierAddrState.AllowDBNull = false
            Me.columnSupplierAddrCtry.AllowDBNull = false
            Me.columnBuyerCompanyName.AllowDBNull = false
            Me.columnBuyerCompanyName.MaxLength = 100
            Me.columnItemDesc.MaxLength = 500
            Me.columnAmount.AllowDBNull = false
            Me.columnTotal.AllowDBNull = false
            Me.columnDND_REMARKS.MaxLength = 1000
            Me.columnCM_BUSINESS_REG_NO.MaxLength = 50
            Me.columnCM_PHONE.MaxLength = 50
            Me.columnCM_EMAIL.MaxLength = 50
            Me.columnCM_TAX_REG_NO.MaxLength = 50
            Me.columnCM_ADDR_LINE1.MaxLength = 255
            Me.columnCM_ADDR_LINE2.MaxLength = 255
            Me.columnCM_ADDR_LINE3.MaxLength = 255
            Me.columnCM_POSTCODE.MaxLength = 10
            Me.columnCM_COUNTRY.MaxLength = 10
            Me.columnCM_CITY.MaxLength = 50
            Me.columnID_PRODUCT_DESC.MaxLength = 500
            Me.columnID_UOM.MaxLength = 20
            Me.columnid_uom1.MaxLength = 20
            Me.columnLineDesc.AllowDBNull = false
            Me.ExtendedProperties.Add("Generator_TablePropName", "_PreviewDebitNote")
            Me.ExtendedProperties.Add("Generator_UserTableName", "PreviewDebitNote")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewPreviewDebitNoteRow() As PreviewDebitNoteRow
            Return CType(Me.NewRow,PreviewDebitNoteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PreviewDebitNoteRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PreviewDebitNoteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PreviewDebitNoteRowChangedEvent) Is Nothing) Then
                RaiseEvent PreviewDebitNoteRowChanged(Me, New PreviewDebitNoteRowChangeEvent(CType(e.Row,PreviewDebitNoteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PreviewDebitNoteRowChangingEvent) Is Nothing) Then
                RaiseEvent PreviewDebitNoteRowChanging(Me, New PreviewDebitNoteRowChangeEvent(CType(e.Row,PreviewDebitNoteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PreviewDebitNoteRowDeletedEvent) Is Nothing) Then
                RaiseEvent PreviewDebitNoteRowDeleted(Me, New PreviewDebitNoteRowChangeEvent(CType(e.Row,PreviewDebitNoteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PreviewDebitNoteRowDeletingEvent) Is Nothing) Then
                RaiseEvent PreviewDebitNoteRowDeleting(Me, New PreviewDebitNoteRowChangeEvent(CType(e.Row,PreviewDebitNoteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovePreviewDebitNoteRow(ByVal row As PreviewDebitNoteRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As PreviewDebitNote = New PreviewDebitNote
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PreviewDebitNoteDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PreviewDebitAdviceDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnDNM_DN_INDEX As Global.System.Data.DataColumn
        
        Private columnDNM_DN_B_COY_ID As Global.System.Data.DataColumn
        
        Private columnDNM_DN_S_COY_ID As Global.System.Data.DataColumn
        
        Private columnDNM_DN_NO As Global.System.Data.DataColumn
        
        Private columnDNM_DN_DATE As Global.System.Data.DataColumn
        
        Private columnDNM_DN_TYPE As Global.System.Data.DataColumn
        
        Private columnDNM_ADDR_LINE1 As Global.System.Data.DataColumn
        
        Private columnDNM_ADDR_LINE2 As Global.System.Data.DataColumn
        
        Private columnDNM_ADDR_LINE3 As Global.System.Data.DataColumn
        
        Private columnDNM_POSTCODE As Global.System.Data.DataColumn
        
        Private columnDNM_CITY As Global.System.Data.DataColumn
        
        Private columnDNM_STATE As Global.System.Data.DataColumn
        
        Private columnDNM_COUNTRY As Global.System.Data.DataColumn
        
        Private columnDNM_INV_NO As Global.System.Data.DataColumn
        
        Private columnDNM_CURRENCY_CODE As Global.System.Data.DataColumn
        
        Private columnDNM_EXCHANGE_RATE As Global.System.Data.DataColumn
        
        Private columnDNM_REMARKS As Global.System.Data.DataColumn
        
        Private columnDNM_DN_STATUS As Global.System.Data.DataColumn
        
        Private columnDNM_STATUS_CHANGED_BY As Global.System.Data.DataColumn
        
        Private columnDNM_STATUS_CHANGED_ON As Global.System.Data.DataColumn
        
        Private columnDNM_FM_APPROVED_DATE As Global.System.Data.DataColumn
        
        Private columnDNM_PAYMENT_TERM As Global.System.Data.DataColumn
        
        Private columnDNM_PAYMENT_DATE As Global.System.Data.DataColumn
        
        Private columnDNM_DOWNLOADED_DATE As Global.System.Data.DataColumn
        
        Private columnDNM_CREATED_BY As Global.System.Data.DataColumn
        
        Private columnDNM_CREATED_DATE As Global.System.Data.DataColumn
        
        Private columnDNM_DN_TOTAL As Global.System.Data.DataColumn
        
        Private columnDND_DN_S_COY_ID As Global.System.Data.DataColumn
        
        Private columnDND_DN_NO As Global.System.Data.DataColumn
        
        Private columnDND_DN_LINE As Global.System.Data.DataColumn
        
        Private columnDND_INV_LINE As Global.System.Data.DataColumn
        
        Private columnDND_QTY As Global.System.Data.DataColumn
        
        Private columnDND_UNIT_COST As Global.System.Data.DataColumn
        
        Private columnDND_GST_RATE As Global.System.Data.DataColumn
        
        Private columnDND_GST_INPUT_TAX_CODE As Global.System.Data.DataColumn
        
        Private columnDND_GST_OUTPUT_TAX_CODE As Global.System.Data.DataColumn
        
        Private columnDND_TICKETING_NO_INPUT As Global.System.Data.DataColumn
        
        Private columnDND_REMARKS As Global.System.Data.DataColumn
        
        Private columnIM_INVOICE_INDEX As Global.System.Data.DataColumn
        
        Private columnIM_INVOICE_NO As Global.System.Data.DataColumn
        
        Private columnIM_S_COY_ID As Global.System.Data.DataColumn
        
        Private columnIM_S_COY_NAME As Global.System.Data.DataColumn
        
        Private columnIM_PO_INDEX As Global.System.Data.DataColumn
        
        Private columnIM_B_COY_ID As Global.System.Data.DataColumn
        
        Private columnIM_PAYMENT_DATE As Global.System.Data.DataColumn
        
        Private columnIM_REMARK As Global.System.Data.DataColumn
        
        Private columnIM_CREATED_BY As Global.System.Data.DataColumn
        
        Private columnIM_CREATED_ON As Global.System.Data.DataColumn
        
        Private columnIM_INVOICE_STATUS As Global.System.Data.DataColumn
        
        Private columnIM_PAYMENT_NO As Global.System.Data.DataColumn
        
        Private columnIM_YOUR_REF As Global.System.Data.DataColumn
        
        Private columnIM_OUR_REF As Global.System.Data.DataColumn
        
        Private columnIM_INVOICE_PREFIX As Global.System.Data.DataColumn
        
        Private columnIM_SUBMITTEDBY_FO As Global.System.Data.DataColumn
        
        Private columnIM_EXCHANGE_RATE As Global.System.Data.DataColumn
        
        Private columnIM_FINANCE_REMARKS As Global.System.Data.DataColumn
        
        Private columnIM_PRINTED As Global.System.Data.DataColumn
        
        Private columnIM_FOLDER As Global.System.Data.DataColumn
        
        Private columnIM_FM_APPROVED_DATE As Global.System.Data.DataColumn
        
        Private columnIM_WITHHOLDING_TAX As Global.System.Data.DataColumn
        
        Private columnIM_DOWNLOADED_DATE As Global.System.Data.DataColumn
        
        Private columnIM_EXTERNAL_IND As Global.System.Data.DataColumn
        
        Private columnIM_REFERENCE_NO As Global.System.Data.DataColumn
        
        Private columnIM_INVOICE_TOTAL As Global.System.Data.DataColumn
        
        Private columnIM_GST_INVOICE As Global.System.Data.DataColumn
        
        Private columnIM_PAYMENT_TERM As Global.System.Data.DataColumn
        
        Private columnIM_STATUS_CHANGED_BY As Global.System.Data.DataColumn
        
        Private columnIM_STATUS_CHANGED_ON As Global.System.Data.DataColumn
        
        Private columnIM_SHIP_AMT As Global.System.Data.DataColumn
        
        Private columnBillAddrState As Global.System.Data.DataColumn
        
        Private columnBillAddrCtry As Global.System.Data.DataColumn
        
        Private columnSupplierAddrState As Global.System.Data.DataColumn
        
        Private columnSupplierAddrCtry As Global.System.Data.DataColumn
        
        Private columnBuyerCompanyName As Global.System.Data.DataColumn
        
        Private columnID_PRODUCT_DESC As Global.System.Data.DataColumn
        
        Private columnID_UOM As Global.System.Data.DataColumn
        
        Private columnItemDesc As Global.System.Data.DataColumn
        
        Private columnid_uom1 As Global.System.Data.DataColumn
        
        Private columnAmount As Global.System.Data.DataColumn
        
        Private columnCM_BUSINESS_REG_NO As Global.System.Data.DataColumn
        
        Private columnCM_PHONE As Global.System.Data.DataColumn
        
        Private columnCM_EMAIL As Global.System.Data.DataColumn
        
        Private columnCM_TAX_REG_NO As Global.System.Data.DataColumn
        
        Private columnCM_ADDR_LINE1 As Global.System.Data.DataColumn
        
        Private columnCM_ADDR_LINE2 As Global.System.Data.DataColumn
        
        Private columnCM_ADDR_LINE3 As Global.System.Data.DataColumn
        
        Private columnCM_POSTCODE As Global.System.Data.DataColumn
        
        Private columnCM_CITY As Global.System.Data.DataColumn
        
        Private columnCM_COUNTRY As Global.System.Data.DataColumn
        
        Private columnLineDesc As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PreviewDebitAdvice"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_DN_INDEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_DN_INDEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_DN_B_COY_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_DN_B_COY_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_DN_S_COY_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_DN_S_COY_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_DN_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_DN_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_DN_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_DN_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_DN_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_DN_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_ADDR_LINE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_ADDR_LINE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_ADDR_LINE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_ADDR_LINE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_ADDR_LINE3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_ADDR_LINE3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_POSTCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_POSTCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_CITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_CITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_STATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_STATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_COUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_COUNTRY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_INV_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_INV_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_CURRENCY_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_CURRENCY_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_EXCHANGE_RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_EXCHANGE_RATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_REMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_REMARKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_DN_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_DN_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_STATUS_CHANGED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_STATUS_CHANGED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_STATUS_CHANGED_ONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_STATUS_CHANGED_ON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_FM_APPROVED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_FM_APPROVED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_PAYMENT_TERMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_PAYMENT_TERM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_PAYMENT_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_PAYMENT_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_DOWNLOADED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_DOWNLOADED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_CREATED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_CREATED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_CREATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_CREATED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNM_DN_TOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNM_DN_TOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_DN_S_COY_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_DN_S_COY_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_DN_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_DN_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_DN_LINEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_DN_LINE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_INV_LINEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_INV_LINE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_QTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_UNIT_COSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_UNIT_COST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_GST_RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_GST_RATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_GST_INPUT_TAX_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_GST_INPUT_TAX_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_GST_OUTPUT_TAX_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_GST_OUTPUT_TAX_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_TICKETING_NO_INPUTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_TICKETING_NO_INPUT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DND_REMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDND_REMARKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_INVOICE_INDEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_INVOICE_INDEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_INVOICE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_INVOICE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_S_COY_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_S_COY_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_S_COY_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_S_COY_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_PO_INDEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_PO_INDEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_B_COY_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_B_COY_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_PAYMENT_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_PAYMENT_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_REMARKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_REMARK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_CREATED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_CREATED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_CREATED_ONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_CREATED_ON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_INVOICE_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_INVOICE_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_PAYMENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_PAYMENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_YOUR_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_YOUR_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_OUR_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_OUR_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_INVOICE_PREFIXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_INVOICE_PREFIX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_SUBMITTEDBY_FOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_SUBMITTEDBY_FO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_EXCHANGE_RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_EXCHANGE_RATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_FINANCE_REMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_FINANCE_REMARKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_PRINTEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_PRINTED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_FOLDERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_FOLDER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_FM_APPROVED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_FM_APPROVED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_WITHHOLDING_TAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_WITHHOLDING_TAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_DOWNLOADED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_DOWNLOADED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_EXTERNAL_INDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_EXTERNAL_IND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_REFERENCE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_REFERENCE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_INVOICE_TOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_INVOICE_TOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_GST_INVOICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_GST_INVOICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_PAYMENT_TERMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_PAYMENT_TERM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_STATUS_CHANGED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_STATUS_CHANGED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_STATUS_CHANGED_ONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_STATUS_CHANGED_ON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_SHIP_AMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_SHIP_AMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BillAddrStateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBillAddrState
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BillAddrCtryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBillAddrCtry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SupplierAddrStateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplierAddrState
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SupplierAddrCtryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplierAddrCtry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BuyerCompanyNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBuyerCompanyName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ID_PRODUCT_DESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PRODUCT_DESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ID_UOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_UOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ItemDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property id_uom1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_uom1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_BUSINESS_REG_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_BUSINESS_REG_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_PHONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_PHONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_EMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_TAX_REG_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_TAX_REG_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_ADDR_LINE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_ADDR_LINE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_ADDR_LINE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_ADDR_LINE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_ADDR_LINE3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_ADDR_LINE3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_POSTCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_POSTCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_CITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_CITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_COUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_COUNTRY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LineDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLineDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PreviewDebitAdviceRow
            Get
                Return CType(Me.Rows(index),PreviewDebitAdviceRow)
            End Get
        End Property
        
        Public Event PreviewDebitAdviceRowChanging As PreviewDebitAdviceRowChangeEventHandler
        
        Public Event PreviewDebitAdviceRowChanged As PreviewDebitAdviceRowChangeEventHandler
        
        Public Event PreviewDebitAdviceRowDeleting As PreviewDebitAdviceRowChangeEventHandler
        
        Public Event PreviewDebitAdviceRowDeleted As PreviewDebitAdviceRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddPreviewDebitAdviceRow(ByVal row As PreviewDebitAdviceRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddPreviewDebitAdviceRow( _
                    ByVal DNM_DN_B_COY_ID As String,  _
                    ByVal DNM_DN_S_COY_ID As String,  _
                    ByVal DNM_DN_NO As String,  _
                    ByVal DNM_DN_DATE As Date,  _
                    ByVal DNM_DN_TYPE As String,  _
                    ByVal DNM_ADDR_LINE1 As String,  _
                    ByVal DNM_ADDR_LINE2 As String,  _
                    ByVal DNM_ADDR_LINE3 As String,  _
                    ByVal DNM_POSTCODE As String,  _
                    ByVal DNM_CITY As String,  _
                    ByVal DNM_STATE As String,  _
                    ByVal DNM_COUNTRY As String,  _
                    ByVal DNM_INV_NO As String,  _
                    ByVal DNM_CURRENCY_CODE As String,  _
                    ByVal DNM_EXCHANGE_RATE As Double,  _
                    ByVal DNM_REMARKS As String,  _
                    ByVal DNM_DN_STATUS As Integer,  _
                    ByVal DNM_STATUS_CHANGED_BY As String,  _
                    ByVal DNM_STATUS_CHANGED_ON As Date,  _
                    ByVal DNM_FM_APPROVED_DATE As Date,  _
                    ByVal DNM_PAYMENT_TERM As String,  _
                    ByVal DNM_PAYMENT_DATE As Date,  _
                    ByVal DNM_DOWNLOADED_DATE As Date,  _
                    ByVal DNM_CREATED_BY As String,  _
                    ByVal DNM_CREATED_DATE As Date,  _
                    ByVal DNM_DN_TOTAL As Decimal,  _
                    ByVal DND_DN_S_COY_ID As String,  _
                    ByVal DND_DN_NO As String,  _
                    ByVal DND_DN_LINE As Integer,  _
                    ByVal DND_INV_LINE As Integer,  _
                    ByVal DND_QTY As Decimal,  _
                    ByVal DND_UNIT_COST As Decimal,  _
                    ByVal DND_GST_RATE As String,  _
                    ByVal DND_GST_INPUT_TAX_CODE As String,  _
                    ByVal DND_GST_OUTPUT_TAX_CODE As String,  _
                    ByVal DND_TICKETING_NO_INPUT As String,  _
                    ByVal DND_REMARKS As String,  _
                    ByVal IM_INVOICE_NO As String,  _
                    ByVal IM_S_COY_ID As String,  _
                    ByVal IM_S_COY_NAME As String,  _
                    ByVal IM_PO_INDEX As Long,  _
                    ByVal IM_B_COY_ID As String,  _
                    ByVal IM_PAYMENT_DATE As Date,  _
                    ByVal IM_REMARK As String,  _
                    ByVal IM_CREATED_BY As String,  _
                    ByVal IM_CREATED_ON As Date,  _
                    ByVal IM_INVOICE_STATUS As Integer,  _
                    ByVal IM_PAYMENT_NO As String,  _
                    ByVal IM_YOUR_REF As String,  _
                    ByVal IM_OUR_REF As String,  _
                    ByVal IM_INVOICE_PREFIX As String,  _
                    ByVal IM_SUBMITTEDBY_FO As String,  _
                    ByVal IM_EXCHANGE_RATE As Double,  _
                    ByVal IM_FINANCE_REMARKS As String,  _
                    ByVal IM_PRINTED As String,  _
                    ByVal IM_FOLDER As Integer,  _
                    ByVal IM_FM_APPROVED_DATE As Date,  _
                    ByVal IM_WITHHOLDING_TAX As Integer,  _
                    ByVal IM_DOWNLOADED_DATE As Date,  _
                    ByVal IM_EXTERNAL_IND As String,  _
                    ByVal IM_REFERENCE_NO As String,  _
                    ByVal IM_INVOICE_TOTAL As Decimal,  _
                    ByVal IM_GST_INVOICE As String,  _
                    ByVal IM_PAYMENT_TERM As String,  _
                    ByVal IM_STATUS_CHANGED_BY As String,  _
                    ByVal IM_STATUS_CHANGED_ON As Date,  _
                    ByVal IM_SHIP_AMT As Decimal,  _
                    ByVal BillAddrState As String,  _
                    ByVal BillAddrCtry As String,  _
                    ByVal SupplierAddrState As String,  _
                    ByVal SupplierAddrCtry As String,  _
                    ByVal BuyerCompanyName As String,  _
                    ByVal ID_PRODUCT_DESC As String,  _
                    ByVal ID_UOM As String,  _
                    ByVal ItemDesc As String,  _
                    ByVal id_uom1 As String,  _
                    ByVal Amount As String,  _
                    ByVal CM_BUSINESS_REG_NO As String,  _
                    ByVal CM_PHONE As String,  _
                    ByVal CM_EMAIL As String,  _
                    ByVal CM_TAX_REG_NO As String,  _
                    ByVal CM_ADDR_LINE1 As String,  _
                    ByVal CM_ADDR_LINE2 As String,  _
                    ByVal CM_ADDR_LINE3 As String,  _
                    ByVal CM_POSTCODE As String,  _
                    ByVal CM_CITY As String,  _
                    ByVal CM_COUNTRY As String,  _
                    ByVal LineDesc As String) As PreviewDebitAdviceRow
            Dim rowPreviewDebitAdviceRow As PreviewDebitAdviceRow = CType(Me.NewRow,PreviewDebitAdviceRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, DNM_DN_B_COY_ID, DNM_DN_S_COY_ID, DNM_DN_NO, DNM_DN_DATE, DNM_DN_TYPE, DNM_ADDR_LINE1, DNM_ADDR_LINE2, DNM_ADDR_LINE3, DNM_POSTCODE, DNM_CITY, DNM_STATE, DNM_COUNTRY, DNM_INV_NO, DNM_CURRENCY_CODE, DNM_EXCHANGE_RATE, DNM_REMARKS, DNM_DN_STATUS, DNM_STATUS_CHANGED_BY, DNM_STATUS_CHANGED_ON, DNM_FM_APPROVED_DATE, DNM_PAYMENT_TERM, DNM_PAYMENT_DATE, DNM_DOWNLOADED_DATE, DNM_CREATED_BY, DNM_CREATED_DATE, DNM_DN_TOTAL, DND_DN_S_COY_ID, DND_DN_NO, DND_DN_LINE, DND_INV_LINE, DND_QTY, DND_UNIT_COST, DND_GST_RATE, DND_GST_INPUT_TAX_CODE, DND_GST_OUTPUT_TAX_CODE, DND_TICKETING_NO_INPUT, DND_REMARKS, Nothing, IM_INVOICE_NO, IM_S_COY_ID, IM_S_COY_NAME, IM_PO_INDEX, IM_B_COY_ID, IM_PAYMENT_DATE, IM_REMARK, IM_CREATED_BY, IM_CREATED_ON, IM_INVOICE_STATUS, IM_PAYMENT_NO, IM_YOUR_REF, IM_OUR_REF, IM_INVOICE_PREFIX, IM_SUBMITTEDBY_FO, IM_EXCHANGE_RATE, IM_FINANCE_REMARKS, IM_PRINTED, IM_FOLDER, IM_FM_APPROVED_DATE, IM_WITHHOLDING_TAX, IM_DOWNLOADED_DATE, IM_EXTERNAL_IND, IM_REFERENCE_NO, IM_INVOICE_TOTAL, IM_GST_INVOICE, IM_PAYMENT_TERM, IM_STATUS_CHANGED_BY, IM_STATUS_CHANGED_ON, IM_SHIP_AMT, BillAddrState, BillAddrCtry, SupplierAddrState, SupplierAddrCtry, BuyerCompanyName, ID_PRODUCT_DESC, ID_UOM, ItemDesc, id_uom1, Amount, CM_BUSINESS_REG_NO, CM_PHONE, CM_EMAIL, CM_TAX_REG_NO, CM_ADDR_LINE1, CM_ADDR_LINE2, CM_ADDR_LINE3, CM_POSTCODE, CM_CITY, CM_COUNTRY, LineDesc}
            rowPreviewDebitAdviceRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPreviewDebitAdviceRow)
            Return rowPreviewDebitAdviceRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByDNM_DN_INDEXDND_DN_S_COY_IDDND_DN_NODND_DN_LINEIM_INVOICE_INDEX(ByVal DNM_DN_INDEX As Long, ByVal DND_DN_S_COY_ID As String, ByVal DND_DN_NO As String, ByVal DND_DN_LINE As Integer, ByVal IM_INVOICE_INDEX As Long) As PreviewDebitAdviceRow
            Return CType(Me.Rows.Find(New Object() {DNM_DN_INDEX, DND_DN_S_COY_ID, DND_DN_NO, DND_DN_LINE, IM_INVOICE_INDEX}),PreviewDebitAdviceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PreviewDebitAdviceDataTable = CType(MyBase.Clone,PreviewDebitAdviceDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PreviewDebitAdviceDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnDNM_DN_INDEX = MyBase.Columns("DNM_DN_INDEX")
            Me.columnDNM_DN_B_COY_ID = MyBase.Columns("DNM_DN_B_COY_ID")
            Me.columnDNM_DN_S_COY_ID = MyBase.Columns("DNM_DN_S_COY_ID")
            Me.columnDNM_DN_NO = MyBase.Columns("DNM_DN_NO")
            Me.columnDNM_DN_DATE = MyBase.Columns("DNM_DN_DATE")
            Me.columnDNM_DN_TYPE = MyBase.Columns("DNM_DN_TYPE")
            Me.columnDNM_ADDR_LINE1 = MyBase.Columns("DNM_ADDR_LINE1")
            Me.columnDNM_ADDR_LINE2 = MyBase.Columns("DNM_ADDR_LINE2")
            Me.columnDNM_ADDR_LINE3 = MyBase.Columns("DNM_ADDR_LINE3")
            Me.columnDNM_POSTCODE = MyBase.Columns("DNM_POSTCODE")
            Me.columnDNM_CITY = MyBase.Columns("DNM_CITY")
            Me.columnDNM_STATE = MyBase.Columns("DNM_STATE")
            Me.columnDNM_COUNTRY = MyBase.Columns("DNM_COUNTRY")
            Me.columnDNM_INV_NO = MyBase.Columns("DNM_INV_NO")
            Me.columnDNM_CURRENCY_CODE = MyBase.Columns("DNM_CURRENCY_CODE")
            Me.columnDNM_EXCHANGE_RATE = MyBase.Columns("DNM_EXCHANGE_RATE")
            Me.columnDNM_REMARKS = MyBase.Columns("DNM_REMARKS")
            Me.columnDNM_DN_STATUS = MyBase.Columns("DNM_DN_STATUS")
            Me.columnDNM_STATUS_CHANGED_BY = MyBase.Columns("DNM_STATUS_CHANGED_BY")
            Me.columnDNM_STATUS_CHANGED_ON = MyBase.Columns("DNM_STATUS_CHANGED_ON")
            Me.columnDNM_FM_APPROVED_DATE = MyBase.Columns("DNM_FM_APPROVED_DATE")
            Me.columnDNM_PAYMENT_TERM = MyBase.Columns("DNM_PAYMENT_TERM")
            Me.columnDNM_PAYMENT_DATE = MyBase.Columns("DNM_PAYMENT_DATE")
            Me.columnDNM_DOWNLOADED_DATE = MyBase.Columns("DNM_DOWNLOADED_DATE")
            Me.columnDNM_CREATED_BY = MyBase.Columns("DNM_CREATED_BY")
            Me.columnDNM_CREATED_DATE = MyBase.Columns("DNM_CREATED_DATE")
            Me.columnDNM_DN_TOTAL = MyBase.Columns("DNM_DN_TOTAL")
            Me.columnDND_DN_S_COY_ID = MyBase.Columns("DND_DN_S_COY_ID")
            Me.columnDND_DN_NO = MyBase.Columns("DND_DN_NO")
            Me.columnDND_DN_LINE = MyBase.Columns("DND_DN_LINE")
            Me.columnDND_INV_LINE = MyBase.Columns("DND_INV_LINE")
            Me.columnDND_QTY = MyBase.Columns("DND_QTY")
            Me.columnDND_UNIT_COST = MyBase.Columns("DND_UNIT_COST")
            Me.columnDND_GST_RATE = MyBase.Columns("DND_GST_RATE")
            Me.columnDND_GST_INPUT_TAX_CODE = MyBase.Columns("DND_GST_INPUT_TAX_CODE")
            Me.columnDND_GST_OUTPUT_TAX_CODE = MyBase.Columns("DND_GST_OUTPUT_TAX_CODE")
            Me.columnDND_TICKETING_NO_INPUT = MyBase.Columns("DND_TICKETING_NO_INPUT")
            Me.columnDND_REMARKS = MyBase.Columns("DND_REMARKS")
            Me.columnIM_INVOICE_INDEX = MyBase.Columns("IM_INVOICE_INDEX")
            Me.columnIM_INVOICE_NO = MyBase.Columns("IM_INVOICE_NO")
            Me.columnIM_S_COY_ID = MyBase.Columns("IM_S_COY_ID")
            Me.columnIM_S_COY_NAME = MyBase.Columns("IM_S_COY_NAME")
            Me.columnIM_PO_INDEX = MyBase.Columns("IM_PO_INDEX")
            Me.columnIM_B_COY_ID = MyBase.Columns("IM_B_COY_ID")
            Me.columnIM_PAYMENT_DATE = MyBase.Columns("IM_PAYMENT_DATE")
            Me.columnIM_REMARK = MyBase.Columns("IM_REMARK")
            Me.columnIM_CREATED_BY = MyBase.Columns("IM_CREATED_BY")
            Me.columnIM_CREATED_ON = MyBase.Columns("IM_CREATED_ON")
            Me.columnIM_INVOICE_STATUS = MyBase.Columns("IM_INVOICE_STATUS")
            Me.columnIM_PAYMENT_NO = MyBase.Columns("IM_PAYMENT_NO")
            Me.columnIM_YOUR_REF = MyBase.Columns("IM_YOUR_REF")
            Me.columnIM_OUR_REF = MyBase.Columns("IM_OUR_REF")
            Me.columnIM_INVOICE_PREFIX = MyBase.Columns("IM_INVOICE_PREFIX")
            Me.columnIM_SUBMITTEDBY_FO = MyBase.Columns("IM_SUBMITTEDBY_FO")
            Me.columnIM_EXCHANGE_RATE = MyBase.Columns("IM_EXCHANGE_RATE")
            Me.columnIM_FINANCE_REMARKS = MyBase.Columns("IM_FINANCE_REMARKS")
            Me.columnIM_PRINTED = MyBase.Columns("IM_PRINTED")
            Me.columnIM_FOLDER = MyBase.Columns("IM_FOLDER")
            Me.columnIM_FM_APPROVED_DATE = MyBase.Columns("IM_FM_APPROVED_DATE")
            Me.columnIM_WITHHOLDING_TAX = MyBase.Columns("IM_WITHHOLDING_TAX")
            Me.columnIM_DOWNLOADED_DATE = MyBase.Columns("IM_DOWNLOADED_DATE")
            Me.columnIM_EXTERNAL_IND = MyBase.Columns("IM_EXTERNAL_IND")
            Me.columnIM_REFERENCE_NO = MyBase.Columns("IM_REFERENCE_NO")
            Me.columnIM_INVOICE_TOTAL = MyBase.Columns("IM_INVOICE_TOTAL")
            Me.columnIM_GST_INVOICE = MyBase.Columns("IM_GST_INVOICE")
            Me.columnIM_PAYMENT_TERM = MyBase.Columns("IM_PAYMENT_TERM")
            Me.columnIM_STATUS_CHANGED_BY = MyBase.Columns("IM_STATUS_CHANGED_BY")
            Me.columnIM_STATUS_CHANGED_ON = MyBase.Columns("IM_STATUS_CHANGED_ON")
            Me.columnIM_SHIP_AMT = MyBase.Columns("IM_SHIP_AMT")
            Me.columnBillAddrState = MyBase.Columns("BillAddrState")
            Me.columnBillAddrCtry = MyBase.Columns("BillAddrCtry")
            Me.columnSupplierAddrState = MyBase.Columns("SupplierAddrState")
            Me.columnSupplierAddrCtry = MyBase.Columns("SupplierAddrCtry")
            Me.columnBuyerCompanyName = MyBase.Columns("BuyerCompanyName")
            Me.columnID_PRODUCT_DESC = MyBase.Columns("ID_PRODUCT_DESC")
            Me.columnID_UOM = MyBase.Columns("ID_UOM")
            Me.columnItemDesc = MyBase.Columns("ItemDesc")
            Me.columnid_uom1 = MyBase.Columns("id_uom1")
            Me.columnAmount = MyBase.Columns("Amount")
            Me.columnCM_BUSINESS_REG_NO = MyBase.Columns("CM_BUSINESS_REG_NO")
            Me.columnCM_PHONE = MyBase.Columns("CM_PHONE")
            Me.columnCM_EMAIL = MyBase.Columns("CM_EMAIL")
            Me.columnCM_TAX_REG_NO = MyBase.Columns("CM_TAX_REG_NO")
            Me.columnCM_ADDR_LINE1 = MyBase.Columns("CM_ADDR_LINE1")
            Me.columnCM_ADDR_LINE2 = MyBase.Columns("CM_ADDR_LINE2")
            Me.columnCM_ADDR_LINE3 = MyBase.Columns("CM_ADDR_LINE3")
            Me.columnCM_POSTCODE = MyBase.Columns("CM_POSTCODE")
            Me.columnCM_CITY = MyBase.Columns("CM_CITY")
            Me.columnCM_COUNTRY = MyBase.Columns("CM_COUNTRY")
            Me.columnLineDesc = MyBase.Columns("LineDesc")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnDNM_DN_INDEX = New Global.System.Data.DataColumn("DNM_DN_INDEX", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_DN_INDEX)
            Me.columnDNM_DN_B_COY_ID = New Global.System.Data.DataColumn("DNM_DN_B_COY_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_DN_B_COY_ID)
            Me.columnDNM_DN_S_COY_ID = New Global.System.Data.DataColumn("DNM_DN_S_COY_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_DN_S_COY_ID)
            Me.columnDNM_DN_NO = New Global.System.Data.DataColumn("DNM_DN_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_DN_NO)
            Me.columnDNM_DN_DATE = New Global.System.Data.DataColumn("DNM_DN_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_DN_DATE)
            Me.columnDNM_DN_TYPE = New Global.System.Data.DataColumn("DNM_DN_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_DN_TYPE)
            Me.columnDNM_ADDR_LINE1 = New Global.System.Data.DataColumn("DNM_ADDR_LINE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_ADDR_LINE1)
            Me.columnDNM_ADDR_LINE2 = New Global.System.Data.DataColumn("DNM_ADDR_LINE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_ADDR_LINE2)
            Me.columnDNM_ADDR_LINE3 = New Global.System.Data.DataColumn("DNM_ADDR_LINE3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_ADDR_LINE3)
            Me.columnDNM_POSTCODE = New Global.System.Data.DataColumn("DNM_POSTCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_POSTCODE)
            Me.columnDNM_CITY = New Global.System.Data.DataColumn("DNM_CITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_CITY)
            Me.columnDNM_STATE = New Global.System.Data.DataColumn("DNM_STATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_STATE)
            Me.columnDNM_COUNTRY = New Global.System.Data.DataColumn("DNM_COUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_COUNTRY)
            Me.columnDNM_INV_NO = New Global.System.Data.DataColumn("DNM_INV_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_INV_NO)
            Me.columnDNM_CURRENCY_CODE = New Global.System.Data.DataColumn("DNM_CURRENCY_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_CURRENCY_CODE)
            Me.columnDNM_EXCHANGE_RATE = New Global.System.Data.DataColumn("DNM_EXCHANGE_RATE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_EXCHANGE_RATE)
            Me.columnDNM_REMARKS = New Global.System.Data.DataColumn("DNM_REMARKS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_REMARKS)
            Me.columnDNM_DN_STATUS = New Global.System.Data.DataColumn("DNM_DN_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_DN_STATUS)
            Me.columnDNM_STATUS_CHANGED_BY = New Global.System.Data.DataColumn("DNM_STATUS_CHANGED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_STATUS_CHANGED_BY)
            Me.columnDNM_STATUS_CHANGED_ON = New Global.System.Data.DataColumn("DNM_STATUS_CHANGED_ON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_STATUS_CHANGED_ON)
            Me.columnDNM_FM_APPROVED_DATE = New Global.System.Data.DataColumn("DNM_FM_APPROVED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_FM_APPROVED_DATE)
            Me.columnDNM_PAYMENT_TERM = New Global.System.Data.DataColumn("DNM_PAYMENT_TERM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_PAYMENT_TERM)
            Me.columnDNM_PAYMENT_DATE = New Global.System.Data.DataColumn("DNM_PAYMENT_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_PAYMENT_DATE)
            Me.columnDNM_DOWNLOADED_DATE = New Global.System.Data.DataColumn("DNM_DOWNLOADED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_DOWNLOADED_DATE)
            Me.columnDNM_CREATED_BY = New Global.System.Data.DataColumn("DNM_CREATED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_CREATED_BY)
            Me.columnDNM_CREATED_DATE = New Global.System.Data.DataColumn("DNM_CREATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_CREATED_DATE)
            Me.columnDNM_DN_TOTAL = New Global.System.Data.DataColumn("DNM_DN_TOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNM_DN_TOTAL)
            Me.columnDND_DN_S_COY_ID = New Global.System.Data.DataColumn("DND_DN_S_COY_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_DN_S_COY_ID)
            Me.columnDND_DN_NO = New Global.System.Data.DataColumn("DND_DN_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_DN_NO)
            Me.columnDND_DN_LINE = New Global.System.Data.DataColumn("DND_DN_LINE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_DN_LINE)
            Me.columnDND_INV_LINE = New Global.System.Data.DataColumn("DND_INV_LINE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_INV_LINE)
            Me.columnDND_QTY = New Global.System.Data.DataColumn("DND_QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_QTY)
            Me.columnDND_UNIT_COST = New Global.System.Data.DataColumn("DND_UNIT_COST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_UNIT_COST)
            Me.columnDND_GST_RATE = New Global.System.Data.DataColumn("DND_GST_RATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_GST_RATE)
            Me.columnDND_GST_INPUT_TAX_CODE = New Global.System.Data.DataColumn("DND_GST_INPUT_TAX_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_GST_INPUT_TAX_CODE)
            Me.columnDND_GST_OUTPUT_TAX_CODE = New Global.System.Data.DataColumn("DND_GST_OUTPUT_TAX_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_GST_OUTPUT_TAX_CODE)
            Me.columnDND_TICKETING_NO_INPUT = New Global.System.Data.DataColumn("DND_TICKETING_NO_INPUT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_TICKETING_NO_INPUT)
            Me.columnDND_REMARKS = New Global.System.Data.DataColumn("DND_REMARKS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDND_REMARKS)
            Me.columnIM_INVOICE_INDEX = New Global.System.Data.DataColumn("IM_INVOICE_INDEX", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_INVOICE_INDEX)
            Me.columnIM_INVOICE_NO = New Global.System.Data.DataColumn("IM_INVOICE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_INVOICE_NO)
            Me.columnIM_S_COY_ID = New Global.System.Data.DataColumn("IM_S_COY_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_S_COY_ID)
            Me.columnIM_S_COY_NAME = New Global.System.Data.DataColumn("IM_S_COY_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_S_COY_NAME)
            Me.columnIM_PO_INDEX = New Global.System.Data.DataColumn("IM_PO_INDEX", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_PO_INDEX)
            Me.columnIM_B_COY_ID = New Global.System.Data.DataColumn("IM_B_COY_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_B_COY_ID)
            Me.columnIM_PAYMENT_DATE = New Global.System.Data.DataColumn("IM_PAYMENT_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_PAYMENT_DATE)
            Me.columnIM_REMARK = New Global.System.Data.DataColumn("IM_REMARK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_REMARK)
            Me.columnIM_CREATED_BY = New Global.System.Data.DataColumn("IM_CREATED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_CREATED_BY)
            Me.columnIM_CREATED_ON = New Global.System.Data.DataColumn("IM_CREATED_ON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_CREATED_ON)
            Me.columnIM_INVOICE_STATUS = New Global.System.Data.DataColumn("IM_INVOICE_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_INVOICE_STATUS)
            Me.columnIM_PAYMENT_NO = New Global.System.Data.DataColumn("IM_PAYMENT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_PAYMENT_NO)
            Me.columnIM_YOUR_REF = New Global.System.Data.DataColumn("IM_YOUR_REF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_YOUR_REF)
            Me.columnIM_OUR_REF = New Global.System.Data.DataColumn("IM_OUR_REF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_OUR_REF)
            Me.columnIM_INVOICE_PREFIX = New Global.System.Data.DataColumn("IM_INVOICE_PREFIX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_INVOICE_PREFIX)
            Me.columnIM_SUBMITTEDBY_FO = New Global.System.Data.DataColumn("IM_SUBMITTEDBY_FO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_SUBMITTEDBY_FO)
            Me.columnIM_EXCHANGE_RATE = New Global.System.Data.DataColumn("IM_EXCHANGE_RATE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_EXCHANGE_RATE)
            Me.columnIM_FINANCE_REMARKS = New Global.System.Data.DataColumn("IM_FINANCE_REMARKS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_FINANCE_REMARKS)
            Me.columnIM_PRINTED = New Global.System.Data.DataColumn("IM_PRINTED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_PRINTED)
            Me.columnIM_FOLDER = New Global.System.Data.DataColumn("IM_FOLDER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_FOLDER)
            Me.columnIM_FM_APPROVED_DATE = New Global.System.Data.DataColumn("IM_FM_APPROVED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_FM_APPROVED_DATE)
            Me.columnIM_WITHHOLDING_TAX = New Global.System.Data.DataColumn("IM_WITHHOLDING_TAX", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_WITHHOLDING_TAX)
            Me.columnIM_DOWNLOADED_DATE = New Global.System.Data.DataColumn("IM_DOWNLOADED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_DOWNLOADED_DATE)
            Me.columnIM_EXTERNAL_IND = New Global.System.Data.DataColumn("IM_EXTERNAL_IND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_EXTERNAL_IND)
            Me.columnIM_REFERENCE_NO = New Global.System.Data.DataColumn("IM_REFERENCE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_REFERENCE_NO)
            Me.columnIM_INVOICE_TOTAL = New Global.System.Data.DataColumn("IM_INVOICE_TOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_INVOICE_TOTAL)
            Me.columnIM_GST_INVOICE = New Global.System.Data.DataColumn("IM_GST_INVOICE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_GST_INVOICE)
            Me.columnIM_PAYMENT_TERM = New Global.System.Data.DataColumn("IM_PAYMENT_TERM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_PAYMENT_TERM)
            Me.columnIM_STATUS_CHANGED_BY = New Global.System.Data.DataColumn("IM_STATUS_CHANGED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_STATUS_CHANGED_BY)
            Me.columnIM_STATUS_CHANGED_ON = New Global.System.Data.DataColumn("IM_STATUS_CHANGED_ON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_STATUS_CHANGED_ON)
            Me.columnIM_SHIP_AMT = New Global.System.Data.DataColumn("IM_SHIP_AMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_SHIP_AMT)
            Me.columnBillAddrState = New Global.System.Data.DataColumn("BillAddrState", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBillAddrState)
            Me.columnBillAddrCtry = New Global.System.Data.DataColumn("BillAddrCtry", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBillAddrCtry)
            Me.columnSupplierAddrState = New Global.System.Data.DataColumn("SupplierAddrState", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplierAddrState)
            Me.columnSupplierAddrCtry = New Global.System.Data.DataColumn("SupplierAddrCtry", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplierAddrCtry)
            Me.columnBuyerCompanyName = New Global.System.Data.DataColumn("BuyerCompanyName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBuyerCompanyName)
            Me.columnID_PRODUCT_DESC = New Global.System.Data.DataColumn("ID_PRODUCT_DESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PRODUCT_DESC)
            Me.columnID_UOM = New Global.System.Data.DataColumn("ID_UOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_UOM)
            Me.columnItemDesc = New Global.System.Data.DataColumn("ItemDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemDesc)
            Me.columnid_uom1 = New Global.System.Data.DataColumn("id_uom1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_uom1)
            Me.columnAmount = New Global.System.Data.DataColumn("Amount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmount)
            Me.columnCM_BUSINESS_REG_NO = New Global.System.Data.DataColumn("CM_BUSINESS_REG_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_BUSINESS_REG_NO)
            Me.columnCM_PHONE = New Global.System.Data.DataColumn("CM_PHONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_PHONE)
            Me.columnCM_EMAIL = New Global.System.Data.DataColumn("CM_EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_EMAIL)
            Me.columnCM_TAX_REG_NO = New Global.System.Data.DataColumn("CM_TAX_REG_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_TAX_REG_NO)
            Me.columnCM_ADDR_LINE1 = New Global.System.Data.DataColumn("CM_ADDR_LINE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_ADDR_LINE1)
            Me.columnCM_ADDR_LINE2 = New Global.System.Data.DataColumn("CM_ADDR_LINE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_ADDR_LINE2)
            Me.columnCM_ADDR_LINE3 = New Global.System.Data.DataColumn("CM_ADDR_LINE3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_ADDR_LINE3)
            Me.columnCM_POSTCODE = New Global.System.Data.DataColumn("CM_POSTCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_POSTCODE)
            Me.columnCM_CITY = New Global.System.Data.DataColumn("CM_CITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_CITY)
            Me.columnCM_COUNTRY = New Global.System.Data.DataColumn("CM_COUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_COUNTRY)
            Me.columnLineDesc = New Global.System.Data.DataColumn("LineDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLineDesc)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDNM_DN_INDEX, Me.columnDND_DN_S_COY_ID, Me.columnDND_DN_NO, Me.columnDND_DN_LINE, Me.columnIM_INVOICE_INDEX}, true))
            Me.columnDNM_DN_INDEX.AutoIncrement = true
            Me.columnDNM_DN_INDEX.AllowDBNull = false
            Me.columnDNM_DN_B_COY_ID.AllowDBNull = false
            Me.columnDNM_DN_B_COY_ID.MaxLength = 20
            Me.columnDNM_DN_S_COY_ID.AllowDBNull = false
            Me.columnDNM_DN_S_COY_ID.MaxLength = 20
            Me.columnDNM_DN_NO.AllowDBNull = false
            Me.columnDNM_DN_NO.MaxLength = 20
            Me.columnDNM_DN_DATE.AllowDBNull = false
            Me.columnDNM_DN_TYPE.AllowDBNull = false
            Me.columnDNM_DN_TYPE.MaxLength = 10
            Me.columnDNM_ADDR_LINE1.AllowDBNull = false
            Me.columnDNM_ADDR_LINE1.MaxLength = 255
            Me.columnDNM_ADDR_LINE2.AllowDBNull = false
            Me.columnDNM_ADDR_LINE2.MaxLength = 255
            Me.columnDNM_ADDR_LINE3.AllowDBNull = false
            Me.columnDNM_ADDR_LINE3.MaxLength = 255
            Me.columnDNM_POSTCODE.AllowDBNull = false
            Me.columnDNM_POSTCODE.MaxLength = 10
            Me.columnDNM_CITY.AllowDBNull = false
            Me.columnDNM_CITY.MaxLength = 50
            Me.columnDNM_STATE.AllowDBNull = false
            Me.columnDNM_STATE.MaxLength = 10
            Me.columnDNM_COUNTRY.AllowDBNull = false
            Me.columnDNM_COUNTRY.MaxLength = 10
            Me.columnDNM_INV_NO.AllowDBNull = false
            Me.columnDNM_INV_NO.MaxLength = 20
            Me.columnDNM_CURRENCY_CODE.AllowDBNull = false
            Me.columnDNM_CURRENCY_CODE.MaxLength = 10
            Me.columnDNM_REMARKS.MaxLength = 1000
            Me.columnDNM_DN_STATUS.AllowDBNull = false
            Me.columnDNM_STATUS_CHANGED_BY.MaxLength = 20
            Me.columnDNM_PAYMENT_TERM.MaxLength = 10
            Me.columnDNM_CREATED_BY.MaxLength = 20
            Me.columnDND_DN_S_COY_ID.AllowDBNull = false
            Me.columnDND_DN_S_COY_ID.MaxLength = 20
            Me.columnDND_DN_NO.AllowDBNull = false
            Me.columnDND_DN_NO.MaxLength = 20
            Me.columnDND_DN_LINE.AllowDBNull = false
            Me.columnDND_INV_LINE.AllowDBNull = false
            Me.columnDND_GST_RATE.AllowDBNull = false
            Me.columnDND_GST_RATE.MaxLength = 10
            Me.columnDND_GST_INPUT_TAX_CODE.MaxLength = 20
            Me.columnDND_GST_OUTPUT_TAX_CODE.MaxLength = 20
            Me.columnDND_TICKETING_NO_INPUT.MaxLength = 50
            Me.columnDND_REMARKS.MaxLength = 1000
            Me.columnIM_INVOICE_INDEX.AutoIncrement = true
            Me.columnIM_INVOICE_INDEX.AllowDBNull = false
            Me.columnIM_INVOICE_NO.MaxLength = 50
            Me.columnIM_S_COY_ID.MaxLength = 20
            Me.columnIM_S_COY_NAME.MaxLength = 100
            Me.columnIM_B_COY_ID.MaxLength = 20
            Me.columnIM_REMARK.MaxLength = 1000
            Me.columnIM_CREATED_BY.MaxLength = 20
            Me.columnIM_PAYMENT_NO.MaxLength = 40
            Me.columnIM_YOUR_REF.MaxLength = 60
            Me.columnIM_OUR_REF.MaxLength = 50
            Me.columnIM_INVOICE_PREFIX.MaxLength = 30
            Me.columnIM_SUBMITTEDBY_FO.MaxLength = 20
            Me.columnIM_FINANCE_REMARKS.MaxLength = 1000
            Me.columnIM_PRINTED.MaxLength = 3
            Me.columnIM_EXTERNAL_IND.MaxLength = 3
            Me.columnIM_REFERENCE_NO.MaxLength = 50
            Me.columnIM_GST_INVOICE.MaxLength = 1
            Me.columnIM_PAYMENT_TERM.MaxLength = 10
            Me.columnIM_STATUS_CHANGED_BY.MaxLength = 20
            Me.columnBillAddrState.AllowDBNull = false
            Me.columnBillAddrCtry.AllowDBNull = false
            Me.columnSupplierAddrState.AllowDBNull = false
            Me.columnSupplierAddrCtry.AllowDBNull = false
            Me.columnBuyerCompanyName.AllowDBNull = false
            Me.columnBuyerCompanyName.MaxLength = 100
            Me.columnID_PRODUCT_DESC.MaxLength = 500
            Me.columnID_UOM.MaxLength = 20
            Me.columnItemDesc.MaxLength = 500
            Me.columnid_uom1.MaxLength = 20
            Me.columnAmount.AllowDBNull = false
            Me.columnCM_BUSINESS_REG_NO.MaxLength = 50
            Me.columnCM_PHONE.MaxLength = 50
            Me.columnCM_EMAIL.MaxLength = 50
            Me.columnCM_TAX_REG_NO.MaxLength = 50
            Me.columnCM_ADDR_LINE1.MaxLength = 255
            Me.columnCM_ADDR_LINE2.MaxLength = 255
            Me.columnCM_ADDR_LINE3.MaxLength = 255
            Me.columnCM_POSTCODE.MaxLength = 10
            Me.columnCM_CITY.MaxLength = 50
            Me.columnCM_COUNTRY.MaxLength = 10
            Me.columnLineDesc.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewPreviewDebitAdviceRow() As PreviewDebitAdviceRow
            Return CType(Me.NewRow,PreviewDebitAdviceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PreviewDebitAdviceRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PreviewDebitAdviceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PreviewDebitAdviceRowChangedEvent) Is Nothing) Then
                RaiseEvent PreviewDebitAdviceRowChanged(Me, New PreviewDebitAdviceRowChangeEvent(CType(e.Row,PreviewDebitAdviceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PreviewDebitAdviceRowChangingEvent) Is Nothing) Then
                RaiseEvent PreviewDebitAdviceRowChanging(Me, New PreviewDebitAdviceRowChangeEvent(CType(e.Row,PreviewDebitAdviceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PreviewDebitAdviceRowDeletedEvent) Is Nothing) Then
                RaiseEvent PreviewDebitAdviceRowDeleted(Me, New PreviewDebitAdviceRowChangeEvent(CType(e.Row,PreviewDebitAdviceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PreviewDebitAdviceRowDeletingEvent) Is Nothing) Then
                RaiseEvent PreviewDebitAdviceRowDeleting(Me, New PreviewDebitAdviceRowChangeEvent(CType(e.Row,PreviewDebitAdviceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovePreviewDebitAdviceRow(ByVal row As PreviewDebitAdviceRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As PreviewDebitNote = New PreviewDebitNote
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PreviewDebitAdviceDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class PreviewDebitNoteRow
        Inherits Global.System.Data.DataRow
        
        Private tablePreviewDebitNote As PreviewDebitNoteDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePreviewDebitNote = CType(Me.Table,PreviewDebitNoteDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_DN_INDEX() As Long
            Get
                Return CType(Me(Me.tablePreviewDebitNote.DNM_DN_INDEXColumn),Long)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_DN_INDEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_DN_B_COY_ID() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.DNM_DN_B_COY_IDColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_DN_B_COY_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_DN_S_COY_ID() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.DNM_DN_S_COY_IDColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_DN_S_COY_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_DN_NO() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.DNM_DN_NOColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_DN_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_DN_DATE() As Date
            Get
                Return CType(Me(Me.tablePreviewDebitNote.DNM_DN_DATEColumn),Date)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_DN_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_DN_TYPE() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.DNM_DN_TYPEColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_DN_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_ADDR_LINE1() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.DNM_ADDR_LINE1Column),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_ADDR_LINE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_ADDR_LINE2() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.DNM_ADDR_LINE2Column),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_ADDR_LINE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_ADDR_LINE3() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.DNM_ADDR_LINE3Column),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_ADDR_LINE3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_POSTCODE() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.DNM_POSTCODEColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_POSTCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_CITY() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.DNM_CITYColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_CITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_STATE() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.DNM_STATEColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_STATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_COUNTRY() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.DNM_COUNTRYColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_COUNTRYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_INV_NO() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.DNM_INV_NOColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_INV_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_CURRENCY_CODE() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.DNM_CURRENCY_CODEColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_CURRENCY_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_EXCHANGE_RATE() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.DNM_EXCHANGE_RATEColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_EXCHANGE_RATE' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_EXCHANGE_RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_REMARKS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.DNM_REMARKSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_REMARKS' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_REMARKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_DN_STATUS() As Integer
            Get
                Return CType(Me(Me.tablePreviewDebitNote.DNM_DN_STATUSColumn),Integer)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_DN_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_STATUS_CHANGED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.DNM_STATUS_CHANGED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_STATUS_CHANGED_BY' in table 'PreviewDebitNote' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_STATUS_CHANGED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_STATUS_CHANGED_ON() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.DNM_STATUS_CHANGED_ONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_STATUS_CHANGED_ON' in table 'PreviewDebitNote' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_STATUS_CHANGED_ONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_FM_APPROVED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.DNM_FM_APPROVED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_FM_APPROVED_DATE' in table 'PreviewDebitNote' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_FM_APPROVED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_PAYMENT_TERM() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.DNM_PAYMENT_TERMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_PAYMENT_TERM' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_PAYMENT_TERMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_PAYMENT_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.DNM_PAYMENT_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_PAYMENT_DATE' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_PAYMENT_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_DOWNLOADED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.DNM_DOWNLOADED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_DOWNLOADED_DATE' in table 'PreviewDebitNote' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_DOWNLOADED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_CREATED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.DNM_CREATED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_CREATED_BY' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_CREATED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_CREATED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.DNM_CREATED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_CREATED_DATE' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_CREATED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_DN_TOTAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.DNM_DN_TOTALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_DN_TOTAL' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DNM_DN_TOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_DN_S_COY_ID() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.DND_DN_S_COY_IDColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DND_DN_S_COY_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_DN_NO() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.DND_DN_NOColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DND_DN_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_DN_LINE() As Integer
            Get
                Return CType(Me(Me.tablePreviewDebitNote.DND_DN_LINEColumn),Integer)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DND_DN_LINEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_INV_LINE() As Integer
            Get
                Return CType(Me(Me.tablePreviewDebitNote.DND_INV_LINEColumn),Integer)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DND_INV_LINEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_QTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.DND_QTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DND_QTY' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DND_QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_UNIT_COST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.DND_UNIT_COSTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DND_UNIT_COST' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DND_UNIT_COSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_GST_RATE() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.DND_GST_RATEColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DND_GST_RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_GST_INPUT_TAX_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.DND_GST_INPUT_TAX_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DND_GST_INPUT_TAX_CODE' in table 'PreviewDebitNote' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DND_GST_INPUT_TAX_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_GST_OUTPUT_TAX_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.DND_GST_OUTPUT_TAX_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DND_GST_OUTPUT_TAX_CODE' in table 'PreviewDebitNote' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DND_GST_OUTPUT_TAX_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_TICKETING_NO_INPUT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.DND_TICKETING_NO_INPUTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DND_TICKETING_NO_INPUT' in table 'PreviewDebitNote' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DND_TICKETING_NO_INPUTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_INVOICE_INDEX() As Long
            Get
                Return CType(Me(Me.tablePreviewDebitNote.IM_INVOICE_INDEXColumn),Long)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_INVOICE_INDEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_INVOICE_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_INVOICE_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_INVOICE_NO' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_INVOICE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_S_COY_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_S_COY_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_S_COY_ID' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_S_COY_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_S_COY_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_S_COY_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_S_COY_NAME' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_S_COY_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_PO_INDEX() As Long
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_PO_INDEXColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_PO_INDEX' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_PO_INDEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_B_COY_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_B_COY_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_B_COY_ID' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_B_COY_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_PAYMENT_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_PAYMENT_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_PAYMENT_DATE' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_PAYMENT_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_REMARK() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_REMARKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_REMARK' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_REMARKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_CREATED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_CREATED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_CREATED_BY' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_CREATED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_CREATED_ON() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_CREATED_ONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_CREATED_ON' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_CREATED_ONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_INVOICE_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_INVOICE_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_INVOICE_STATUS' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_INVOICE_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_PAYMENT_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_PAYMENT_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_PAYMENT_NO' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_PAYMENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_YOUR_REF() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_YOUR_REFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_YOUR_REF' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_YOUR_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_OUR_REF() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_OUR_REFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_OUR_REF' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_OUR_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_INVOICE_PREFIX() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_INVOICE_PREFIXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_INVOICE_PREFIX' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_INVOICE_PREFIXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_SUBMITTEDBY_FO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_SUBMITTEDBY_FOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_SUBMITTEDBY_FO' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_SUBMITTEDBY_FOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_EXCHANGE_RATE() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_EXCHANGE_RATEColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_EXCHANGE_RATE' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_EXCHANGE_RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_FINANCE_REMARKS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_FINANCE_REMARKSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_FINANCE_REMARKS' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_FINANCE_REMARKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_PRINTED() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_PRINTEDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_PRINTED' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_PRINTEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_FOLDER() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_FOLDERColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_FOLDER' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_FOLDERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_FM_APPROVED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_FM_APPROVED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_FM_APPROVED_DATE' in table 'PreviewDebitNote' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_FM_APPROVED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_WITHHOLDING_TAX() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_WITHHOLDING_TAXColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_WITHHOLDING_TAX' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_WITHHOLDING_TAXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_DOWNLOADED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_DOWNLOADED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_DOWNLOADED_DATE' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_DOWNLOADED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_EXTERNAL_IND() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_EXTERNAL_INDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_EXTERNAL_IND' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_EXTERNAL_INDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_REFERENCE_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_REFERENCE_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_REFERENCE_NO' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_REFERENCE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_INVOICE_TOTAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_INVOICE_TOTALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_INVOICE_TOTAL' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_INVOICE_TOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_GST_INVOICE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_GST_INVOICEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_GST_INVOICE' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_GST_INVOICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_PAYMENT_TERM() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_PAYMENT_TERMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_PAYMENT_TERM' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_PAYMENT_TERMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_STATUS_CHANGED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_STATUS_CHANGED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_STATUS_CHANGED_BY' in table 'PreviewDebitNote' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_STATUS_CHANGED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_STATUS_CHANGED_ON() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_STATUS_CHANGED_ONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_STATUS_CHANGED_ON' in table 'PreviewDebitNote' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_STATUS_CHANGED_ONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BillAddrState() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.BillAddrStateColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.BillAddrStateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BillAddrCtry() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.BillAddrCtryColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.BillAddrCtryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SupplierAddrState() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.SupplierAddrStateColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.SupplierAddrStateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SupplierAddrCtry() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.SupplierAddrCtryColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.SupplierAddrCtryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BuyerCompanyName() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.BuyerCompanyNameColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.BuyerCompanyNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ItemDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.ItemDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemDesc' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.ItemDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Amount() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.AmountColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Total() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.TotalColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GST() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.GSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GST' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.GSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_REMARKS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.DND_REMARKSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DND_REMARKS' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.DND_REMARKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_BUSINESS_REG_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.CM_BUSINESS_REG_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_BUSINESS_REG_NO' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.CM_BUSINESS_REG_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_PHONE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.CM_PHONEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_PHONE' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.CM_PHONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_EMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.CM_EMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_EMAIL' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.CM_EMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_TAX_REG_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.CM_TAX_REG_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_TAX_REG_NO' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.CM_TAX_REG_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_ADDR_LINE1() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.CM_ADDR_LINE1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_ADDR_LINE1' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.CM_ADDR_LINE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_ADDR_LINE2() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.CM_ADDR_LINE2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_ADDR_LINE2' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.CM_ADDR_LINE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_ADDR_LINE3() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.CM_ADDR_LINE3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_ADDR_LINE3' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.CM_ADDR_LINE3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_POSTCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.CM_POSTCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_POSTCODE' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.CM_POSTCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_COUNTRY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.CM_COUNTRYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_COUNTRY' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.CM_COUNTRYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_CITY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.CM_CITYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_CITY' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.CM_CITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_SHIP_AMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.IM_SHIP_AMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_SHIP_AMT' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.IM_SHIP_AMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ID_PRODUCT_DESC() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.ID_PRODUCT_DESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID_PRODUCT_DESC' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.ID_PRODUCT_DESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ID_UOM() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.ID_UOMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID_UOM' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.ID_UOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id_uom1() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitNote.id_uom1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id_uom1' in table 'PreviewDebitNote' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitNote.id_uom1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LineDesc() As String
            Get
                Return CType(Me(Me.tablePreviewDebitNote.LineDescColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitNote.LineDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_EXCHANGE_RATENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.DNM_EXCHANGE_RATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_EXCHANGE_RATENull()
            Me(Me.tablePreviewDebitNote.DNM_EXCHANGE_RATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_REMARKSNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.DNM_REMARKSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_REMARKSNull()
            Me(Me.tablePreviewDebitNote.DNM_REMARKSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_STATUS_CHANGED_BYNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.DNM_STATUS_CHANGED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_STATUS_CHANGED_BYNull()
            Me(Me.tablePreviewDebitNote.DNM_STATUS_CHANGED_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_STATUS_CHANGED_ONNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.DNM_STATUS_CHANGED_ONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_STATUS_CHANGED_ONNull()
            Me(Me.tablePreviewDebitNote.DNM_STATUS_CHANGED_ONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_FM_APPROVED_DATENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.DNM_FM_APPROVED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_FM_APPROVED_DATENull()
            Me(Me.tablePreviewDebitNote.DNM_FM_APPROVED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_PAYMENT_TERMNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.DNM_PAYMENT_TERMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_PAYMENT_TERMNull()
            Me(Me.tablePreviewDebitNote.DNM_PAYMENT_TERMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_PAYMENT_DATENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.DNM_PAYMENT_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_PAYMENT_DATENull()
            Me(Me.tablePreviewDebitNote.DNM_PAYMENT_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_DOWNLOADED_DATENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.DNM_DOWNLOADED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_DOWNLOADED_DATENull()
            Me(Me.tablePreviewDebitNote.DNM_DOWNLOADED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_CREATED_BYNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.DNM_CREATED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_CREATED_BYNull()
            Me(Me.tablePreviewDebitNote.DNM_CREATED_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_CREATED_DATENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.DNM_CREATED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_CREATED_DATENull()
            Me(Me.tablePreviewDebitNote.DNM_CREATED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_DN_TOTALNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.DNM_DN_TOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_DN_TOTALNull()
            Me(Me.tablePreviewDebitNote.DNM_DN_TOTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDND_QTYNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.DND_QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDND_QTYNull()
            Me(Me.tablePreviewDebitNote.DND_QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDND_UNIT_COSTNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.DND_UNIT_COSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDND_UNIT_COSTNull()
            Me(Me.tablePreviewDebitNote.DND_UNIT_COSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDND_GST_INPUT_TAX_CODENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.DND_GST_INPUT_TAX_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDND_GST_INPUT_TAX_CODENull()
            Me(Me.tablePreviewDebitNote.DND_GST_INPUT_TAX_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDND_GST_OUTPUT_TAX_CODENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.DND_GST_OUTPUT_TAX_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDND_GST_OUTPUT_TAX_CODENull()
            Me(Me.tablePreviewDebitNote.DND_GST_OUTPUT_TAX_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDND_TICKETING_NO_INPUTNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.DND_TICKETING_NO_INPUTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDND_TICKETING_NO_INPUTNull()
            Me(Me.tablePreviewDebitNote.DND_TICKETING_NO_INPUTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_INVOICE_NONull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_INVOICE_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_INVOICE_NONull()
            Me(Me.tablePreviewDebitNote.IM_INVOICE_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_S_COY_IDNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_S_COY_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_S_COY_IDNull()
            Me(Me.tablePreviewDebitNote.IM_S_COY_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_S_COY_NAMENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_S_COY_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_S_COY_NAMENull()
            Me(Me.tablePreviewDebitNote.IM_S_COY_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_PO_INDEXNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_PO_INDEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_PO_INDEXNull()
            Me(Me.tablePreviewDebitNote.IM_PO_INDEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_B_COY_IDNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_B_COY_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_B_COY_IDNull()
            Me(Me.tablePreviewDebitNote.IM_B_COY_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_PAYMENT_DATENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_PAYMENT_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_PAYMENT_DATENull()
            Me(Me.tablePreviewDebitNote.IM_PAYMENT_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_REMARKNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_REMARKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_REMARKNull()
            Me(Me.tablePreviewDebitNote.IM_REMARKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_CREATED_BYNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_CREATED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_CREATED_BYNull()
            Me(Me.tablePreviewDebitNote.IM_CREATED_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_CREATED_ONNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_CREATED_ONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_CREATED_ONNull()
            Me(Me.tablePreviewDebitNote.IM_CREATED_ONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_INVOICE_STATUSNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_INVOICE_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_INVOICE_STATUSNull()
            Me(Me.tablePreviewDebitNote.IM_INVOICE_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_PAYMENT_NONull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_PAYMENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_PAYMENT_NONull()
            Me(Me.tablePreviewDebitNote.IM_PAYMENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_YOUR_REFNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_YOUR_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_YOUR_REFNull()
            Me(Me.tablePreviewDebitNote.IM_YOUR_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_OUR_REFNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_OUR_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_OUR_REFNull()
            Me(Me.tablePreviewDebitNote.IM_OUR_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_INVOICE_PREFIXNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_INVOICE_PREFIXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_INVOICE_PREFIXNull()
            Me(Me.tablePreviewDebitNote.IM_INVOICE_PREFIXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_SUBMITTEDBY_FONull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_SUBMITTEDBY_FOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_SUBMITTEDBY_FONull()
            Me(Me.tablePreviewDebitNote.IM_SUBMITTEDBY_FOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_EXCHANGE_RATENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_EXCHANGE_RATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_EXCHANGE_RATENull()
            Me(Me.tablePreviewDebitNote.IM_EXCHANGE_RATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_FINANCE_REMARKSNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_FINANCE_REMARKSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_FINANCE_REMARKSNull()
            Me(Me.tablePreviewDebitNote.IM_FINANCE_REMARKSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_PRINTEDNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_PRINTEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_PRINTEDNull()
            Me(Me.tablePreviewDebitNote.IM_PRINTEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_FOLDERNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_FOLDERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_FOLDERNull()
            Me(Me.tablePreviewDebitNote.IM_FOLDERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_FM_APPROVED_DATENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_FM_APPROVED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_FM_APPROVED_DATENull()
            Me(Me.tablePreviewDebitNote.IM_FM_APPROVED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_WITHHOLDING_TAXNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_WITHHOLDING_TAXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_WITHHOLDING_TAXNull()
            Me(Me.tablePreviewDebitNote.IM_WITHHOLDING_TAXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_DOWNLOADED_DATENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_DOWNLOADED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_DOWNLOADED_DATENull()
            Me(Me.tablePreviewDebitNote.IM_DOWNLOADED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_EXTERNAL_INDNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_EXTERNAL_INDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_EXTERNAL_INDNull()
            Me(Me.tablePreviewDebitNote.IM_EXTERNAL_INDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_REFERENCE_NONull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_REFERENCE_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_REFERENCE_NONull()
            Me(Me.tablePreviewDebitNote.IM_REFERENCE_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_INVOICE_TOTALNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_INVOICE_TOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_INVOICE_TOTALNull()
            Me(Me.tablePreviewDebitNote.IM_INVOICE_TOTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_GST_INVOICENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_GST_INVOICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_GST_INVOICENull()
            Me(Me.tablePreviewDebitNote.IM_GST_INVOICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_PAYMENT_TERMNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_PAYMENT_TERMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_PAYMENT_TERMNull()
            Me(Me.tablePreviewDebitNote.IM_PAYMENT_TERMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_STATUS_CHANGED_BYNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_STATUS_CHANGED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_STATUS_CHANGED_BYNull()
            Me(Me.tablePreviewDebitNote.IM_STATUS_CHANGED_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_STATUS_CHANGED_ONNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_STATUS_CHANGED_ONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_STATUS_CHANGED_ONNull()
            Me(Me.tablePreviewDebitNote.IM_STATUS_CHANGED_ONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsItemDescNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.ItemDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetItemDescNull()
            Me(Me.tablePreviewDebitNote.ItemDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGSTNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.GSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGSTNull()
            Me(Me.tablePreviewDebitNote.GSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDND_REMARKSNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.DND_REMARKSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDND_REMARKSNull()
            Me(Me.tablePreviewDebitNote.DND_REMARKSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_BUSINESS_REG_NONull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.CM_BUSINESS_REG_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_BUSINESS_REG_NONull()
            Me(Me.tablePreviewDebitNote.CM_BUSINESS_REG_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_PHONENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.CM_PHONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_PHONENull()
            Me(Me.tablePreviewDebitNote.CM_PHONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_EMAILNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.CM_EMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_EMAILNull()
            Me(Me.tablePreviewDebitNote.CM_EMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_TAX_REG_NONull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.CM_TAX_REG_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_TAX_REG_NONull()
            Me(Me.tablePreviewDebitNote.CM_TAX_REG_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_ADDR_LINE1Null() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.CM_ADDR_LINE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_ADDR_LINE1Null()
            Me(Me.tablePreviewDebitNote.CM_ADDR_LINE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_ADDR_LINE2Null() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.CM_ADDR_LINE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_ADDR_LINE2Null()
            Me(Me.tablePreviewDebitNote.CM_ADDR_LINE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_ADDR_LINE3Null() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.CM_ADDR_LINE3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_ADDR_LINE3Null()
            Me(Me.tablePreviewDebitNote.CM_ADDR_LINE3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_POSTCODENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.CM_POSTCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_POSTCODENull()
            Me(Me.tablePreviewDebitNote.CM_POSTCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_COUNTRYNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.CM_COUNTRYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_COUNTRYNull()
            Me(Me.tablePreviewDebitNote.CM_COUNTRYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_CITYNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.CM_CITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_CITYNull()
            Me(Me.tablePreviewDebitNote.CM_CITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_SHIP_AMTNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.IM_SHIP_AMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_SHIP_AMTNull()
            Me(Me.tablePreviewDebitNote.IM_SHIP_AMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsID_PRODUCT_DESCNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.ID_PRODUCT_DESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetID_PRODUCT_DESCNull()
            Me(Me.tablePreviewDebitNote.ID_PRODUCT_DESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsID_UOMNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.ID_UOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetID_UOMNull()
            Me(Me.tablePreviewDebitNote.ID_UOMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isid_uom1Null() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitNote.id_uom1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setid_uom1Null()
            Me(Me.tablePreviewDebitNote.id_uom1Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class PreviewDebitAdviceRow
        Inherits Global.System.Data.DataRow
        
        Private tablePreviewDebitAdvice As PreviewDebitAdviceDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePreviewDebitAdvice = CType(Me.Table,PreviewDebitAdviceDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_DN_INDEX() As Long
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.DNM_DN_INDEXColumn),Long)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_DN_INDEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_DN_B_COY_ID() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.DNM_DN_B_COY_IDColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_DN_B_COY_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_DN_S_COY_ID() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.DNM_DN_S_COY_IDColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_DN_S_COY_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_DN_NO() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.DNM_DN_NOColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_DN_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_DN_DATE() As Date
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.DNM_DN_DATEColumn),Date)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_DN_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_DN_TYPE() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.DNM_DN_TYPEColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_DN_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_ADDR_LINE1() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.DNM_ADDR_LINE1Column),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_ADDR_LINE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_ADDR_LINE2() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.DNM_ADDR_LINE2Column),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_ADDR_LINE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_ADDR_LINE3() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.DNM_ADDR_LINE3Column),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_ADDR_LINE3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_POSTCODE() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.DNM_POSTCODEColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_POSTCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_CITY() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.DNM_CITYColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_CITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_STATE() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.DNM_STATEColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_STATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_COUNTRY() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.DNM_COUNTRYColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_COUNTRYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_INV_NO() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.DNM_INV_NOColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_INV_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_CURRENCY_CODE() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.DNM_CURRENCY_CODEColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_CURRENCY_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_EXCHANGE_RATE() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.DNM_EXCHANGE_RATEColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_EXCHANGE_RATE' in table 'PreviewDebitAdvice' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_EXCHANGE_RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_REMARKS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.DNM_REMARKSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_REMARKS' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_REMARKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_DN_STATUS() As Integer
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.DNM_DN_STATUSColumn),Integer)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_DN_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_STATUS_CHANGED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.DNM_STATUS_CHANGED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_STATUS_CHANGED_BY' in table 'PreviewDebitAdvice' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_STATUS_CHANGED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_STATUS_CHANGED_ON() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.DNM_STATUS_CHANGED_ONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_STATUS_CHANGED_ON' in table 'PreviewDebitAdvice' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_STATUS_CHANGED_ONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_FM_APPROVED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.DNM_FM_APPROVED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_FM_APPROVED_DATE' in table 'PreviewDebitAdvice' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_FM_APPROVED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_PAYMENT_TERM() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.DNM_PAYMENT_TERMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_PAYMENT_TERM' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_PAYMENT_TERMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_PAYMENT_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.DNM_PAYMENT_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_PAYMENT_DATE' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_PAYMENT_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_DOWNLOADED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.DNM_DOWNLOADED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_DOWNLOADED_DATE' in table 'PreviewDebitAdvice' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_DOWNLOADED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_CREATED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.DNM_CREATED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_CREATED_BY' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_CREATED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_CREATED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.DNM_CREATED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_CREATED_DATE' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_CREATED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNM_DN_TOTAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.DNM_DN_TOTALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DNM_DN_TOTAL' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DNM_DN_TOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_DN_S_COY_ID() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.DND_DN_S_COY_IDColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DND_DN_S_COY_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_DN_NO() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.DND_DN_NOColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DND_DN_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_DN_LINE() As Integer
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.DND_DN_LINEColumn),Integer)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DND_DN_LINEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_INV_LINE() As Integer
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.DND_INV_LINEColumn),Integer)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DND_INV_LINEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_QTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.DND_QTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DND_QTY' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DND_QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_UNIT_COST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.DND_UNIT_COSTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DND_UNIT_COST' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DND_UNIT_COSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_GST_RATE() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.DND_GST_RATEColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DND_GST_RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_GST_INPUT_TAX_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.DND_GST_INPUT_TAX_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DND_GST_INPUT_TAX_CODE' in table 'PreviewDebitAdvice' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DND_GST_INPUT_TAX_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_GST_OUTPUT_TAX_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.DND_GST_OUTPUT_TAX_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DND_GST_OUTPUT_TAX_CODE' in table 'PreviewDebitAdvice' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DND_GST_OUTPUT_TAX_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_TICKETING_NO_INPUT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.DND_TICKETING_NO_INPUTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DND_TICKETING_NO_INPUT' in table 'PreviewDebitAdvice' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DND_TICKETING_NO_INPUTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DND_REMARKS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.DND_REMARKSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DND_REMARKS' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.DND_REMARKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_INVOICE_INDEX() As Long
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.IM_INVOICE_INDEXColumn),Long)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_INVOICE_INDEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_INVOICE_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_INVOICE_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_INVOICE_NO' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_INVOICE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_S_COY_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_S_COY_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_S_COY_ID' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_S_COY_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_S_COY_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_S_COY_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_S_COY_NAME' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_S_COY_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_PO_INDEX() As Long
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_PO_INDEXColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_PO_INDEX' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_PO_INDEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_B_COY_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_B_COY_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_B_COY_ID' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_B_COY_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_PAYMENT_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_PAYMENT_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_PAYMENT_DATE' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_PAYMENT_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_REMARK() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_REMARKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_REMARK' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_REMARKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_CREATED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_CREATED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_CREATED_BY' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_CREATED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_CREATED_ON() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_CREATED_ONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_CREATED_ON' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_CREATED_ONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_INVOICE_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_INVOICE_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_INVOICE_STATUS' in table 'PreviewDebitAdvice' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_INVOICE_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_PAYMENT_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_PAYMENT_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_PAYMENT_NO' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_PAYMENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_YOUR_REF() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_YOUR_REFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_YOUR_REF' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_YOUR_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_OUR_REF() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_OUR_REFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_OUR_REF' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_OUR_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_INVOICE_PREFIX() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_INVOICE_PREFIXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_INVOICE_PREFIX' in table 'PreviewDebitAdvice' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_INVOICE_PREFIXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_SUBMITTEDBY_FO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_SUBMITTEDBY_FOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_SUBMITTEDBY_FO' in table 'PreviewDebitAdvice' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_SUBMITTEDBY_FOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_EXCHANGE_RATE() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_EXCHANGE_RATEColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_EXCHANGE_RATE' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_EXCHANGE_RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_FINANCE_REMARKS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_FINANCE_REMARKSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_FINANCE_REMARKS' in table 'PreviewDebitAdvice' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_FINANCE_REMARKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_PRINTED() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_PRINTEDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_PRINTED' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_PRINTEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_FOLDER() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_FOLDERColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_FOLDER' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_FOLDERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_FM_APPROVED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_FM_APPROVED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_FM_APPROVED_DATE' in table 'PreviewDebitAdvice' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_FM_APPROVED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_WITHHOLDING_TAX() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_WITHHOLDING_TAXColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_WITHHOLDING_TAX' in table 'PreviewDebitAdvice' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_WITHHOLDING_TAXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_DOWNLOADED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_DOWNLOADED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_DOWNLOADED_DATE' in table 'PreviewDebitAdvice' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_DOWNLOADED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_EXTERNAL_IND() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_EXTERNAL_INDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_EXTERNAL_IND' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_EXTERNAL_INDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_REFERENCE_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_REFERENCE_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_REFERENCE_NO' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_REFERENCE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_INVOICE_TOTAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_INVOICE_TOTALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_INVOICE_TOTAL' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_INVOICE_TOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_GST_INVOICE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_GST_INVOICEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_GST_INVOICE' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_GST_INVOICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_PAYMENT_TERM() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_PAYMENT_TERMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_PAYMENT_TERM' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_PAYMENT_TERMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_STATUS_CHANGED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_STATUS_CHANGED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_STATUS_CHANGED_BY' in table 'PreviewDebitAdvice' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_STATUS_CHANGED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_STATUS_CHANGED_ON() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_STATUS_CHANGED_ONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_STATUS_CHANGED_ON' in table 'PreviewDebitAdvice' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_STATUS_CHANGED_ONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_SHIP_AMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.IM_SHIP_AMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_SHIP_AMT' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.IM_SHIP_AMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BillAddrState() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.BillAddrStateColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.BillAddrStateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BillAddrCtry() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.BillAddrCtryColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.BillAddrCtryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SupplierAddrState() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.SupplierAddrStateColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.SupplierAddrStateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SupplierAddrCtry() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.SupplierAddrCtryColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.SupplierAddrCtryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BuyerCompanyName() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.BuyerCompanyNameColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.BuyerCompanyNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ID_PRODUCT_DESC() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.ID_PRODUCT_DESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID_PRODUCT_DESC' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.ID_PRODUCT_DESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ID_UOM() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.ID_UOMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID_UOM' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.ID_UOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ItemDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.ItemDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemDesc' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.ItemDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id_uom1() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.id_uom1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id_uom1' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.id_uom1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Amount() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.AmountColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_BUSINESS_REG_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.CM_BUSINESS_REG_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_BUSINESS_REG_NO' in table 'PreviewDebitAdvice' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.CM_BUSINESS_REG_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_PHONE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.CM_PHONEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_PHONE' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.CM_PHONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_EMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.CM_EMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_EMAIL' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.CM_EMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_TAX_REG_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.CM_TAX_REG_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_TAX_REG_NO' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.CM_TAX_REG_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_ADDR_LINE1() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.CM_ADDR_LINE1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_ADDR_LINE1' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.CM_ADDR_LINE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_ADDR_LINE2() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.CM_ADDR_LINE2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_ADDR_LINE2' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.CM_ADDR_LINE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_ADDR_LINE3() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.CM_ADDR_LINE3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_ADDR_LINE3' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.CM_ADDR_LINE3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_POSTCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.CM_POSTCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_POSTCODE' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.CM_POSTCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_CITY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.CM_CITYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_CITY' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.CM_CITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_COUNTRY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviewDebitAdvice.CM_COUNTRYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_COUNTRY' in table 'PreviewDebitAdvice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.CM_COUNTRYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LineDesc() As String
            Get
                Return CType(Me(Me.tablePreviewDebitAdvice.LineDescColumn),String)
            End Get
            Set
                Me(Me.tablePreviewDebitAdvice.LineDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_EXCHANGE_RATENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.DNM_EXCHANGE_RATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_EXCHANGE_RATENull()
            Me(Me.tablePreviewDebitAdvice.DNM_EXCHANGE_RATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_REMARKSNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.DNM_REMARKSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_REMARKSNull()
            Me(Me.tablePreviewDebitAdvice.DNM_REMARKSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_STATUS_CHANGED_BYNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.DNM_STATUS_CHANGED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_STATUS_CHANGED_BYNull()
            Me(Me.tablePreviewDebitAdvice.DNM_STATUS_CHANGED_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_STATUS_CHANGED_ONNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.DNM_STATUS_CHANGED_ONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_STATUS_CHANGED_ONNull()
            Me(Me.tablePreviewDebitAdvice.DNM_STATUS_CHANGED_ONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_FM_APPROVED_DATENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.DNM_FM_APPROVED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_FM_APPROVED_DATENull()
            Me(Me.tablePreviewDebitAdvice.DNM_FM_APPROVED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_PAYMENT_TERMNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.DNM_PAYMENT_TERMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_PAYMENT_TERMNull()
            Me(Me.tablePreviewDebitAdvice.DNM_PAYMENT_TERMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_PAYMENT_DATENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.DNM_PAYMENT_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_PAYMENT_DATENull()
            Me(Me.tablePreviewDebitAdvice.DNM_PAYMENT_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_DOWNLOADED_DATENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.DNM_DOWNLOADED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_DOWNLOADED_DATENull()
            Me(Me.tablePreviewDebitAdvice.DNM_DOWNLOADED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_CREATED_BYNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.DNM_CREATED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_CREATED_BYNull()
            Me(Me.tablePreviewDebitAdvice.DNM_CREATED_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_CREATED_DATENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.DNM_CREATED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_CREATED_DATENull()
            Me(Me.tablePreviewDebitAdvice.DNM_CREATED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDNM_DN_TOTALNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.DNM_DN_TOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDNM_DN_TOTALNull()
            Me(Me.tablePreviewDebitAdvice.DNM_DN_TOTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDND_QTYNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.DND_QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDND_QTYNull()
            Me(Me.tablePreviewDebitAdvice.DND_QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDND_UNIT_COSTNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.DND_UNIT_COSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDND_UNIT_COSTNull()
            Me(Me.tablePreviewDebitAdvice.DND_UNIT_COSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDND_GST_INPUT_TAX_CODENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.DND_GST_INPUT_TAX_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDND_GST_INPUT_TAX_CODENull()
            Me(Me.tablePreviewDebitAdvice.DND_GST_INPUT_TAX_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDND_GST_OUTPUT_TAX_CODENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.DND_GST_OUTPUT_TAX_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDND_GST_OUTPUT_TAX_CODENull()
            Me(Me.tablePreviewDebitAdvice.DND_GST_OUTPUT_TAX_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDND_TICKETING_NO_INPUTNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.DND_TICKETING_NO_INPUTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDND_TICKETING_NO_INPUTNull()
            Me(Me.tablePreviewDebitAdvice.DND_TICKETING_NO_INPUTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDND_REMARKSNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.DND_REMARKSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDND_REMARKSNull()
            Me(Me.tablePreviewDebitAdvice.DND_REMARKSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_INVOICE_NONull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_INVOICE_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_INVOICE_NONull()
            Me(Me.tablePreviewDebitAdvice.IM_INVOICE_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_S_COY_IDNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_S_COY_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_S_COY_IDNull()
            Me(Me.tablePreviewDebitAdvice.IM_S_COY_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_S_COY_NAMENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_S_COY_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_S_COY_NAMENull()
            Me(Me.tablePreviewDebitAdvice.IM_S_COY_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_PO_INDEXNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_PO_INDEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_PO_INDEXNull()
            Me(Me.tablePreviewDebitAdvice.IM_PO_INDEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_B_COY_IDNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_B_COY_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_B_COY_IDNull()
            Me(Me.tablePreviewDebitAdvice.IM_B_COY_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_PAYMENT_DATENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_PAYMENT_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_PAYMENT_DATENull()
            Me(Me.tablePreviewDebitAdvice.IM_PAYMENT_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_REMARKNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_REMARKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_REMARKNull()
            Me(Me.tablePreviewDebitAdvice.IM_REMARKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_CREATED_BYNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_CREATED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_CREATED_BYNull()
            Me(Me.tablePreviewDebitAdvice.IM_CREATED_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_CREATED_ONNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_CREATED_ONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_CREATED_ONNull()
            Me(Me.tablePreviewDebitAdvice.IM_CREATED_ONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_INVOICE_STATUSNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_INVOICE_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_INVOICE_STATUSNull()
            Me(Me.tablePreviewDebitAdvice.IM_INVOICE_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_PAYMENT_NONull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_PAYMENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_PAYMENT_NONull()
            Me(Me.tablePreviewDebitAdvice.IM_PAYMENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_YOUR_REFNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_YOUR_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_YOUR_REFNull()
            Me(Me.tablePreviewDebitAdvice.IM_YOUR_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_OUR_REFNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_OUR_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_OUR_REFNull()
            Me(Me.tablePreviewDebitAdvice.IM_OUR_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_INVOICE_PREFIXNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_INVOICE_PREFIXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_INVOICE_PREFIXNull()
            Me(Me.tablePreviewDebitAdvice.IM_INVOICE_PREFIXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_SUBMITTEDBY_FONull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_SUBMITTEDBY_FOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_SUBMITTEDBY_FONull()
            Me(Me.tablePreviewDebitAdvice.IM_SUBMITTEDBY_FOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_EXCHANGE_RATENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_EXCHANGE_RATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_EXCHANGE_RATENull()
            Me(Me.tablePreviewDebitAdvice.IM_EXCHANGE_RATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_FINANCE_REMARKSNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_FINANCE_REMARKSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_FINANCE_REMARKSNull()
            Me(Me.tablePreviewDebitAdvice.IM_FINANCE_REMARKSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_PRINTEDNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_PRINTEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_PRINTEDNull()
            Me(Me.tablePreviewDebitAdvice.IM_PRINTEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_FOLDERNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_FOLDERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_FOLDERNull()
            Me(Me.tablePreviewDebitAdvice.IM_FOLDERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_FM_APPROVED_DATENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_FM_APPROVED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_FM_APPROVED_DATENull()
            Me(Me.tablePreviewDebitAdvice.IM_FM_APPROVED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_WITHHOLDING_TAXNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_WITHHOLDING_TAXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_WITHHOLDING_TAXNull()
            Me(Me.tablePreviewDebitAdvice.IM_WITHHOLDING_TAXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_DOWNLOADED_DATENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_DOWNLOADED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_DOWNLOADED_DATENull()
            Me(Me.tablePreviewDebitAdvice.IM_DOWNLOADED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_EXTERNAL_INDNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_EXTERNAL_INDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_EXTERNAL_INDNull()
            Me(Me.tablePreviewDebitAdvice.IM_EXTERNAL_INDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_REFERENCE_NONull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_REFERENCE_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_REFERENCE_NONull()
            Me(Me.tablePreviewDebitAdvice.IM_REFERENCE_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_INVOICE_TOTALNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_INVOICE_TOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_INVOICE_TOTALNull()
            Me(Me.tablePreviewDebitAdvice.IM_INVOICE_TOTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_GST_INVOICENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_GST_INVOICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_GST_INVOICENull()
            Me(Me.tablePreviewDebitAdvice.IM_GST_INVOICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_PAYMENT_TERMNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_PAYMENT_TERMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_PAYMENT_TERMNull()
            Me(Me.tablePreviewDebitAdvice.IM_PAYMENT_TERMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_STATUS_CHANGED_BYNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_STATUS_CHANGED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_STATUS_CHANGED_BYNull()
            Me(Me.tablePreviewDebitAdvice.IM_STATUS_CHANGED_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_STATUS_CHANGED_ONNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_STATUS_CHANGED_ONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_STATUS_CHANGED_ONNull()
            Me(Me.tablePreviewDebitAdvice.IM_STATUS_CHANGED_ONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_SHIP_AMTNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.IM_SHIP_AMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_SHIP_AMTNull()
            Me(Me.tablePreviewDebitAdvice.IM_SHIP_AMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsID_PRODUCT_DESCNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.ID_PRODUCT_DESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetID_PRODUCT_DESCNull()
            Me(Me.tablePreviewDebitAdvice.ID_PRODUCT_DESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsID_UOMNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.ID_UOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetID_UOMNull()
            Me(Me.tablePreviewDebitAdvice.ID_UOMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsItemDescNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.ItemDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetItemDescNull()
            Me(Me.tablePreviewDebitAdvice.ItemDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isid_uom1Null() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.id_uom1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setid_uom1Null()
            Me(Me.tablePreviewDebitAdvice.id_uom1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_BUSINESS_REG_NONull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.CM_BUSINESS_REG_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_BUSINESS_REG_NONull()
            Me(Me.tablePreviewDebitAdvice.CM_BUSINESS_REG_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_PHONENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.CM_PHONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_PHONENull()
            Me(Me.tablePreviewDebitAdvice.CM_PHONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_EMAILNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.CM_EMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_EMAILNull()
            Me(Me.tablePreviewDebitAdvice.CM_EMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_TAX_REG_NONull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.CM_TAX_REG_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_TAX_REG_NONull()
            Me(Me.tablePreviewDebitAdvice.CM_TAX_REG_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_ADDR_LINE1Null() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.CM_ADDR_LINE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_ADDR_LINE1Null()
            Me(Me.tablePreviewDebitAdvice.CM_ADDR_LINE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_ADDR_LINE2Null() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.CM_ADDR_LINE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_ADDR_LINE2Null()
            Me(Me.tablePreviewDebitAdvice.CM_ADDR_LINE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_ADDR_LINE3Null() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.CM_ADDR_LINE3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_ADDR_LINE3Null()
            Me(Me.tablePreviewDebitAdvice.CM_ADDR_LINE3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_POSTCODENull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.CM_POSTCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_POSTCODENull()
            Me(Me.tablePreviewDebitAdvice.CM_POSTCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_CITYNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.CM_CITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_CITYNull()
            Me(Me.tablePreviewDebitAdvice.CM_CITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_COUNTRYNull() As Boolean
            Return Me.IsNull(Me.tablePreviewDebitAdvice.CM_COUNTRYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_COUNTRYNull()
            Me(Me.tablePreviewDebitAdvice.CM_COUNTRYColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class PreviewDebitNoteRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PreviewDebitNoteRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As PreviewDebitNoteRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As PreviewDebitNoteRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class PreviewDebitAdviceRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PreviewDebitAdviceRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As PreviewDebitAdviceRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As PreviewDebitAdviceRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace PreviewDebitNoteTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PreviewDebitNoteTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PreviewDebitNote"
            tableMapping.ColumnMappings.Add("DNM_DN_INDEX", "DNM_DN_INDEX")
            tableMapping.ColumnMappings.Add("DNM_DN_B_COY_ID", "DNM_DN_B_COY_ID")
            tableMapping.ColumnMappings.Add("DNM_DN_S_COY_ID", "DNM_DN_S_COY_ID")
            tableMapping.ColumnMappings.Add("DNM_DN_NO", "DNM_DN_NO")
            tableMapping.ColumnMappings.Add("DNM_DN_DATE", "DNM_DN_DATE")
            tableMapping.ColumnMappings.Add("DNM_DN_TYPE", "DNM_DN_TYPE")
            tableMapping.ColumnMappings.Add("DNM_ADDR_LINE1", "DNM_ADDR_LINE1")
            tableMapping.ColumnMappings.Add("DNM_ADDR_LINE2", "DNM_ADDR_LINE2")
            tableMapping.ColumnMappings.Add("DNM_ADDR_LINE3", "DNM_ADDR_LINE3")
            tableMapping.ColumnMappings.Add("DNM_POSTCODE", "DNM_POSTCODE")
            tableMapping.ColumnMappings.Add("DNM_CITY", "DNM_CITY")
            tableMapping.ColumnMappings.Add("DNM_STATE", "DNM_STATE")
            tableMapping.ColumnMappings.Add("DNM_COUNTRY", "DNM_COUNTRY")
            tableMapping.ColumnMappings.Add("DNM_INV_NO", "DNM_INV_NO")
            tableMapping.ColumnMappings.Add("DNM_CURRENCY_CODE", "DNM_CURRENCY_CODE")
            tableMapping.ColumnMappings.Add("DNM_EXCHANGE_RATE", "DNM_EXCHANGE_RATE")
            tableMapping.ColumnMappings.Add("DNM_REMARKS", "DNM_REMARKS")
            tableMapping.ColumnMappings.Add("DNM_DN_STATUS", "DNM_DN_STATUS")
            tableMapping.ColumnMappings.Add("DNM_STATUS_CHANGED_BY", "DNM_STATUS_CHANGED_BY")
            tableMapping.ColumnMappings.Add("DNM_STATUS_CHANGED_ON", "DNM_STATUS_CHANGED_ON")
            tableMapping.ColumnMappings.Add("DNM_FM_APPROVED_DATE", "DNM_FM_APPROVED_DATE")
            tableMapping.ColumnMappings.Add("DNM_PAYMENT_TERM", "DNM_PAYMENT_TERM")
            tableMapping.ColumnMappings.Add("DNM_PAYMENT_DATE", "DNM_PAYMENT_DATE")
            tableMapping.ColumnMappings.Add("DNM_DOWNLOADED_DATE", "DNM_DOWNLOADED_DATE")
            tableMapping.ColumnMappings.Add("DNM_CREATED_BY", "DNM_CREATED_BY")
            tableMapping.ColumnMappings.Add("DNM_CREATED_DATE", "DNM_CREATED_DATE")
            tableMapping.ColumnMappings.Add("DNM_DN_TOTAL", "DNM_DN_TOTAL")
            tableMapping.ColumnMappings.Add("DND_DN_S_COY_ID", "DND_DN_S_COY_ID")
            tableMapping.ColumnMappings.Add("DND_DN_NO", "DND_DN_NO")
            tableMapping.ColumnMappings.Add("DND_DN_LINE", "DND_DN_LINE")
            tableMapping.ColumnMappings.Add("DND_INV_LINE", "DND_INV_LINE")
            tableMapping.ColumnMappings.Add("DND_QTY", "DND_QTY")
            tableMapping.ColumnMappings.Add("DND_UNIT_COST", "DND_UNIT_COST")
            tableMapping.ColumnMappings.Add("DND_GST_RATE", "DND_GST_RATE")
            tableMapping.ColumnMappings.Add("DND_GST_INPUT_TAX_CODE", "DND_GST_INPUT_TAX_CODE")
            tableMapping.ColumnMappings.Add("DND_GST_OUTPUT_TAX_CODE", "DND_GST_OUTPUT_TAX_CODE")
            tableMapping.ColumnMappings.Add("DND_TICKETING_NO_INPUT", "DND_TICKETING_NO_INPUT")
            tableMapping.ColumnMappings.Add("IM_INVOICE_INDEX", "IM_INVOICE_INDEX")
            tableMapping.ColumnMappings.Add("IM_INVOICE_NO", "IM_INVOICE_NO")
            tableMapping.ColumnMappings.Add("IM_S_COY_ID", "IM_S_COY_ID")
            tableMapping.ColumnMappings.Add("IM_S_COY_NAME", "IM_S_COY_NAME")
            tableMapping.ColumnMappings.Add("IM_PO_INDEX", "IM_PO_INDEX")
            tableMapping.ColumnMappings.Add("IM_B_COY_ID", "IM_B_COY_ID")
            tableMapping.ColumnMappings.Add("IM_PAYMENT_DATE", "IM_PAYMENT_DATE")
            tableMapping.ColumnMappings.Add("IM_REMARK", "IM_REMARK")
            tableMapping.ColumnMappings.Add("IM_CREATED_BY", "IM_CREATED_BY")
            tableMapping.ColumnMappings.Add("IM_CREATED_ON", "IM_CREATED_ON")
            tableMapping.ColumnMappings.Add("IM_INVOICE_STATUS", "IM_INVOICE_STATUS")
            tableMapping.ColumnMappings.Add("IM_PAYMENT_NO", "IM_PAYMENT_NO")
            tableMapping.ColumnMappings.Add("IM_YOUR_REF", "IM_YOUR_REF")
            tableMapping.ColumnMappings.Add("IM_OUR_REF", "IM_OUR_REF")
            tableMapping.ColumnMappings.Add("IM_INVOICE_PREFIX", "IM_INVOICE_PREFIX")
            tableMapping.ColumnMappings.Add("IM_SUBMITTEDBY_FO", "IM_SUBMITTEDBY_FO")
            tableMapping.ColumnMappings.Add("IM_EXCHANGE_RATE", "IM_EXCHANGE_RATE")
            tableMapping.ColumnMappings.Add("IM_FINANCE_REMARKS", "IM_FINANCE_REMARKS")
            tableMapping.ColumnMappings.Add("IM_PRINTED", "IM_PRINTED")
            tableMapping.ColumnMappings.Add("IM_FOLDER", "IM_FOLDER")
            tableMapping.ColumnMappings.Add("IM_FM_APPROVED_DATE", "IM_FM_APPROVED_DATE")
            tableMapping.ColumnMappings.Add("IM_WITHHOLDING_TAX", "IM_WITHHOLDING_TAX")
            tableMapping.ColumnMappings.Add("IM_DOWNLOADED_DATE", "IM_DOWNLOADED_DATE")
            tableMapping.ColumnMappings.Add("IM_EXTERNAL_IND", "IM_EXTERNAL_IND")
            tableMapping.ColumnMappings.Add("IM_REFERENCE_NO", "IM_REFERENCE_NO")
            tableMapping.ColumnMappings.Add("IM_INVOICE_TOTAL", "IM_INVOICE_TOTAL")
            tableMapping.ColumnMappings.Add("IM_GST_INVOICE", "IM_GST_INVOICE")
            tableMapping.ColumnMappings.Add("IM_PAYMENT_TERM", "IM_PAYMENT_TERM")
            tableMapping.ColumnMappings.Add("IM_STATUS_CHANGED_BY", "IM_STATUS_CHANGED_BY")
            tableMapping.ColumnMappings.Add("IM_STATUS_CHANGED_ON", "IM_STATUS_CHANGED_ON")
            tableMapping.ColumnMappings.Add("BillAddrState", "BillAddrState")
            tableMapping.ColumnMappings.Add("BillAddrCtry", "BillAddrCtry")
            tableMapping.ColumnMappings.Add("SupplierAddrState", "SupplierAddrState")
            tableMapping.ColumnMappings.Add("SupplierAddrCtry", "SupplierAddrCtry")
            tableMapping.ColumnMappings.Add("BuyerCompanyName", "BuyerCompanyName")
            tableMapping.ColumnMappings.Add("ItemDesc", "ItemDesc")
            tableMapping.ColumnMappings.Add("Amount", "Amount")
            tableMapping.ColumnMappings.Add("Total", "Total")
            tableMapping.ColumnMappings.Add("GST", "GST")
            tableMapping.ColumnMappings.Add("DND_REMARKS", "DND_REMARKS")
            tableMapping.ColumnMappings.Add("CM_BUSINESS_REG_NO", "CM_BUSINESS_REG_NO")
            tableMapping.ColumnMappings.Add("CM_PHONE", "CM_PHONE")
            tableMapping.ColumnMappings.Add("CM_EMAIL", "CM_EMAIL")
            tableMapping.ColumnMappings.Add("CM_TAX_REG_NO", "CM_TAX_REG_NO")
            tableMapping.ColumnMappings.Add("CM_ADDR_LINE1", "CM_ADDR_LINE1")
            tableMapping.ColumnMappings.Add("CM_ADDR_LINE2", "CM_ADDR_LINE2")
            tableMapping.ColumnMappings.Add("CM_ADDR_LINE3", "CM_ADDR_LINE3")
            tableMapping.ColumnMappings.Add("CM_POSTCODE", "CM_POSTCODE")
            tableMapping.ColumnMappings.Add("CM_COUNTRY", "CM_COUNTRY")
            tableMapping.ColumnMappings.Add("CM_CITY", "CM_CITY")
            tableMapping.ColumnMappings.Add("IM_SHIP_AMT", "IM_SHIP_AMT")
            tableMapping.ColumnMappings.Add("ID_PRODUCT_DESC", "ID_PRODUCT_DESC")
            tableMapping.ColumnMappings.Add("ID_UOM", "ID_UOM")
            tableMapping.ColumnMappings.Add("id_uom1", "id_uom1")
            tableMapping.ColumnMappings.Add("LineDesc", "LineDesc")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("eprocureConnectionString1").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT debit_note_mstr.DNM_DN_INDEX, debit_note_mstr.DNM_DN_B_COY_ID, debit_note_"& _ 
                "mstr.DNM_DN_S_COY_ID, debit_note_mstr.DNM_DN_NO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"debit_note_mstr.DNM_DN_DATE, "& _ 
                "debit_note_mstr.DNM_DN_TYPE, debit_note_mstr.DNM_ADDR_LINE1, debit_note_mstr.DNM"& _ 
                "_ADDR_LINE2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"debit_note_mstr.DNM_ADDR_LINE3, debit_note_mstr.DNM_POSTCODE, deb"& _ 
                "it_note_mstr.DNM_CITY,debit_note_mstr.DNM_STATE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"debit_note_mstr.DNM_COUNTRY, "& _ 
                "debit_note_mstr.DNM_INV_NO, debit_note_mstr.DNM_CURRENCY_CODE, debit_note_mstr.D"& _ 
                "NM_EXCHANGE_RATE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"debit_note_mstr.DNM_REMARKS, debit_note_mstr.DNM_DN_STATUS, d"& _ 
                "ebit_note_mstr.DNM_STATUS_CHANGED_BY, debit_note_mstr.DNM_STATUS_CHANGED_ON, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"d"& _ 
                "ebit_note_mstr.DNM_FM_APPROVED_DATE, debit_note_mstr.DNM_PAYMENT_TERM, debit_not"& _ 
                "e_mstr.DNM_PAYMENT_DATE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"debit_note_mstr.DNM_DOWNLOADED_DATE,debit_note_mstr.D"& _ 
                "NM_CREATED_BY, debit_note_mstr.DNM_CREATED_DATE, debit_note_mstr.DNM_DN_TOTAL,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "debit_note_details.DND_DN_S_COY_ID, debit_note_details.DND_DN_NO, debit_note_det"& _ 
                "ails.DND_DN_LINE, debit_note_details.DND_INV_LINE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"debit_note_details.DND_QTY,"& _ 
                " debit_note_details.DND_UNIT_COST,debit_note_details.DND_GST_RATE, debit_note_de"& _ 
                "tails.DND_GST_INPUT_TAX_CODE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"debit_note_details.DND_GST_OUTPUT_TAX_CODE, debit"& _ 
                "_note_details.DND_TICKETING_NO_INPUT,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"debit_note_details.DND_REMARKS,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INVOICE_"& _ 
                "MSTR.IM_INVOICE_INDEX, INVOICE_MSTR.IM_INVOICE_NO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INVOICE_MSTR.IM_S_COY_ID, I"& _ 
                "NVOICE_MSTR.IM_S_COY_NAME, INVOICE_MSTR.IM_PO_INDEX, INVOICE_MSTR.IM_B_COY_ID, I"& _ 
                "NVOICE_MSTR.IM_PAYMENT_DATE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INVOICE_MSTR.IM_REMARK, INVOICE_MSTR.IM_CREATED_B"& _ 
                "Y, INVOICE_MSTR.IM_CREATED_ON, INVOICE_MSTR.IM_INVOICE_STATUS,INVOICE_MSTR.IM_PA"& _ 
                "YMENT_NO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INVOICE_MSTR.IM_YOUR_REF, INVOICE_MSTR.IM_OUR_REF, INVOICE_MSTR.IM_I"& _ 
                "NVOICE_PREFIX, INVOICE_MSTR.IM_SUBMITTEDBY_FO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INVOICE_MSTR.IM_EXCHANGE_RATE, "& _ 
                "INVOICE_MSTR.IM_FINANCE_REMARKS, INVOICE_MSTR.IM_PRINTED, INVOICE_MSTR.IM_FOLDER"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INVOICE_MSTR.IM_FM_APPROVED_DATE, INVOICE_MSTR.IM_WITHHOLDING_TAX, INVOICE_M"& _ 
                "STR.IM_DOWNLOADED_DATE, INVOICE_MSTR.IM_EXTERNAL_IND,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INVOICE_MSTR.IM_REFERENCE"& _ 
                "_NO, INVOICE_MSTR.IM_INVOICE_TOTAL, INVOICE_MSTR.IM_GST_INVOICE,INVOICE_MSTR.IM_"& _ 
                "PAYMENT_TERM, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INVOICE_MSTR.IM_STATUS_CHANGED_BY, INVOICE_MSTR.IM_STATUS_CHANGE"& _ 
                "D_ON,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INVOICE_MSTR.IM_SHIP_AMT,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"'' AS BillAddrState, '' AS BillAddrCtry, '' AS"& _ 
                " SupplierAddrState, '' AS SupplierAddrCtry,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"cm.cm_coy_name AS BuyerCompanyName,"& _ 
                "ID_PRODUCT_DESC, ID_UOM, invoice_details.id_product_desc AS ItemDesc, invoice_de"& _ 
                "tails.id_uom, '' AS Amount, ((invoice_details.id_received_qty*invoice_Details.id"& _ 
                "_unit_cost)*tax.tax_perc/100) AS GST, '' AS Total,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"cm.cm_business_reg_no, cm.cm"& _ 
                "_phone, cm.cm_email, cm.cm_tax_reg_no, cm.CM_ADDR_LINE1, cm.CM_ADDR_LINE2, cm.CM"& _ 
                "_ADDR_LINE3, cm.CM_POSTCODE, cm.CM_CITY, cm.CM_COUNTRY, '' AS LineDesc"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM deb"& _ 
                "it_note_mstr "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INNER JOIN debit_note_details ON debit_note_mstr.dnm_dn_s_coy_id "& _ 
                "= debit_note_details.dnd_dn_s_coy_id AND debit_note_mstr.dnm_dn_no = debit_note_"& _ 
                "details.dnd_dn_no "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INNER JOIN invoice_mstr ON debit_note_mstr.dnm_inv_no = invo"& _ 
                "ice_mstr.im_invoice_no AND debit_note_mstr.dnm_dn_s_coy_id = invoice_mstr.im_s_c"& _ 
                "oy_Id "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND debit_note_mstr.dnm_dn_b_coy_id = invoice_mstr.im_b_coy_Id "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INNER J"& _ 
                "OIN invoice_details ON invoice_mstr.im_invoice_no = invoice_details.id_invoice_n"& _ 
                "o AND invoice_mstr.im_s_coy_id = invoice_details.id_s_coy_id"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND debit_note_det"& _ 
                "ails.dnd_inv_line = invoice_details.id_invoice_line"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INNER JOIN company_mstr cm "& _ 
                "ON invoice_mstr.im_b_coy_id = cm.cm_coy_id "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INNER JOIN tax ON tax.TAX_COUNTRY_C"& _ 
                "ODE = cm.cm_country "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INNER JOIN CODE_MSTR ON CODE_CATEGORY = 'GST' AND TAX_CODE"& _ 
                " = CODE_ABBR   "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND CODE_ABBR = debit_note_details.dnd_gst_rate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (debit_n"& _ 
                "ote_mstr.dnm_dn_b_coy_id = @prmBCoyID) AND (debit_note_mstr.dnm_dn_s_coy_id = @p"& _ 
                "rmSCoyID) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (debit_note_mstr.dnm_dn_no = @prmDNNo) "
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@prmBCoyID"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.Size = 20
            param.IsNullable = true
            param.SourceColumn = "DNM_DN_B_COY_ID"
            Me._commandCollection(0).Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@prmSCoyID"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.Size = 20
            param.IsNullable = true
            param.SourceColumn = "DNM_DN_S_COY_ID"
            Me._commandCollection(0).Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@prmDNNo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.Size = 20
            param.IsNullable = true
            param.SourceColumn = "DNM_DN_NO"
            Me._commandCollection(0).Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PreviewDebitNote.PreviewDebitNoteDataTable, ByVal prmBCoyID As String, ByVal prmSCoyID As String, ByVal prmDNNo As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (prmBCoyID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("prmBCoyID")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(prmBCoyID,String)
            End If
            If (prmSCoyID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("prmSCoyID")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(prmSCoyID,String)
            End If
            If (prmDNNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("prmDNNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(prmDNNo,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal prmBCoyID As String, ByVal prmSCoyID As String, ByVal prmDNNo As String) As PreviewDebitNote.PreviewDebitNoteDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (prmBCoyID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("prmBCoyID")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(prmBCoyID,String)
            End If
            If (prmSCoyID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("prmSCoyID")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(prmSCoyID,String)
            End If
            If (prmDNNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("prmDNNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(prmDNNo,String)
            End If
            Dim dataTable As PreviewDebitNote.PreviewDebitNoteDataTable = New PreviewDebitNote.PreviewDebitNoteDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PreviewDebitAdviceTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PreviewDebitAdvice"
            tableMapping.ColumnMappings.Add("DNM_DN_INDEX", "DNM_DN_INDEX")
            tableMapping.ColumnMappings.Add("DNM_DN_B_COY_ID", "DNM_DN_B_COY_ID")
            tableMapping.ColumnMappings.Add("DNM_DN_S_COY_ID", "DNM_DN_S_COY_ID")
            tableMapping.ColumnMappings.Add("DNM_DN_NO", "DNM_DN_NO")
            tableMapping.ColumnMappings.Add("DNM_DN_DATE", "DNM_DN_DATE")
            tableMapping.ColumnMappings.Add("DNM_DN_TYPE", "DNM_DN_TYPE")
            tableMapping.ColumnMappings.Add("DNM_ADDR_LINE1", "DNM_ADDR_LINE1")
            tableMapping.ColumnMappings.Add("DNM_ADDR_LINE2", "DNM_ADDR_LINE2")
            tableMapping.ColumnMappings.Add("DNM_ADDR_LINE3", "DNM_ADDR_LINE3")
            tableMapping.ColumnMappings.Add("DNM_POSTCODE", "DNM_POSTCODE")
            tableMapping.ColumnMappings.Add("DNM_CITY", "DNM_CITY")
            tableMapping.ColumnMappings.Add("DNM_STATE", "DNM_STATE")
            tableMapping.ColumnMappings.Add("DNM_COUNTRY", "DNM_COUNTRY")
            tableMapping.ColumnMappings.Add("DNM_INV_NO", "DNM_INV_NO")
            tableMapping.ColumnMappings.Add("DNM_CURRENCY_CODE", "DNM_CURRENCY_CODE")
            tableMapping.ColumnMappings.Add("DNM_EXCHANGE_RATE", "DNM_EXCHANGE_RATE")
            tableMapping.ColumnMappings.Add("DNM_REMARKS", "DNM_REMARKS")
            tableMapping.ColumnMappings.Add("DNM_DN_STATUS", "DNM_DN_STATUS")
            tableMapping.ColumnMappings.Add("DNM_STATUS_CHANGED_BY", "DNM_STATUS_CHANGED_BY")
            tableMapping.ColumnMappings.Add("DNM_STATUS_CHANGED_ON", "DNM_STATUS_CHANGED_ON")
            tableMapping.ColumnMappings.Add("DNM_FM_APPROVED_DATE", "DNM_FM_APPROVED_DATE")
            tableMapping.ColumnMappings.Add("DNM_PAYMENT_TERM", "DNM_PAYMENT_TERM")
            tableMapping.ColumnMappings.Add("DNM_PAYMENT_DATE", "DNM_PAYMENT_DATE")
            tableMapping.ColumnMappings.Add("DNM_DOWNLOADED_DATE", "DNM_DOWNLOADED_DATE")
            tableMapping.ColumnMappings.Add("DNM_CREATED_BY", "DNM_CREATED_BY")
            tableMapping.ColumnMappings.Add("DNM_CREATED_DATE", "DNM_CREATED_DATE")
            tableMapping.ColumnMappings.Add("DNM_DN_TOTAL", "DNM_DN_TOTAL")
            tableMapping.ColumnMappings.Add("DND_DN_S_COY_ID", "DND_DN_S_COY_ID")
            tableMapping.ColumnMappings.Add("DND_DN_NO", "DND_DN_NO")
            tableMapping.ColumnMappings.Add("DND_DN_LINE", "DND_DN_LINE")
            tableMapping.ColumnMappings.Add("DND_INV_LINE", "DND_INV_LINE")
            tableMapping.ColumnMappings.Add("DND_QTY", "DND_QTY")
            tableMapping.ColumnMappings.Add("DND_UNIT_COST", "DND_UNIT_COST")
            tableMapping.ColumnMappings.Add("DND_GST_RATE", "DND_GST_RATE")
            tableMapping.ColumnMappings.Add("DND_GST_INPUT_TAX_CODE", "DND_GST_INPUT_TAX_CODE")
            tableMapping.ColumnMappings.Add("DND_GST_OUTPUT_TAX_CODE", "DND_GST_OUTPUT_TAX_CODE")
            tableMapping.ColumnMappings.Add("DND_TICKETING_NO_INPUT", "DND_TICKETING_NO_INPUT")
            tableMapping.ColumnMappings.Add("DND_REMARKS", "DND_REMARKS")
            tableMapping.ColumnMappings.Add("IM_INVOICE_INDEX", "IM_INVOICE_INDEX")
            tableMapping.ColumnMappings.Add("IM_INVOICE_NO", "IM_INVOICE_NO")
            tableMapping.ColumnMappings.Add("IM_S_COY_ID", "IM_S_COY_ID")
            tableMapping.ColumnMappings.Add("IM_S_COY_NAME", "IM_S_COY_NAME")
            tableMapping.ColumnMappings.Add("IM_PO_INDEX", "IM_PO_INDEX")
            tableMapping.ColumnMappings.Add("IM_B_COY_ID", "IM_B_COY_ID")
            tableMapping.ColumnMappings.Add("IM_PAYMENT_DATE", "IM_PAYMENT_DATE")
            tableMapping.ColumnMappings.Add("IM_REMARK", "IM_REMARK")
            tableMapping.ColumnMappings.Add("IM_CREATED_BY", "IM_CREATED_BY")
            tableMapping.ColumnMappings.Add("IM_CREATED_ON", "IM_CREATED_ON")
            tableMapping.ColumnMappings.Add("IM_INVOICE_STATUS", "IM_INVOICE_STATUS")
            tableMapping.ColumnMappings.Add("IM_PAYMENT_NO", "IM_PAYMENT_NO")
            tableMapping.ColumnMappings.Add("IM_YOUR_REF", "IM_YOUR_REF")
            tableMapping.ColumnMappings.Add("IM_OUR_REF", "IM_OUR_REF")
            tableMapping.ColumnMappings.Add("IM_INVOICE_PREFIX", "IM_INVOICE_PREFIX")
            tableMapping.ColumnMappings.Add("IM_SUBMITTEDBY_FO", "IM_SUBMITTEDBY_FO")
            tableMapping.ColumnMappings.Add("IM_EXCHANGE_RATE", "IM_EXCHANGE_RATE")
            tableMapping.ColumnMappings.Add("IM_FINANCE_REMARKS", "IM_FINANCE_REMARKS")
            tableMapping.ColumnMappings.Add("IM_PRINTED", "IM_PRINTED")
            tableMapping.ColumnMappings.Add("IM_FOLDER", "IM_FOLDER")
            tableMapping.ColumnMappings.Add("IM_FM_APPROVED_DATE", "IM_FM_APPROVED_DATE")
            tableMapping.ColumnMappings.Add("IM_WITHHOLDING_TAX", "IM_WITHHOLDING_TAX")
            tableMapping.ColumnMappings.Add("IM_DOWNLOADED_DATE", "IM_DOWNLOADED_DATE")
            tableMapping.ColumnMappings.Add("IM_EXTERNAL_IND", "IM_EXTERNAL_IND")
            tableMapping.ColumnMappings.Add("IM_REFERENCE_NO", "IM_REFERENCE_NO")
            tableMapping.ColumnMappings.Add("IM_INVOICE_TOTAL", "IM_INVOICE_TOTAL")
            tableMapping.ColumnMappings.Add("IM_GST_INVOICE", "IM_GST_INVOICE")
            tableMapping.ColumnMappings.Add("IM_PAYMENT_TERM", "IM_PAYMENT_TERM")
            tableMapping.ColumnMappings.Add("IM_STATUS_CHANGED_BY", "IM_STATUS_CHANGED_BY")
            tableMapping.ColumnMappings.Add("IM_STATUS_CHANGED_ON", "IM_STATUS_CHANGED_ON")
            tableMapping.ColumnMappings.Add("IM_SHIP_AMT", "IM_SHIP_AMT")
            tableMapping.ColumnMappings.Add("BillAddrState", "BillAddrState")
            tableMapping.ColumnMappings.Add("BillAddrCtry", "BillAddrCtry")
            tableMapping.ColumnMappings.Add("SupplierAddrState", "SupplierAddrState")
            tableMapping.ColumnMappings.Add("SupplierAddrCtry", "SupplierAddrCtry")
            tableMapping.ColumnMappings.Add("BuyerCompanyName", "BuyerCompanyName")
            tableMapping.ColumnMappings.Add("ID_PRODUCT_DESC", "ID_PRODUCT_DESC")
            tableMapping.ColumnMappings.Add("ID_UOM", "ID_UOM")
            tableMapping.ColumnMappings.Add("ItemDesc", "ItemDesc")
            tableMapping.ColumnMappings.Add("id_uom1", "id_uom1")
            tableMapping.ColumnMappings.Add("Amount", "Amount")
            tableMapping.ColumnMappings.Add("CM_BUSINESS_REG_NO", "CM_BUSINESS_REG_NO")
            tableMapping.ColumnMappings.Add("CM_PHONE", "CM_PHONE")
            tableMapping.ColumnMappings.Add("CM_EMAIL", "CM_EMAIL")
            tableMapping.ColumnMappings.Add("CM_TAX_REG_NO", "CM_TAX_REG_NO")
            tableMapping.ColumnMappings.Add("CM_ADDR_LINE1", "CM_ADDR_LINE1")
            tableMapping.ColumnMappings.Add("CM_ADDR_LINE2", "CM_ADDR_LINE2")
            tableMapping.ColumnMappings.Add("CM_ADDR_LINE3", "CM_ADDR_LINE3")
            tableMapping.ColumnMappings.Add("CM_POSTCODE", "CM_POSTCODE")
            tableMapping.ColumnMappings.Add("CM_CITY", "CM_CITY")
            tableMapping.ColumnMappings.Add("CM_COUNTRY", "CM_COUNTRY")
            tableMapping.ColumnMappings.Add("LineDesc", "LineDesc")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("eprocureConnectionString1").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT debit_note_mstr.DNM_DN_INDEX, debit_note_mstr.DNM_DN_B_COY_ID, debit_note_"& _ 
                "mstr.DNM_DN_S_COY_ID, debit_note_mstr.DNM_DN_NO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"debit_note_mstr.DNM_DN_DATE, "& _ 
                "debit_note_mstr.DNM_DN_TYPE, debit_note_mstr.DNM_ADDR_LINE1, debit_note_mstr.DNM"& _ 
                "_ADDR_LINE2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"debit_note_mstr.DNM_ADDR_LINE3, debit_note_mstr.DNM_POSTCODE, deb"& _ 
                "it_note_mstr.DNM_CITY,debit_note_mstr.DNM_STATE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"debit_note_mstr.DNM_COUNTRY, "& _ 
                "debit_note_mstr.DNM_INV_NO, debit_note_mstr.DNM_CURRENCY_CODE, debit_note_mstr.D"& _ 
                "NM_EXCHANGE_RATE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"debit_note_mstr.DNM_REMARKS, debit_note_mstr.DNM_DN_STATUS, d"& _ 
                "ebit_note_mstr.DNM_STATUS_CHANGED_BY, debit_note_mstr.DNM_STATUS_CHANGED_ON, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"d"& _ 
                "ebit_note_mstr.DNM_FM_APPROVED_DATE, debit_note_mstr.DNM_PAYMENT_TERM, debit_not"& _ 
                "e_mstr.DNM_PAYMENT_DATE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"debit_note_mstr.DNM_DOWNLOADED_DATE,debit_note_mstr.D"& _ 
                "NM_CREATED_BY, debit_note_mstr.DNM_CREATED_DATE, debit_note_mstr.DNM_DN_TOTAL,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "debit_note_details.DND_DN_S_COY_ID, debit_note_details.DND_DN_NO, debit_note_det"& _ 
                "ails.DND_DN_LINE, debit_note_details.DND_INV_LINE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"debit_note_details.DND_QTY,"& _ 
                " debit_note_details.DND_UNIT_COST,debit_note_details.DND_GST_RATE, debit_note_de"& _ 
                "tails.DND_GST_INPUT_TAX_CODE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"debit_note_details.DND_GST_OUTPUT_TAX_CODE, debit"& _ 
                "_note_details.DND_TICKETING_NO_INPUT,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"debit_note_details.DND_REMARKS,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INVOICE_"& _ 
                "MSTR.IM_INVOICE_INDEX, INVOICE_MSTR.IM_INVOICE_NO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INVOICE_MSTR.IM_S_COY_ID, I"& _ 
                "NVOICE_MSTR.IM_S_COY_NAME, INVOICE_MSTR.IM_PO_INDEX, INVOICE_MSTR.IM_B_COY_ID, I"& _ 
                "NVOICE_MSTR.IM_PAYMENT_DATE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INVOICE_MSTR.IM_REMARK, INVOICE_MSTR.IM_CREATED_B"& _ 
                "Y, INVOICE_MSTR.IM_CREATED_ON, INVOICE_MSTR.IM_INVOICE_STATUS,INVOICE_MSTR.IM_PA"& _ 
                "YMENT_NO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INVOICE_MSTR.IM_YOUR_REF, INVOICE_MSTR.IM_OUR_REF, INVOICE_MSTR.IM_I"& _ 
                "NVOICE_PREFIX, INVOICE_MSTR.IM_SUBMITTEDBY_FO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INVOICE_MSTR.IM_EXCHANGE_RATE, "& _ 
                "INVOICE_MSTR.IM_FINANCE_REMARKS, INVOICE_MSTR.IM_PRINTED, INVOICE_MSTR.IM_FOLDER"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INVOICE_MSTR.IM_FM_APPROVED_DATE, INVOICE_MSTR.IM_WITHHOLDING_TAX, INVOICE_M"& _ 
                "STR.IM_DOWNLOADED_DATE, INVOICE_MSTR.IM_EXTERNAL_IND,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INVOICE_MSTR.IM_REFERENCE"& _ 
                "_NO, INVOICE_MSTR.IM_INVOICE_TOTAL, INVOICE_MSTR.IM_GST_INVOICE,INVOICE_MSTR.IM_"& _ 
                "PAYMENT_TERM, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INVOICE_MSTR.IM_STATUS_CHANGED_BY, INVOICE_MSTR.IM_STATUS_CHANGE"& _ 
                "D_ON,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INVOICE_MSTR.IM_SHIP_AMT,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"'' AS BillAddrState, '' AS BillAddrCtry, '' AS"& _ 
                " SupplierAddrState, '' AS SupplierAddrCtry,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"cm.cm_coy_name AS BuyerCompanyName,"& _ 
                "ID_PRODUCT_DESC, ID_UOM, invoice_details.id_product_desc AS ItemDesc, invoice_de"& _ 
                "tails.id_uom, '' AS Amount, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"cm.cm_business_reg_no, cm.cm_phone, cm.cm_email, c"& _ 
                "m.cm_tax_reg_no, cm.CM_ADDR_LINE1, cm.CM_ADDR_LINE2, cm.CM_ADDR_LINE3, cm.CM_POS"& _ 
                "TCODE, cm.CM_CITY, cm.CM_COUNTRY, '' AS LineDesc"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM debit_note_mstr "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INNER J"& _ 
                "OIN debit_note_details ON debit_note_mstr.dnm_dn_s_coy_id = debit_note_details.d"& _ 
                "nd_dn_s_coy_id AND debit_note_mstr.dnm_dn_no = debit_note_details.dnd_dn_no "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"IN"& _ 
                "NER JOIN invoice_mstr ON debit_note_mstr.dnm_inv_no = invoice_mstr.im_invoice_no"& _ 
                " AND debit_note_mstr.dnm_dn_s_coy_id = invoice_mstr.im_s_coy_Id "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND debit_note"& _ 
                "_mstr.dnm_dn_b_coy_id = invoice_mstr.im_b_coy_Id "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INNER JOIN invoice_details ON"& _ 
                " invoice_mstr.im_invoice_no = invoice_details.id_invoice_no AND invoice_mstr.im_"& _ 
                "s_coy_id = invoice_details.id_s_coy_id"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND debit_note_details.dnd_inv_line = in"& _ 
                "voice_details.id_invoice_line"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INNER JOIN company_mstr cm ON invoice_mstr.im_b_c"& _ 
                "oy_id = cm.cm_coy_id "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (debit_note_mstr.dnm_dn_b_coy_id = @prmBCoyID) AND "& _ 
                "(debit_note_mstr.dnm_dn_s_coy_id = @prmSCoyID) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (debit_note_mstr.dnm_dn_no "& _ 
                "= @prmDNNo) "
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@prmBCoyID"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.Size = 20
            param.IsNullable = true
            param.SourceColumn = "DNM_DN_B_COY_ID"
            Me._commandCollection(0).Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@prmSCoyID"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.Size = 20
            param.IsNullable = true
            param.SourceColumn = "DNM_DN_S_COY_ID"
            Me._commandCollection(0).Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@prmDNNo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.Size = 20
            param.IsNullable = true
            param.SourceColumn = "DNM_DN_NO"
            Me._commandCollection(0).Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PreviewDebitNote.PreviewDebitAdviceDataTable, ByVal prmBCoyID As String, ByVal prmSCoyID As String, ByVal prmDNNo As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (prmBCoyID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("prmBCoyID")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(prmBCoyID,String)
            End If
            If (prmSCoyID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("prmSCoyID")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(prmSCoyID,String)
            End If
            If (prmDNNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("prmDNNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(prmDNNo,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal prmBCoyID As String, ByVal prmSCoyID As String, ByVal prmDNNo As String) As PreviewDebitNote.PreviewDebitAdviceDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (prmBCoyID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("prmBCoyID")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(prmBCoyID,String)
            End If
            If (prmSCoyID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("prmSCoyID")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(prmSCoyID,String)
            End If
            If (prmDNNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("prmDNNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(prmDNNo,String)
            End If
            Dim dataTable As PreviewDebitNote.PreviewDebitAdviceDataTable = New PreviewDebitNote.PreviewDebitAdviceDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
