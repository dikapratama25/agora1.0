'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3053
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsDebitNote"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsDebitNote
    Inherits Global.System.Data.DataSet
    
    Private tableDataTable1 As DataTable1DataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("DataTable1")) Is Nothing) Then
                MyBase.Tables.Add(New DataTable1DataTable(ds.Tables("DataTable1")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DataTable1() As DataTable1DataTable
        Get
            Return Me.tableDataTable1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsDebitNote = CType(MyBase.Clone,dsDebitNote)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("DataTable1")) Is Nothing) Then
                MyBase.Tables.Add(New DataTable1DataTable(ds.Tables("DataTable1")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableDataTable1 = CType(MyBase.Tables("DataTable1"),DataTable1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableDataTable1) Is Nothing) Then
                Me.tableDataTable1.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsDebitNote"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsDebitNote.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableDataTable1 = New DataTable1DataTable
        MyBase.Tables.Add(Me.tableDataTable1)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDataTable1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsDebitNote = New dsDebitNote
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub DataTable1RowChangeEventHandler(ByVal sender As Object, ByVal e As DataTable1RowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DataTable1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnim_s_coy_id As Global.System.Data.DataColumn
        
        Private columnim_s_coy_name As Global.System.Data.DataColumn
        
        Private columnid_product_desc As Global.System.Data.DataColumn
        
        Private columnid_received_qty As Global.System.Data.DataColumn
        
        Private columnid_unit_cost As Global.System.Data.DataColumn
        
        Private columnic_coy_name As Global.System.Data.DataColumn
        
        Private columnic_addr_line1 As Global.System.Data.DataColumn
        
        Private columnic_addr_line2 As Global.System.Data.DataColumn
        
        Private columnic_addr_line3 As Global.System.Data.DataColumn
        
        Private columnic_postcode As Global.System.Data.DataColumn
        
        Private columnic_city As Global.System.Data.DataColumn
        
        Private columnCODE_DESC As Global.System.Data.DataColumn
        
        Private columnCODE_DESC1 As Global.System.Data.DataColumn
        
        Private columnic_phone As Global.System.Data.DataColumn
        
        Private columnic_fax As Global.System.Data.DataColumn
        
        Private columnCM_COY_NAME As Global.System.Data.DataColumn
        
        Private columnCM_ADDR_LINE1 As Global.System.Data.DataColumn
        
        Private columnCM_ADDR_LINE2 As Global.System.Data.DataColumn
        
        Private columnCM_ADDR_LINE3 As Global.System.Data.DataColumn
        
        Private columnCM_POSTCODE As Global.System.Data.DataColumn
        
        Private columnCM_CITY As Global.System.Data.DataColumn
        
        Private columnCODE_DESC2 As Global.System.Data.DataColumn
        
        Private columnCODE_DESC3 As Global.System.Data.DataColumn
        
        Private columnCM_PHONE As Global.System.Data.DataColumn
        
        Private columnCM_FAX As Global.System.Data.DataColumn
        
        Private columnDNNo As Global.System.Data.DataColumn
        
        Private columnAmount As Global.System.Data.DataColumn
        
        Private columnim_invoice_type As Global.System.Data.DataColumn
        
        Private columnim_currency_code As Global.System.Data.DataColumn
        
        Private columnAmountWithExg As Global.System.Data.DataColumn
        
        Private columnIM_PAYMENT_NO As Global.System.Data.DataColumn
        
        Private columnim_invoice_no As Global.System.Data.DataColumn
        
        Private columnim_created_by As Global.System.Data.DataColumn
        
        Private columnim_exchange_rate As Global.System.Data.DataColumn
        
        Private columnid_dr_exchange_rate As Global.System.Data.DataColumn
        
        Private columnid_dr_currency As Global.System.Data.DataColumn
        
        Private columnim_payment_term As Global.System.Data.DataColumn
        
        Private columnid_received_qty1 As Global.System.Data.DataColumn
        
        Private columnheader As Global.System.Data.DataColumn
        
        Private columnid_gst_value As Global.System.Data.DataColumn
        
        Private columntotalwithGST As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DataTable1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property im_s_coy_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnim_s_coy_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property im_s_coy_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnim_s_coy_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property id_product_descColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_product_desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property id_received_qtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_received_qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property id_unit_costColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_unit_cost
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ic_coy_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnic_coy_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ic_addr_line1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnic_addr_line1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ic_addr_line2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnic_addr_line2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ic_addr_line3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnic_addr_line3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ic_postcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnic_postcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ic_cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnic_city
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODE_DESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODE_DESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODE_DESC1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODE_DESC1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ic_phoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnic_phone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ic_faxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnic_fax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_COY_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_COY_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_ADDR_LINE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_ADDR_LINE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_ADDR_LINE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_ADDR_LINE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_ADDR_LINE3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_ADDR_LINE3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_POSTCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_POSTCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_CITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_CITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODE_DESC2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODE_DESC2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODE_DESC3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODE_DESC3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_PHONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_PHONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CM_FAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCM_FAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DNNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property im_invoice_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnim_invoice_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property im_currency_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnim_currency_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AmountWithExgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmountWithExg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IM_PAYMENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM_PAYMENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property im_invoice_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnim_invoice_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property im_created_byColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnim_created_by
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property im_exchange_rateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnim_exchange_rate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property id_dr_exchange_rateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_dr_exchange_rate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property id_dr_currencyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_dr_currency
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property im_payment_termColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnim_payment_term
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property id_received_qty1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_received_qty1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property headerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnheader
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property id_gst_valueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_gst_value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property totalwithGSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotalwithGST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DataTable1Row
            Get
                Return CType(Me.Rows(index),DataTable1Row)
            End Get
        End Property
        
        Public Event DataTable1RowChanging As DataTable1RowChangeEventHandler
        
        Public Event DataTable1RowChanged As DataTable1RowChangeEventHandler
        
        Public Event DataTable1RowDeleting As DataTable1RowChangeEventHandler
        
        Public Event DataTable1RowDeleted As DataTable1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDataTable1Row(ByVal row As DataTable1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDataTable1Row( _
                    ByVal im_s_coy_id As String,  _
                    ByVal im_s_coy_name As String,  _
                    ByVal id_product_desc As String,  _
                    ByVal id_received_qty As Integer,  _
                    ByVal id_unit_cost As Decimal,  _
                    ByVal ic_coy_name As String,  _
                    ByVal ic_addr_line1 As String,  _
                    ByVal ic_addr_line2 As String,  _
                    ByVal ic_addr_line3 As String,  _
                    ByVal ic_postcode As String,  _
                    ByVal ic_city As String,  _
                    ByVal CODE_DESC As String,  _
                    ByVal CODE_DESC1 As String,  _
                    ByVal ic_phone As String,  _
                    ByVal ic_fax As String,  _
                    ByVal CM_COY_NAME As String,  _
                    ByVal CM_ADDR_LINE1 As String,  _
                    ByVal CM_ADDR_LINE2 As String,  _
                    ByVal CM_ADDR_LINE3 As String,  _
                    ByVal CM_POSTCODE As String,  _
                    ByVal CM_CITY As String,  _
                    ByVal CODE_DESC2 As String,  _
                    ByVal CODE_DESC3 As String,  _
                    ByVal CM_PHONE As String,  _
                    ByVal CM_FAX As String,  _
                    ByVal DNNo As String,  _
                    ByVal Amount As String,  _
                    ByVal im_invoice_type As String,  _
                    ByVal im_currency_code As String,  _
                    ByVal AmountWithExg As String,  _
                    ByVal IM_PAYMENT_NO As String,  _
                    ByVal im_invoice_no As String,  _
                    ByVal im_created_by As String,  _
                    ByVal im_exchange_rate As Double,  _
                    ByVal id_dr_exchange_rate As Double,  _
                    ByVal id_dr_currency As String,  _
                    ByVal im_payment_term As String,  _
                    ByVal id_received_qty1 As Decimal,  _
                    ByVal header As String,  _
                    ByVal id_gst_value As Decimal,  _
                    ByVal totalwithGST As Decimal) As DataTable1Row
            Dim rowDataTable1Row As DataTable1Row = CType(Me.NewRow,DataTable1Row)
            Dim columnValuesArray() As Object = New Object() {im_s_coy_id, im_s_coy_name, id_product_desc, id_received_qty, id_unit_cost, ic_coy_name, ic_addr_line1, ic_addr_line2, ic_addr_line3, ic_postcode, ic_city, CODE_DESC, CODE_DESC1, ic_phone, ic_fax, CM_COY_NAME, CM_ADDR_LINE1, CM_ADDR_LINE2, CM_ADDR_LINE3, CM_POSTCODE, CM_CITY, CODE_DESC2, CODE_DESC3, CM_PHONE, CM_FAX, DNNo, Amount, im_invoice_type, im_currency_code, AmountWithExg, IM_PAYMENT_NO, im_invoice_no, im_created_by, im_exchange_rate, id_dr_exchange_rate, id_dr_currency, im_payment_term, id_received_qty1, header, id_gst_value, totalwithGST}
            rowDataTable1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowDataTable1Row)
            Return rowDataTable1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DataTable1DataTable = CType(MyBase.Clone,DataTable1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DataTable1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnim_s_coy_id = MyBase.Columns("im_s_coy_id")
            Me.columnim_s_coy_name = MyBase.Columns("im_s_coy_name")
            Me.columnid_product_desc = MyBase.Columns("id_product_desc")
            Me.columnid_received_qty = MyBase.Columns("id_received_qty")
            Me.columnid_unit_cost = MyBase.Columns("id_unit_cost")
            Me.columnic_coy_name = MyBase.Columns("ic_coy_name")
            Me.columnic_addr_line1 = MyBase.Columns("ic_addr_line1")
            Me.columnic_addr_line2 = MyBase.Columns("ic_addr_line2")
            Me.columnic_addr_line3 = MyBase.Columns("ic_addr_line3")
            Me.columnic_postcode = MyBase.Columns("ic_postcode")
            Me.columnic_city = MyBase.Columns("ic_city")
            Me.columnCODE_DESC = MyBase.Columns("CODE_DESC")
            Me.columnCODE_DESC1 = MyBase.Columns("CODE_DESC1")
            Me.columnic_phone = MyBase.Columns("ic_phone")
            Me.columnic_fax = MyBase.Columns("ic_fax")
            Me.columnCM_COY_NAME = MyBase.Columns("CM_COY_NAME")
            Me.columnCM_ADDR_LINE1 = MyBase.Columns("CM_ADDR_LINE1")
            Me.columnCM_ADDR_LINE2 = MyBase.Columns("CM_ADDR_LINE2")
            Me.columnCM_ADDR_LINE3 = MyBase.Columns("CM_ADDR_LINE3")
            Me.columnCM_POSTCODE = MyBase.Columns("CM_POSTCODE")
            Me.columnCM_CITY = MyBase.Columns("CM_CITY")
            Me.columnCODE_DESC2 = MyBase.Columns("CODE_DESC2")
            Me.columnCODE_DESC3 = MyBase.Columns("CODE_DESC3")
            Me.columnCM_PHONE = MyBase.Columns("CM_PHONE")
            Me.columnCM_FAX = MyBase.Columns("CM_FAX")
            Me.columnDNNo = MyBase.Columns("DNNo")
            Me.columnAmount = MyBase.Columns("Amount")
            Me.columnim_invoice_type = MyBase.Columns("im_invoice_type")
            Me.columnim_currency_code = MyBase.Columns("im_currency_code")
            Me.columnAmountWithExg = MyBase.Columns("AmountWithExg")
            Me.columnIM_PAYMENT_NO = MyBase.Columns("IM_PAYMENT_NO")
            Me.columnim_invoice_no = MyBase.Columns("im_invoice_no")
            Me.columnim_created_by = MyBase.Columns("im_created_by")
            Me.columnim_exchange_rate = MyBase.Columns("im_exchange_rate")
            Me.columnid_dr_exchange_rate = MyBase.Columns("id_dr_exchange_rate")
            Me.columnid_dr_currency = MyBase.Columns("id_dr_currency")
            Me.columnim_payment_term = MyBase.Columns("im_payment_term")
            Me.columnid_received_qty1 = MyBase.Columns("id_received_qty1")
            Me.columnheader = MyBase.Columns("header")
            Me.columnid_gst_value = MyBase.Columns("id_gst_value")
            Me.columntotalwithGST = MyBase.Columns("totalwithGST")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnim_s_coy_id = New Global.System.Data.DataColumn("im_s_coy_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnim_s_coy_id)
            Me.columnim_s_coy_name = New Global.System.Data.DataColumn("im_s_coy_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnim_s_coy_name)
            Me.columnid_product_desc = New Global.System.Data.DataColumn("id_product_desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_product_desc)
            Me.columnid_received_qty = New Global.System.Data.DataColumn("id_received_qty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_received_qty)
            Me.columnid_unit_cost = New Global.System.Data.DataColumn("id_unit_cost", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_unit_cost)
            Me.columnic_coy_name = New Global.System.Data.DataColumn("ic_coy_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnic_coy_name)
            Me.columnic_addr_line1 = New Global.System.Data.DataColumn("ic_addr_line1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnic_addr_line1)
            Me.columnic_addr_line2 = New Global.System.Data.DataColumn("ic_addr_line2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnic_addr_line2)
            Me.columnic_addr_line3 = New Global.System.Data.DataColumn("ic_addr_line3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnic_addr_line3)
            Me.columnic_postcode = New Global.System.Data.DataColumn("ic_postcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnic_postcode)
            Me.columnic_city = New Global.System.Data.DataColumn("ic_city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnic_city)
            Me.columnCODE_DESC = New Global.System.Data.DataColumn("CODE_DESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODE_DESC)
            Me.columnCODE_DESC1 = New Global.System.Data.DataColumn("CODE_DESC1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODE_DESC1)
            Me.columnic_phone = New Global.System.Data.DataColumn("ic_phone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnic_phone)
            Me.columnic_fax = New Global.System.Data.DataColumn("ic_fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnic_fax)
            Me.columnCM_COY_NAME = New Global.System.Data.DataColumn("CM_COY_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_COY_NAME)
            Me.columnCM_ADDR_LINE1 = New Global.System.Data.DataColumn("CM_ADDR_LINE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_ADDR_LINE1)
            Me.columnCM_ADDR_LINE2 = New Global.System.Data.DataColumn("CM_ADDR_LINE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_ADDR_LINE2)
            Me.columnCM_ADDR_LINE3 = New Global.System.Data.DataColumn("CM_ADDR_LINE3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_ADDR_LINE3)
            Me.columnCM_POSTCODE = New Global.System.Data.DataColumn("CM_POSTCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_POSTCODE)
            Me.columnCM_CITY = New Global.System.Data.DataColumn("CM_CITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_CITY)
            Me.columnCODE_DESC2 = New Global.System.Data.DataColumn("CODE_DESC2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODE_DESC2)
            Me.columnCODE_DESC3 = New Global.System.Data.DataColumn("CODE_DESC3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODE_DESC3)
            Me.columnCM_PHONE = New Global.System.Data.DataColumn("CM_PHONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_PHONE)
            Me.columnCM_FAX = New Global.System.Data.DataColumn("CM_FAX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCM_FAX)
            Me.columnDNNo = New Global.System.Data.DataColumn("DNNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNNo)
            Me.columnAmount = New Global.System.Data.DataColumn("Amount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmount)
            Me.columnim_invoice_type = New Global.System.Data.DataColumn("im_invoice_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnim_invoice_type)
            Me.columnim_currency_code = New Global.System.Data.DataColumn("im_currency_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnim_currency_code)
            Me.columnAmountWithExg = New Global.System.Data.DataColumn("AmountWithExg", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmountWithExg)
            Me.columnIM_PAYMENT_NO = New Global.System.Data.DataColumn("IM_PAYMENT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM_PAYMENT_NO)
            Me.columnim_invoice_no = New Global.System.Data.DataColumn("im_invoice_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnim_invoice_no)
            Me.columnim_created_by = New Global.System.Data.DataColumn("im_created_by", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnim_created_by)
            Me.columnim_exchange_rate = New Global.System.Data.DataColumn("im_exchange_rate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnim_exchange_rate)
            Me.columnid_dr_exchange_rate = New Global.System.Data.DataColumn("id_dr_exchange_rate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_dr_exchange_rate)
            Me.columnid_dr_currency = New Global.System.Data.DataColumn("id_dr_currency", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_dr_currency)
            Me.columnim_payment_term = New Global.System.Data.DataColumn("im_payment_term", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnim_payment_term)
            Me.columnid_received_qty1 = New Global.System.Data.DataColumn("id_received_qty1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_received_qty1)
            Me.columnheader = New Global.System.Data.DataColumn("header", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnheader)
            Me.columnid_gst_value = New Global.System.Data.DataColumn("id_gst_value", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_gst_value)
            Me.columntotalwithGST = New Global.System.Data.DataColumn("totalwithGST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotalwithGST)
            Me.columnim_s_coy_id.MaxLength = 20
            Me.columnim_s_coy_name.MaxLength = 100
            Me.columnid_product_desc.MaxLength = 500
            Me.columnic_coy_name.AllowDBNull = false
            Me.columnic_coy_name.MaxLength = 100
            Me.columnic_addr_line1.MaxLength = 255
            Me.columnic_addr_line2.MaxLength = 255
            Me.columnic_addr_line3.MaxLength = 255
            Me.columnic_postcode.MaxLength = 5
            Me.columnic_city.MaxLength = 50
            Me.columnCODE_DESC.MaxLength = 50
            Me.columnCODE_DESC1.MaxLength = 50
            Me.columnic_phone.MaxLength = 20
            Me.columnic_fax.MaxLength = 20
            Me.columnCM_COY_NAME.AllowDBNull = false
            Me.columnCM_COY_NAME.MaxLength = 100
            Me.columnCM_ADDR_LINE1.MaxLength = 255
            Me.columnCM_ADDR_LINE2.MaxLength = 255
            Me.columnCM_ADDR_LINE3.MaxLength = 255
            Me.columnCM_POSTCODE.MaxLength = 10
            Me.columnCM_CITY.MaxLength = 50
            Me.columnCODE_DESC2.MaxLength = 50
            Me.columnCODE_DESC3.MaxLength = 50
            Me.columnCM_PHONE.MaxLength = 20
            Me.columnCM_FAX.MaxLength = 20
            Me.columnDNNo.AllowDBNull = false
            Me.columnAmount.MaxLength = 74
            Me.columnim_invoice_type.MaxLength = 6
            Me.columnim_currency_code.MaxLength = 10
            Me.columnAmountWithExg.MaxLength = 63
            Me.columnIM_PAYMENT_NO.MaxLength = 40
            Me.columnim_invoice_no.MaxLength = 50
            Me.columnim_created_by.MaxLength = 20
            Me.columnid_dr_currency.MaxLength = 10
            Me.columnim_payment_term.MaxLength = 10
            Me.columnid_received_qty1.Caption = "id_received_qty"
            Me.columnheader.AllowDBNull = false
            Me.columnid_gst_value.AllowDBNull = false
            Me.columntotalwithGST.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDataTable1Row() As DataTable1Row
            Return CType(Me.NewRow,DataTable1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DataTable1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DataTable1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DataTable1RowChangedEvent) Is Nothing) Then
                RaiseEvent DataTable1RowChanged(Me, New DataTable1RowChangeEvent(CType(e.Row,DataTable1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DataTable1RowChangingEvent) Is Nothing) Then
                RaiseEvent DataTable1RowChanging(Me, New DataTable1RowChangeEvent(CType(e.Row,DataTable1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DataTable1RowDeletedEvent) Is Nothing) Then
                RaiseEvent DataTable1RowDeleted(Me, New DataTable1RowChangeEvent(CType(e.Row,DataTable1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DataTable1RowDeletingEvent) Is Nothing) Then
                RaiseEvent DataTable1RowDeleting(Me, New DataTable1RowChangeEvent(CType(e.Row,DataTable1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDataTable1Row(ByVal row As DataTable1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsDebitNote = New dsDebitNote
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DataTable1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class DataTable1Row
        Inherits Global.System.Data.DataRow
        
        Private tableDataTable1 As DataTable1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDataTable1 = CType(Me.Table,DataTable1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property im_s_coy_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.im_s_coy_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'im_s_coy_id' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.im_s_coy_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property im_s_coy_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.im_s_coy_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'im_s_coy_name' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.im_s_coy_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id_product_desc() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.id_product_descColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id_product_desc' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.id_product_descColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id_received_qty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.id_received_qtyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id_received_qty' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.id_received_qtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id_unit_cost() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.id_unit_costColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id_unit_cost' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.id_unit_costColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ic_coy_name() As String
            Get
                Return CType(Me(Me.tableDataTable1.ic_coy_nameColumn),String)
            End Get
            Set
                Me(Me.tableDataTable1.ic_coy_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ic_addr_line1() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.ic_addr_line1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ic_addr_line1' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.ic_addr_line1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ic_addr_line2() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.ic_addr_line2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ic_addr_line2' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.ic_addr_line2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ic_addr_line3() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.ic_addr_line3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ic_addr_line3' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.ic_addr_line3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ic_postcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.ic_postcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ic_postcode' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.ic_postcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ic_city() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.ic_cityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ic_city' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.ic_cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODE_DESC() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.CODE_DESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODE_DESC' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.CODE_DESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODE_DESC1() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.CODE_DESC1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODE_DESC1' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.CODE_DESC1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ic_phone() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.ic_phoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ic_phone' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.ic_phoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ic_fax() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.ic_faxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ic_fax' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.ic_faxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_COY_NAME() As String
            Get
                Return CType(Me(Me.tableDataTable1.CM_COY_NAMEColumn),String)
            End Get
            Set
                Me(Me.tableDataTable1.CM_COY_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_ADDR_LINE1() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.CM_ADDR_LINE1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_ADDR_LINE1' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.CM_ADDR_LINE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_ADDR_LINE2() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.CM_ADDR_LINE2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_ADDR_LINE2' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.CM_ADDR_LINE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_ADDR_LINE3() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.CM_ADDR_LINE3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_ADDR_LINE3' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.CM_ADDR_LINE3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_POSTCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.CM_POSTCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_POSTCODE' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.CM_POSTCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_CITY() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.CM_CITYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_CITY' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.CM_CITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODE_DESC2() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.CODE_DESC2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODE_DESC2' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.CODE_DESC2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODE_DESC3() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.CODE_DESC3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODE_DESC3' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.CODE_DESC3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_PHONE() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.CM_PHONEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_PHONE' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.CM_PHONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CM_FAX() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.CM_FAXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CM_FAX' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.CM_FAXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DNNo() As String
            Get
                Return CType(Me(Me.tableDataTable1.DNNoColumn),String)
            End Get
            Set
                Me(Me.tableDataTable1.DNNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Amount() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.AmountColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amount' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property im_invoice_type() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.im_invoice_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'im_invoice_type' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.im_invoice_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property im_currency_code() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.im_currency_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'im_currency_code' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.im_currency_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AmountWithExg() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.AmountWithExgColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AmountWithExg' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.AmountWithExgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_PAYMENT_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.IM_PAYMENT_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM_PAYMENT_NO' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.IM_PAYMENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property im_invoice_no() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.im_invoice_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'im_invoice_no' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.im_invoice_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property im_created_by() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.im_created_byColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'im_created_by' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.im_created_byColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property im_exchange_rate() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.im_exchange_rateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'im_exchange_rate' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.im_exchange_rateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id_dr_exchange_rate() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.id_dr_exchange_rateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id_dr_exchange_rate' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.id_dr_exchange_rateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id_dr_currency() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.id_dr_currencyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id_dr_currency' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.id_dr_currencyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property im_payment_term() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.im_payment_termColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'im_payment_term' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.im_payment_termColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id_received_qty1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.id_received_qty1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id_received_qty1' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.id_received_qty1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property header() As String
            Get
                Return CType(Me(Me.tableDataTable1.headerColumn),String)
            End Get
            Set
                Me(Me.tableDataTable1.headerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id_gst_value() As Decimal
            Get
                Return CType(Me(Me.tableDataTable1.id_gst_valueColumn),Decimal)
            End Get
            Set
                Me(Me.tableDataTable1.id_gst_valueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property totalwithGST() As Decimal
            Get
                Return CType(Me(Me.tableDataTable1.totalwithGSTColumn),Decimal)
            End Get
            Set
                Me(Me.tableDataTable1.totalwithGSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isim_s_coy_idNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.im_s_coy_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setim_s_coy_idNull()
            Me(Me.tableDataTable1.im_s_coy_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isim_s_coy_nameNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.im_s_coy_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setim_s_coy_nameNull()
            Me(Me.tableDataTable1.im_s_coy_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isid_product_descNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.id_product_descColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setid_product_descNull()
            Me(Me.tableDataTable1.id_product_descColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isid_received_qtyNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.id_received_qtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setid_received_qtyNull()
            Me(Me.tableDataTable1.id_received_qtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isid_unit_costNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.id_unit_costColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setid_unit_costNull()
            Me(Me.tableDataTable1.id_unit_costColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isic_addr_line1Null() As Boolean
            Return Me.IsNull(Me.tableDataTable1.ic_addr_line1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setic_addr_line1Null()
            Me(Me.tableDataTable1.ic_addr_line1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isic_addr_line2Null() As Boolean
            Return Me.IsNull(Me.tableDataTable1.ic_addr_line2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setic_addr_line2Null()
            Me(Me.tableDataTable1.ic_addr_line2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isic_addr_line3Null() As Boolean
            Return Me.IsNull(Me.tableDataTable1.ic_addr_line3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setic_addr_line3Null()
            Me(Me.tableDataTable1.ic_addr_line3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isic_postcodeNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.ic_postcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setic_postcodeNull()
            Me(Me.tableDataTable1.ic_postcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isic_cityNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.ic_cityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setic_cityNull()
            Me(Me.tableDataTable1.ic_cityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODE_DESCNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.CODE_DESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODE_DESCNull()
            Me(Me.tableDataTable1.CODE_DESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODE_DESC1Null() As Boolean
            Return Me.IsNull(Me.tableDataTable1.CODE_DESC1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODE_DESC1Null()
            Me(Me.tableDataTable1.CODE_DESC1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isic_phoneNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.ic_phoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setic_phoneNull()
            Me(Me.tableDataTable1.ic_phoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isic_faxNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.ic_faxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setic_faxNull()
            Me(Me.tableDataTable1.ic_faxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_ADDR_LINE1Null() As Boolean
            Return Me.IsNull(Me.tableDataTable1.CM_ADDR_LINE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_ADDR_LINE1Null()
            Me(Me.tableDataTable1.CM_ADDR_LINE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_ADDR_LINE2Null() As Boolean
            Return Me.IsNull(Me.tableDataTable1.CM_ADDR_LINE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_ADDR_LINE2Null()
            Me(Me.tableDataTable1.CM_ADDR_LINE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_ADDR_LINE3Null() As Boolean
            Return Me.IsNull(Me.tableDataTable1.CM_ADDR_LINE3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_ADDR_LINE3Null()
            Me(Me.tableDataTable1.CM_ADDR_LINE3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_POSTCODENull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.CM_POSTCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_POSTCODENull()
            Me(Me.tableDataTable1.CM_POSTCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_CITYNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.CM_CITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_CITYNull()
            Me(Me.tableDataTable1.CM_CITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODE_DESC2Null() As Boolean
            Return Me.IsNull(Me.tableDataTable1.CODE_DESC2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODE_DESC2Null()
            Me(Me.tableDataTable1.CODE_DESC2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODE_DESC3Null() As Boolean
            Return Me.IsNull(Me.tableDataTable1.CODE_DESC3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODE_DESC3Null()
            Me(Me.tableDataTable1.CODE_DESC3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_PHONENull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.CM_PHONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_PHONENull()
            Me(Me.tableDataTable1.CM_PHONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCM_FAXNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.CM_FAXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCM_FAXNull()
            Me(Me.tableDataTable1.CM_FAXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAmountNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAmountNull()
            Me(Me.tableDataTable1.AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isim_invoice_typeNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.im_invoice_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setim_invoice_typeNull()
            Me(Me.tableDataTable1.im_invoice_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isim_currency_codeNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.im_currency_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setim_currency_codeNull()
            Me(Me.tableDataTable1.im_currency_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAmountWithExgNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.AmountWithExgColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAmountWithExgNull()
            Me(Me.tableDataTable1.AmountWithExgColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIM_PAYMENT_NONull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.IM_PAYMENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIM_PAYMENT_NONull()
            Me(Me.tableDataTable1.IM_PAYMENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isim_invoice_noNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.im_invoice_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setim_invoice_noNull()
            Me(Me.tableDataTable1.im_invoice_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isim_created_byNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.im_created_byColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setim_created_byNull()
            Me(Me.tableDataTable1.im_created_byColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isim_exchange_rateNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.im_exchange_rateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setim_exchange_rateNull()
            Me(Me.tableDataTable1.im_exchange_rateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isid_dr_exchange_rateNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.id_dr_exchange_rateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setid_dr_exchange_rateNull()
            Me(Me.tableDataTable1.id_dr_exchange_rateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isid_dr_currencyNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.id_dr_currencyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setid_dr_currencyNull()
            Me(Me.tableDataTable1.id_dr_currencyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isim_payment_termNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.im_payment_termColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setim_payment_termNull()
            Me(Me.tableDataTable1.im_payment_termColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isid_received_qty1Null() As Boolean
            Return Me.IsNull(Me.tableDataTable1.id_received_qty1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setid_received_qty1Null()
            Me(Me.tableDataTable1.id_received_qty1Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class DataTable1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DataTable1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As DataTable1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As DataTable1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsDebitNoteTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class DataTable1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DataTable1"
            tableMapping.ColumnMappings.Add("im_s_coy_id", "im_s_coy_id")
            tableMapping.ColumnMappings.Add("im_s_coy_name", "im_s_coy_name")
            tableMapping.ColumnMappings.Add("id_product_desc", "id_product_desc")
            tableMapping.ColumnMappings.Add("id_unit_cost", "id_unit_cost")
            tableMapping.ColumnMappings.Add("ic_coy_name", "ic_coy_name")
            tableMapping.ColumnMappings.Add("ic_addr_line1", "ic_addr_line1")
            tableMapping.ColumnMappings.Add("ic_addr_line2", "ic_addr_line2")
            tableMapping.ColumnMappings.Add("ic_addr_line3", "ic_addr_line3")
            tableMapping.ColumnMappings.Add("ic_postcode", "ic_postcode")
            tableMapping.ColumnMappings.Add("ic_city", "ic_city")
            tableMapping.ColumnMappings.Add("CODE_DESC", "CODE_DESC")
            tableMapping.ColumnMappings.Add("CODE_DESC1", "CODE_DESC1")
            tableMapping.ColumnMappings.Add("ic_phone", "ic_phone")
            tableMapping.ColumnMappings.Add("ic_fax", "ic_fax")
            tableMapping.ColumnMappings.Add("CM_COY_NAME", "CM_COY_NAME")
            tableMapping.ColumnMappings.Add("CM_ADDR_LINE1", "CM_ADDR_LINE1")
            tableMapping.ColumnMappings.Add("CM_ADDR_LINE2", "CM_ADDR_LINE2")
            tableMapping.ColumnMappings.Add("CM_ADDR_LINE3", "CM_ADDR_LINE3")
            tableMapping.ColumnMappings.Add("CM_POSTCODE", "CM_POSTCODE")
            tableMapping.ColumnMappings.Add("CM_CITY", "CM_CITY")
            tableMapping.ColumnMappings.Add("CODE_DESC2", "CODE_DESC2")
            tableMapping.ColumnMappings.Add("CODE_DESC3", "CODE_DESC3")
            tableMapping.ColumnMappings.Add("CM_PHONE", "CM_PHONE")
            tableMapping.ColumnMappings.Add("CM_FAX", "CM_FAX")
            tableMapping.ColumnMappings.Add("DNNo", "DNNo")
            tableMapping.ColumnMappings.Add("Amount", "Amount")
            tableMapping.ColumnMappings.Add("im_invoice_type", "im_invoice_type")
            tableMapping.ColumnMappings.Add("im_currency_code", "im_currency_code")
            tableMapping.ColumnMappings.Add("AmountWithExg", "AmountWithExg")
            tableMapping.ColumnMappings.Add("IM_PAYMENT_NO", "IM_PAYMENT_NO")
            tableMapping.ColumnMappings.Add("im_invoice_no", "im_invoice_no")
            tableMapping.ColumnMappings.Add("im_created_by", "im_created_by")
            tableMapping.ColumnMappings.Add("im_exchange_rate", "im_exchange_rate")
            tableMapping.ColumnMappings.Add("id_dr_exchange_rate", "id_dr_exchange_rate")
            tableMapping.ColumnMappings.Add("id_dr_currency", "id_dr_currency")
            tableMapping.ColumnMappings.Add("im_payment_term", "im_payment_term")
            tableMapping.ColumnMappings.Add("id_received_qty", "id_received_qty1")
            tableMapping.ColumnMappings.Add("header", "header")
            tableMapping.ColumnMappings.Add("id_gst_value", "id_gst_value")
            tableMapping.ColumnMappings.Add("totalwithGST", "totalwithGST")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("eprocureConnectionString1").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT '' as DNNo,im_s_coy_id,im_s_coy_name,id_product_desc, im_invoice_type, id_"& _ 
                "received_qty,id_unit_cost,FORMAT((id_received_qty*id_unit_cost),2) AS Amount,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"F"& _ 
                "ORMAT((id_received_qty*id_unit_cost*im_exchange_rate),2) AS AmountWithExg,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"im_c"& _ 
                "urrency_code,ic_coy_name,ic_addr_line1, ic_addr_line2,ic_addr_line3,ic_postcode,"& _ 
                "ic_city, cm2.code_desc,cm1.code_desc,ic_phone,ic_fax,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"cm_coy_name,cm_addr_line1"& _ 
                ",cm_addr_line2, cm_addr_line3,cm_postcode,cm_city,cm4.code_desc,cm3.code_desc,cm"& _ 
                "_phone,cm_fax,IM_PAYMENT_NO,im_invoice_no,im_created_by,im_exchange_rate,id_dr_e"& _ 
                "xchange_rate,id_dr_currency,im_payment_term, '' as header, 0.0 as id_gst_value, "& _ 
                "0.0 as totalwithGST "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM invoice_mstr"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN invoice_details ON id_invoice"& _ 
                "_no = im_invoice_no"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INNER JOIN ipp_company ON ic_other_b_coy_code = id_pay_for"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INNER JOIN company_mstr ON im_b_coy_id = cm_coy_id"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INNER JOIN code_mstr cm1 ON"& _ 
                " ic_country = cm1.code_abbr"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INNER JOIN code_mstr cm2 ON ic_state = cm2.code_abb"& _ 
                "r"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INNER JOIN code_mstr cm3 ON cm_country = cm3.code_abbr"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INNER JOIN code_mstr "& _ 
                "cm4 ON cm_state = cm4.code_abbr"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE im_invoice_status = 4 AND im_invoice_type"& _ 
                " IS NOT NULL AND im_payment_date = CURRENT_DATE AND im_b_coy_id = 'tanac'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER"& _ 
                " BY ic_coy_name,im_s_coy_id"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsDebitNote.DataTable1DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsDebitNote.DataTable1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsDebitNote.DataTable1DataTable = New dsDebitNote.DataTable1DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
